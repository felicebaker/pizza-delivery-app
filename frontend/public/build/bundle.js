(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"./scripts/main.js":[function(require,module,exports){
// Use ES6 javascript, auto transpiled into ES5 - see http://babeljs.io
//
// jQuery already loaded as external Browserify dependency, availble here as $
//
// Pizza Impulse Main Entrypoint
//
'use strict';

require('./vendor/swiper.jquery.min');
require('./vendor/jquery.autotab');
require('./vendor/jquery.is');

if ($('.promo').length > 0) {
    var tourSwiper = new Swiper('.swiper-container', {
        pagination: '.swiper-pagination'
    });
}

$('.js-delivery-times-toggle').on('click', function (ev) {
    $(this).parent('.preferences-folder').toggleClass('is-open');
    $(this).siblings('.preferences-folder__content').slideToggle();
});

$('.js-time-selector-toggle').on('click', function (ev) {
    $('.time-selector').slideToggle();
});

$('.js-day-selector-toggle').on('click', function (ev) {
    // we can't stopPropagation and preventDefault here as that stops
    // the default label:checked behaviour - therefore we need to manually
    // simulate a slideToggle() call to prevent on click event firing twice
    if ($(this).data('isOpen') === true) {
        $(this).parent().siblings('.time-selector__times').slideUp();
        $(this).data('isOpen', false);
    } else {
        $(this).parent().siblings('.time-selector__times').slideDown();
        $(this).data('isOpen', true);
    }
});

$('.js-creditcard-autotab').autotab({
    format: 'number',
    maxlength: 4
});

$('.js-creditcard-year').on('change', function () {
    if ($(this).is(/\d{4}/)) {
        $(this).removeClass('is-error');
    } else {
        $(this).addClass('is-error');
    }
});

$('.js-creditcard-pin').on('change', function () {
    if ($(this).is(/\d{3}/)) {
        $(this).removeClass('is-error');
    } else {
        $(this).addClass('is-error');
    }
});

},{"./vendor/jquery.autotab":"/Users/chris/Workbench/pizzaimpulse.com/scripts/vendor/jquery.autotab.js","./vendor/jquery.is":"/Users/chris/Workbench/pizzaimpulse.com/scripts/vendor/jquery.is.js","./vendor/swiper.jquery.min":"/Users/chris/Workbench/pizzaimpulse.com/scripts/vendor/swiper.jquery.min.js"}],"/Users/chris/Workbench/pizzaimpulse.com/scripts/vendor/jquery.autotab.js":[function(require,module,exports){
/**
 * Autotab - jQuery plugin 1.9.2
 * https://github.com/Mathachew/jquery-autotab
 * 
 * Copyright (c) 2008, 2015 Matthew Miller
 * 
 * Licensed under the MIT licensing:
 *   http://www.opensource.org/licenses/mit-license.php
 */

'use strict';

(function ($) {
    var platform = navigator.platform,
        settings = {
        tabPause: 800,
        focusChange: null,
        iOS: platform === 'iPad' || platform === 'iPhone' || platform === 'iPod',
        firefox: typeof InstallTrigger !== 'undefined',
        ie11: !window.ActiveXObject && 'ActiveXObject' in window
    };

    var setSettings = function setSettings(e, settings) {
        if (settings === null || typeof settings === 'undefined') {
            return;
        }

        for (var key in settings) {
            $(e).data('autotab-' + key, settings[key]);
        }
    };

    var getSettings = function getSettings(e) {
        var settings = {
            arrowKey: false,
            format: 'all',
            loaded: false,
            disabled: false,
            pattern: null,
            uppercase: false,
            lowercase: false,
            nospace: false,
            maxlength: 2147483647,
            target: null,
            previous: null,
            trigger: null,
            originalValue: '',
            changed: false,
            editable: e.type === 'text' || e.type === 'password' || e.type === 'textarea' || e.type === 'tel' || e.type === 'number' || e.type === 'email' || e.type === 'search' || e.type === 'url',
            filterable: e.type === 'text' || e.type === 'password' || e.type === 'textarea',
            tabOnSelect: false
        };

        // If $.autotab.selectFilterByClas is true and the format not specified, automatically select an element's format based on a matching class name.
        // The first matched element becomes the selected format for the filter.
        if ($.autotab.selectFilterByClass === true && typeof $(e).data('autotab-format') === 'undefined') {
            var classes = ['all', 'text', 'alpha', 'number', 'numeric', 'alphanumeric', 'hex', 'hexadecimal', 'custom'];

            for (var key in classes) {
                if ($(e).hasClass(classes[key])) {
                    settings.format = classes[key];
                    break;
                }
            }
        }

        for (var key in settings) {
            if (typeof $(e).data('autotab-' + key) !== 'undefined') {
                settings[key] = $(e).data('autotab-' + key);
            }
        }

        // Save settings on first run
        if (!settings.loaded) {
            if (settings.trigger !== null && typeof settings.trigger === 'string') {
                settings.trigger = settings.trigger.toString();
            }

            setSettings(e, settings);
        }

        return settings;
    };

    var queryObject = function queryObject(e) {
        return typeof e !== 'undefined' && (typeof e === 'string' || !(e instanceof jQuery));
    };

    var getSelection = function getSelection(e) {
        var start = 0,
            end = 0,
            selectionType = 0;

        if (e.type === 'text' || e.type === 'password' || e.type === 'textarea') {
            if (typeof e.selectionStart === 'number' && typeof e.selectionEnd === 'number') {
                // Non-IE browsers and IE 9+
                start = e.selectionStart;
                end = e.selectionEnd;
                selectionType = 1;
            } else if (document.selection && document.selection.createRange) {
                // For IE up to version 8
                var selectionRange = document.selection.createRange(),
                    textInputRange = e.createTextRange(),
                    precedingRange = e.createTextRange(),
                    bookmark = selectionRange.getBookmark();
                textInputRange.moveToBookmark(bookmark);
                precedingRange.setEndPoint('EndToStart', textInputRange);
                start = precedingRange.text.length;
                end = start + selectionRange.text.length;
                selectionType = 2;
            }
        }

        return {
            start: start,
            end: end,
            selectionType: selectionType
        };
    };

    $.autotab = function (options) {
        if (typeof options !== 'object') {
            options = {};
        }

        $(':input').autotab(options);
    };

    $.autotab.selectFilterByClass = false;

    $.autotab.next = function () {
        var e = $(document.activeElement);

        if (e.length) {
            e.trigger('autotab-next');
        }
    };

    $.autotab.previous = function () {
        var e = $(document.activeElement);

        if (e.length) {
            e.trigger('autotab-previous');
        }
    };

    $.autotab.remove = function (e) {
        queryObject(e) ? $(e).autotab('remove') : $(':input').autotab('remove');
    };

    $.autotab.restore = function (e) {
        queryObject(e) ? $(e).autotab('restore') : $(':input').autotab('restore');
    };

    $.autotab.refresh = function (e) {
        queryObject(e) ? $(e).autotab('refresh') : $(':input').autotab('refresh');
    };

    $.fn.autotab = function (method, options) {
        if (!this.length) {
            return this;
        }

        // Remove hidden fields since tabbing backwards is supported on different form elements
        var filtered = $.grep(this, function (e, i) {
            return e.type != 'hidden';
        });

        // Apply filter options
        if (method == 'filter') {
            if (typeof options === 'string' || typeof options === 'function') {
                options = { format: options };
            }

            for (var i = 0, length = filtered.length; i < length; i++) {
                var defaults = getSettings(filtered[i]),
                    newOptions = options;

                // Retain the established target/previous values as this area is for filtering only
                newOptions.target = defaults.target;
                newOptions.previous = defaults.previous;

                $.extend(defaults, newOptions);

                if (!defaults.loaded) {
                    defaults.disabled = true;
                    autotabBind(filtered[i], newOptions);
                } else {
                    setSettings(filtered[i], defaults);
                }
            }
        }
        // Disable auto tab and filtering
        else if (method == 'remove' || method == 'destroy' || method == 'disable') {
            for (var i = 0, length = filtered.length; i < length; i++) {
                var defaults = getSettings(filtered[i]);

                defaults.disabled = true;

                setSettings(filtered[i], defaults);
            }
        }
        // Re-enable auto tab and filtering
        else if (method == 'restore' || method == 'enable') {
            for (var i = 0, length = filtered.length; i < length; i++) {
                var defaults = getSettings(filtered[i]);

                defaults.disabled = false;

                setSettings(filtered[i], defaults);
            }
        }
        // Refresh target/previous elements
        else if (method == 'refresh') {
            for (var i = 0, length = filtered.length; i < length; i++) {
                var defaults = getSettings(filtered[i]),
                    n = i + 1,
                    p = i - 1,
                    selectTarget = function selectTarget() {
                    if (i > 0 && n < length) {
                        defaults.target = filtered[n];
                    } else if (i > 0) {
                        defaults.target = null;
                    } else {
                        defaults.target = filtered[n];
                    }
                },
                    selectPrevious = function selectPrevious() {
                    if (i > 0 && n < length) {
                        defaults.previous = filtered[p];
                    } else if (i > 0) {
                        defaults.previous = filtered[p];
                    } else {
                        defaults.previous = null;
                    }
                };

                // Nothing was specified for the target element, so automatically set it
                if (defaults.target === null || defaults.target.selector === '') {
                    selectTarget();
                } else if (typeof defaults.target === 'string' || defaults.target.selector) {
                    defaults.target = $(typeof defaults.target === 'string' ? defaults.target : defaults.target.selector);

                    if (defaults.target.length === 0) {
                        selectTarget();
                    }
                }

                // Nothing was specified for the previous element, so automatically set it
                if (defaults.previous === null || defaults.previous.selector === '') {
                    selectPrevious();
                } else if (typeof defaults.previous === 'string' || defaults.previous.selector) {
                    defaults.previous = $(typeof defaults.previous === 'string' ? defaults.previous : defaults.previous.selector);

                    if (defaults.previous.length === 0) {
                        selectPrevious();
                    }
                }

                if (!defaults.loaded) {
                    autotabBind(filtered[i], defaults);
                } else {
                    if (queryObject(defaults.target)) {
                        defaults.target = $(defaults.target);
                    }

                    if (queryObject(defaults.previous)) {
                        defaults.previous = $(defaults.previous);
                    }

                    setSettings(filtered[i], defaults);
                }
            }
        } else {
            if (method === null || typeof method === 'undefined') {
                options = {};
            } else if (typeof method === 'string' || typeof method === 'function') {
                options = { format: method };
            } else if (typeof method === 'object') {
                options = method;
            }

            // Bind key events to element(s) passed
            if (filtered.length > 1) {
                for (var i = 0, length = filtered.length; i < length; i++) {
                    var n = i + 1,
                        p = i - 1,
                        newOptions = options;

                    if (i > 0 && n < length) {
                        newOptions.target = filtered[n];
                        newOptions.previous = filtered[p];
                    } else if (i > 0) {
                        newOptions.target = null;
                        newOptions.previous = filtered[p];
                    } else {
                        newOptions.target = filtered[n];
                        newOptions.previous = null;
                    }

                    autotabBind(filtered[i], newOptions);
                }
            } else {
                autotabBind(filtered[0], options);
            }
        }

        return this;
    };

    var filterValue = function filterValue(e, value, defaults) {
        if (typeof defaults.format === 'function') {
            return defaults.format(value, e);
        }

        var pattern = null;

        switch (defaults.format) {
            case 'text':
                pattern = new RegExp('[0-9]+', 'g');
                break;

            case 'alpha':
                pattern = new RegExp('[^a-zA-Z]+', 'g');
                break;

            case 'number':
            case 'numeric':
                pattern = new RegExp('[^0-9]+', 'g');
                break;

            case 'alphanumeric':
                pattern = new RegExp('[^0-9a-zA-Z]+', 'g');
                break;

            case 'hex':
            case 'hexadecimal':
                pattern = new RegExp('[^0-9A-Fa-f]+', 'g');
                break;

            case 'custom':
                pattern = new RegExp(defaults.pattern, 'g');
                break;

            case 'all':
            default:
                break;
        }

        if (pattern !== null) {
            value = value.replace(pattern, '');
        }

        if (defaults.nospace) {
            pattern = new RegExp('[ ]+', 'g');
            value = value.replace(pattern, '');
        }

        if (defaults.uppercase) {
            value = value.toUpperCase();
        }

        if (defaults.lowercase) {
            value = value.toLowerCase();
        }

        return value;
    };

    var autotabBind = function autotabBind(element, options) {
        var defaults = getSettings(element);

        if (defaults.disabled) {
            defaults.disabled = false;
            defaults.target = null;
            defaults.previous = null;
        }

        $.extend(defaults, options);

        // Sets targets to element based on the name or ID passed if they are not currently objects
        if (queryObject(defaults.target)) {
            defaults.target = $(defaults.target);
        }

        if (queryObject(defaults.previous)) {
            defaults.previous = $(defaults.previous);
        }

        var oldMaxlength = element.maxLength;

        if (typeof element.maxLength === 'undefined' && element.type == 'textarea') {
            oldMaxlength = element.maxLength = element.getAttribute('maxlength');
        }

        // defaults.maxlength has not changed and maxlength was specified
        if (defaults.maxlength == 2147483647 && oldMaxlength != 2147483647 && oldMaxlength != -1) {
            defaults.maxlength = oldMaxlength;
        }
        // defaults.maxlength overrides maxlength
        else if (defaults.maxlength > 0) {
            element.maxLength = defaults.maxlength;
        }
        // defaults.maxlength and maxlength have not been specified
        // A target cannot be used since there is no defined maxlength
        else {
            defaults.target = null;
        }

        if (!defaults.loaded) {
            defaults.loaded = true;
            setSettings(element, defaults);
        } else {
            setSettings(element, defaults);
            return;
        }

        // Add a change event to select lists only so that we can auto tab when a value is selected
        if (element.type == 'select-one') {
            $(element).on('change', function (e) {
                var defaults = getSettings(this);

                if (defaults.tabOnSelect) {
                    $(this).trigger('autotab-next');
                }
            });
        }

        // The 1ms timeouts allow for keypress events to complete in case a
        // custom function or exterior method calls for a manual auto tab
        $(element).on('autotab-next', function (event, defaults) {
            var self = this;
            setTimeout(function () {
                if (!defaults) {
                    defaults = getSettings(self);
                }

                var target = defaults.target;

                if (!defaults.disabled && target.length) {
                    // Using focus on iOS devices is a pain, so use the browser's next/previous buttons to proceed
                    if (!settings.iOS) {

                        // Field is disabled/readonly, so tab to next element
                        if (target.prop('disabled') || target.prop('readonly')) {
                            target.trigger('autotab-next');
                        } else {
                            // Allows the user to navigate between each charater with arrow keys
                            if (defaults.arrowKey) {
                                target.focus();
                            } else {
                                target.focus().select();
                            }
                        }

                        settings.focusChange = new Date();
                    }
                }
            }, 1);
        }).on('autotab-previous', function (event, defaults) {
            var self = this;
            setTimeout(function () {
                if (!defaults) {
                    defaults = getSettings(self);
                }

                var previous = defaults.previous;

                if (!defaults.disabled && previous.length) {
                    var value = previous.val();

                    // Field is disabled/readonly, so tab to previous element
                    if (previous.prop('disabled') || previous.prop('readonly')) {
                        previous.trigger('autotab-previous');
                    } else if (value.length && previous.data('autotab-editable') && !defaults.arrowKey) {
                        if (settings.ie11) {
                            previous.val(value.substring(0, value.length - 1)).focus();
                        } else {
                            previous.focus().val(value.substring(0, value.length - 1));
                        }

                        setSettings(previous, { changed: true });
                    } else {
                        if (defaults.arrowKey) {
                            setSettings(this, { arrowKey: false });
                        }

                        if (settings.ie11) {
                            previous.val(value).focus();
                        } else {
                            previous.focus().val(value);
                        }
                    }

                    settings.focusChange = null;
                }
            }, 1);
        }).on('focus', function () {
            setSettings(this, { originalValue: this.value });
        }).on('blur', function () {
            var defaults = getSettings(this);

            if (defaults.changed && this.value != defaults.originalValue) {
                setSettings(this, { changed: false });
                $(this).change();
            }
        }).on('keydown.autotab', function (e) {
            var defaults = getSettings(this);

            if (!defaults || defaults.disabled) {
                return true;
            }

            var selection = getSelection(this),
                keyCode = e.which || e.charCode;

            // Go to the previous element when backspace
            // is pressed in an empty input field
            if (keyCode == 8) {
                defaults.arrowKey = false;

                // Prevent the browser from of navigating to the previous page
                if (!defaults.editable) {
                    $(this).trigger('autotab-previous', defaults);
                    return false;
                }

                setSettings(this, { changed: this.value !== defaults.originalValue });

                if (this.value.length === 0) {
                    $(this).trigger('autotab-previous', defaults);
                    return;
                }
            } else if (keyCode == 9 && settings.focusChange !== null) {
                // Tab backwards
                if (e.shiftKey) {
                    settings.focusChange = null;
                    return;
                }

                if (new Date().getTime() - settings.focusChange.getTime() < settings.tabPause) {
                    settings.focusChange = null;
                    return false;
                }
            } else if (this.type !== 'range' && this.type !== 'select-one' && this.type !== 'select-multiple') {
                if (this.type !== 'tel' && this.type !== 'number' || (this.type === 'tel' || this.type === 'number') && this.value.length == 0) {
                    if (keyCode == 37 && (!defaults.editable || selection.start == 0)) {
                        defaults.arrowKey = true;
                        $(this).trigger('autotab-previous', defaults);
                    } else if (keyCode == 39 && (!defaults.editable || !defaults.filterable || selection.end == this.value.length || this.value.length == 0)) {
                        defaults.arrowKey = true;
                        $(this).trigger('autotab-next', defaults);
                    }
                }
            }
        }).on('keypress.autotab', function (e) {
            var defaults = getSettings(this),
                keyCode = e.which || e.keyCode;

            // e.charCode == 0 indicates a special key has been pressed, which only Firefox triggers
            if (!defaults || defaults.disabled || settings.firefox && e.charCode === 0 || e.ctrlKey || e.altKey || keyCode == 13 || this.disabled) {
                return true;
            }

            var keyChar = String.fromCharCode(keyCode);

            if (this.type != 'text' && this.type != 'password' && this.type != 'textarea') {
                // this.value.length is the length before the keypress event was trigged
                if (this.value.length + 1 >= defaults.maxlength) {
                    defaults.arrowKey = false;
                    $(this).trigger('autotab-next', defaults);
                }

                return !(this.value.length == defaults.maxlength);
            }

            // Prevents auto tabbing when defaults.trigger is pressed
            if (defaults.trigger !== null && defaults.trigger.indexOf(keyChar) >= 0) {
                if (settings.focusChange !== null && new Date().getTime() - settings.focusChange.getTime() < settings.tabPause) {
                    settings.focusChange = null;
                } else {
                    defaults.arrowKey = false;
                    $(this).trigger('autotab-next', defaults);
                }

                return false;
            }

            settings.focusChange = null;

            var hasValue = document.selection && document.selection.createRange ? true : keyCode > 0;

            keyChar = filterValue(this, keyChar, defaults);

            if (hasValue && (keyChar === null || keyChar === '')) {
                return false;
            }

            // Many, many thanks to Tim Down for this solution: http://stackoverflow.com/a/3923320/94656
            if (hasValue && this.value.length <= this.maxLength) {
                var selection = getSelection(this);

                // Text is fully selected, so it needs to be replaced
                if (selection.start === 0 && selection.end == this.value.length) {
                    this.value = keyChar;
                    setSettings(this, { changed: this.value != defaults.originalValue });
                } else {
                    if (this.value.length == this.maxLength && selection.start === selection.end) {
                        defaults.arrowKey = false;
                        $(this).trigger('autotab-next', defaults);
                        return false;
                    }

                    this.value = this.value.slice(0, selection.start) + keyChar + this.value.slice(selection.end);
                    setSettings(this, { changed: this.value != defaults.originalValue });
                }

                // Prevents the cursor position from being set to the end of the text box
                // This is called even if the text is fully selected and replaced due to an unexpected behavior in IE6 and up (#32)
                if (this.value.length != defaults.maxlength) {
                    selection.start++;

                    if (selection.selectionType == 1) {
                        this.selectionStart = this.selectionEnd = selection.start;
                    } else if (selection.selectionType == 2) {
                        var range = this.createTextRange();
                        range.collapse(true);
                        range.moveEnd('character', selection.start);
                        range.moveStart('character', selection.start);
                        range.select();
                    }
                }
            }

            if (this.value.length == defaults.maxlength) {
                defaults.arrowKey = false;
                $(this).trigger('autotab-next', defaults);
            }

            return false;
        }).on('drop paste', function (e) {
            var defaults = getSettings(this);

            if (!defaults) {
                return true;
            }

            this.maxLength = 2147483647;

            (function (e, originDefaults) {
                setTimeout(function () {
                    var lastIndex = -1,
                        hiddenInput = document.createElement('input');
                    hiddenInput.type = 'hidden';
                    hiddenInput.value = e.value.toLowerCase();
                    hiddenInput.originalValue = e.value;

                    e.value = filterValue(e, e.value, originDefaults).substr(0, originDefaults.maxlength);

                    var handlePaste = (function (_handlePaste) {
                        function handlePaste(_x, _x2) {
                            return _handlePaste.apply(this, arguments);
                        }

                        handlePaste.toString = function () {
                            return _handlePaste.toString();
                        };

                        return handlePaste;
                    })(function (e, previousValue) {
                        if (!e) {
                            return;
                        }

                        var defaults = getSettings(e);

                        if ($(e).prop('disabled') || $(e).prop('readonly') || !defaults.editable) {
                            $(e).trigger('autotab-next');

                            if (!settings.iOS) {
                                handlePaste(defaults.target[0], previousValue);
                            }
                            return;
                        }

                        for (var i = 0, count = previousValue.length; i < count; i++) {
                            lastIndex = hiddenInput.value.indexOf(previousValue.charAt(i).toLowerCase(), lastIndex) + 1;
                        }

                        var trimmedValue = hiddenInput.originalValue.substr(lastIndex),
                            filteredValue = filterValue(e, trimmedValue, defaults).substr(0, defaults.maxlength);

                        if (!filteredValue) {
                            return;
                        }

                        e.value = filteredValue;

                        if (filteredValue.length == defaults.maxlength) {
                            defaults.arrowKey = false;
                            $(e).trigger('autotab-next', defaults);

                            // Firefox causes all but the first and last elements to retain a select all state, so in order to
                            // effectively support arrow keys, the starting point of the selection is to the last possible cursor
                            if (settings.firefox) {
                                setTimeout(function () {
                                    e.selectionStart = e.value.length;
                                }, 1);
                            }

                            if (!settings.iOS) {
                                handlePaste(defaults.target[0], filteredValue);
                            }
                        }
                    });

                    if (e.value.length == originDefaults.maxlength) {
                        defaults.arrowKey = false;
                        $(e).trigger('autotab-next', defaults);

                        if (!settings.iOS) {
                            handlePaste(originDefaults.target[0], e.value.toLowerCase());
                        }
                    }

                    e.maxLength = originDefaults.maxlength;
                }, 1);
            })(this, defaults);
        });
    };

    // Deprecated, here for backwards compatibility
    $.fn.autotab_magic = function (focus) {
        return $(this).autotab();
    };
    $.fn.autotab_filter = function (options) {
        var defaults = {};

        if (typeof options === 'string' || typeof options === 'function') {
            defaults.format = options;
        } else {
            $.extend(defaults, options);
        }

        return $(this).autotab('filter', defaults);
    };
})(jQuery);

},{}],"/Users/chris/Workbench/pizzaimpulse.com/scripts/vendor/jquery.is.js":[function(require,module,exports){
/** 
 * is.js - v0.2.1
 * Check your data against regular expressions or known keywords.
 * http://github.com/rthor/isjs
 *
 * Licensed under the MIT license.
 * Copyright (c) 2013 Ragnar Þór Valgeirsson (rthor)
 * http://rthor.is
 */
'use strict';

(function ($) {
	// What does the is plugin do?
	$.is = $.fn.is = function () {
		// If nothing is there - then return that.
		if (this.length === 0) return this;

		// Declare variables
		var deep = false,
		    expression,
		    check,
		    value;

		// If plugin is run on the root jQuery object
		// Set up appropriate variables
		if (arguments.length === 2) {
			value = arguments[0];
			expression = arguments[1];

			// Else if the plugin is run on an DOM element
			// Set up the correct expression and value based on
			// node type.
		} else {
			var nodeName = this[0].nodeName.toLowerCase();
			expression = arguments[0];

			value = nodeName === 'input' ? this.val() : nodeName === 'p' || nodeName === 'h1' || nodeName === 'h2' || nodeName === 'h3' || nodeName === 'h4' || nodeName === 'h5' || nodeName === 'h6' || nodeName === 'a' || nodeName === 'li' || nodeName === 'blockquote' || nodeName === 'pre' || nodeName === 'code' || nodeName === 'b' || nodeName === 'strong' || nodeName === 'em' || nodeName === 'i' || nodeName === 'div' || nodeName === 'button' || nodeName === 'textarea' || nodeName === 'span' ? this.html() : this.selector;
		}

		// If expression is deep
		if (typeof expression === 'string' && expression.indexOf(':') !== -1) {
			// Set approriate variables
			expression = expression.match(/(\w+)(?:\:)(\w+)/);
			deep = expression[2];
			expression = expression[1];
		}

		// All regexes that can be tested against.
		check = {
			cc: {
				any: /^[0-9]{15,16}$/,
				AmericanExpress: /^(34)|(37)\d{14}$/,
				Discover: /^6011\d{12}$/,
				MasterCard: /^5[1-5]\d{14}$/,
				Visa: /^4\d{15}$/
			},
			datetime: /^([0-2][0-9]{3})\-([0-1][0-9])\-([0-3][0-9])T([0-5][0-9])\:([0-5][0-9])\:([0-5][0-9])(Z|([\-\+]([0-1][0-9])\:00))$/,
			email: /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
			isbn: /^(?:(?=.{17}$)97[89][ -](?:[0-9]+[ -]){2}[0-9]+[ -][0-9]|97[89][0-9]{10}|(?=.{13}$)(?:[0-9]+[ -]){2}[0-9]+[ -][0-9Xx]|[0-9]{9}[0-9Xx])$/,
			latlng: /-?\d{1,3}\.\d+/,
			phone: {
				ar: /^(?:\+|[0]{2})?(54)?(:?[\s-])*\d{4}(:?[\s-])*\d{4}$/,
				au: /^(?:\+|0)?(?:61)?\s?[2-478](?:[ -]?[0-9]){8}$/,
				fr: /^(?:0|\(?\+33\)?\s?|0033\s?)[1-79](?:[\.\-\s]?\d\d){4}$/,
				is: /^(?:\+|[0]{2})?(354)?(:?[\s-])*\d{3}(:?[\s-])*\d{4}$/,
				uk: /^(?:\+|044)?(?:\s+)?\(?(\d{1,5}|\d{4}\s*\d{1,2})\)?\s+|-(\d{1,4}(\s+|-)?\d{1,4}|(\d{6}))\d{6}$/,
				us: /^(\d{3})(:?[\s\-])*(\d{3})(:?[\s\-])*(\d{4})$/
			},
			zip: {
				ar: /^\d{4}$/,
				au: /^\d{4}$/,
				at: /^\d{4}$/,
				be: /^\d{4}$/,
				bg: /^\d{4}$/,
				br: /^\d{5}[\-]?\d{3}$/,
				ca: /^[A-Za-z]\d[A-Za-z] \d[A-Za-z]\d$/,
				cy: /^\d{4}$/,
				cz: /^\d{3} \d{2}$/,
				dk: /^\d{3,4}$/,
				de: /^\d{5}$/,
				ee: /^\d{5}$/,
				es: /^((0[1-9]|5[0-2])|[1-4]\d)\d{3}$/,
				fi: /^\d{5}$/,
				fr: /^\d{5}$/,
				gb: /^[A-Za-z]{1,2}[0-9Rr][0-9A-Za-z]? \d[ABD-HJLNP-UW-Zabd-hjlnp-uw-z]{2}$/,
				gr: /^\d{3} \d{2}$/,
				hu: /^\d{4}$/,
				hr: /^\d{5}$/,
				is: /^\d{3}$/,
				it: /^\d{5}$/,
				jp: /^\d{3}-\d{4}$/,
				lt: /^(LT-)?\d{5}$/,
				lu: /^(L\s*(-|—|–))\s*?[\d]{4}$/,
				lv: /^LV-\d{4}$/,
				mt: /^[A-Za-z]{3} \d{4}/,
				nl: /^[1-9]\d{3}\s?[a-zA-Z]{2}$/,
				no: /^\d{4}$/,
				pl: /^\d{2}\-\d{3}$/,
				pt: /^\d{4}$/,
				ro: /^\d{6}$/,
				se: /^\d{3}\s?\d{2}$/,
				si: /^\d{4}$/,
				sk: /^(SK-)?\d{3} \d{2}$/,
				tr: /^\d{5}$/,
				ua: /^\d{5}$/,
				us: /^(\d{5}([\-]\d{4})?)$/
			}
		};

		// Function object
		check.fn = {
			even: function even(num) {
				if (isNaN(num)) num = num.parseInt(num, 10);
				return isNaN(num) ? false : num === 0 || num % 2 === 0;
			},
			'function': function _function(val) {
				return typeof val === 'function';
			},
			luhn: function luhn(num) {
				// Stringify the num
				// Create an array and reverse it
				num = (num + '').split('').reverse();

				// Define variables for later use
				var sum = 0,
				    i,
				    digit;

				for (i = 0; i < num.length; i++) {
					// Assign number to digit and multiply by 2 every odd num
					digit = parseInt(num[i], 10) * ((i + 1) % 2 ? 1 : 2);

					// Add to the sum but reduce by 9 if digit > 9
					sum += digit > 9 ? digit - 9 : digit;
				}

				// Return boolean
				return sum % 10 === 0;
			},
			odd: function odd(num) {
				return !this.even(num);
			},
			ok: function ok(val, expression) {
				if (typeof val === 'string') {
					return expression.test(val.trim());
				} else {
					return !!val;
				}
			},
			regexp: function regexp(val) {
				return val ? typeof val === 'object' && toString.call(val) === '[object RegExp]' : false;
			}
		};

		// Return boolean based on expression type
		return check.fn.regexp(expression) ? check.fn.ok(value, expression) : check.hasOwnProperty(expression) ? check.fn.ok(value, deep ? check[expression][deep] : check[expression]) : check.fn.hasOwnProperty(expression) ? check.fn[expression](value) ? true : false : check.fn['function'](expression) ? expression(value) ? true : false : false;
	};
})(jQuery);

},{}],"/Users/chris/Workbench/pizzaimpulse.com/scripts/vendor/swiper.jquery.min.js":[function(require,module,exports){
/**
 * Swiper 3.0.6
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * 
 * http://www.idangero.us/swiper/
 * 
 * Copyright 2015, Vladimir Kharlampidi
 * The iDangero.us
 * http://www.idangero.us/
 * 
 * Licensed under MIT
 * 
 * Released on: March 27, 2015
 */
"use strict";

!(function () {
  "use strict";function e(e) {
    e.fn.swiper = function (a) {
      var t;return (e(this).each(function () {
        var e = new Swiper(this, a);t || (t = e);
      }), t);
    };
  }window.Swiper = function (e, a) {
    function t() {
      return "horizontal" === f.params.direction;
    }function s() {
      f.autoplayTimeoutId = setTimeout(function () {
        f.params.loop ? (f.fixLoop(), f._slideNext()) : f.isEnd ? a.autoplayStopOnLast ? f.stopAutoplay() : f._slideTo(0) : f._slideNext();
      }, f.params.autoplay);
    }function r(e, a) {
      var t = h(e.target);if (!t.is(a)) if ("string" == typeof a) t = t.parents(a);else if (a.nodeType) {
        var s;return (t.parents().each(function (e, t) {
          t === a && (s = a);
        }), s ? a : void 0);
      }return 0 === t.length ? void 0 : t[0];
    }function i(e, a) {
      a = a || {};var t = window.MutationObserver || window.WebkitMutationObserver,
          s = new t(function (e) {
        e.forEach(function (e) {
          f.onResize(), f.emit("onObserverUpdate", f, e);
        });
      });s.observe(e, { attributes: "undefined" == typeof a.attributes ? !0 : a.attributes, childList: "undefined" == typeof a.childList ? !0 : a.childList, characterData: "undefined" == typeof a.characterData ? !0 : a.characterData }), f.observers.push(s);
    }function n(e) {
      e.originalEvent && (e = e.originalEvent);var a = e.keyCode || e.charCode;if (!(e.shiftKey || e.altKey || e.ctrlKey || e.metaKey || document.activeElement && document.activeElement.nodeName && ("input" === document.activeElement.nodeName.toLowerCase() || "textarea" === document.activeElement.nodeName.toLowerCase()))) {
        if (37 === a || 39 === a || 38 === a || 40 === a) {
          var s = !1;if (f.container.parents(".swiper-slide").length > 0 && 0 === f.container.parents(".swiper-slide-active").length) {
            return;
          }for (var r = { left: window.pageXOffset, top: window.pageYOffset }, i = window.innerWidth, n = window.innerHeight, o = f.container.offset(), l = [[o.left, o.top], [o.left + f.width, o.top], [o.left, o.top + f.height], [o.left + f.width, o.top + f.height]], p = 0; p < l.length; p++) {
            var d = l[p];d[0] >= r.left && d[0] <= r.left + i && d[1] >= r.top && d[1] <= r.top + n && (s = !0);
          }if (!s) {
            return;
          }
        }t() ? ((37 === a || 39 === a) && (e.preventDefault ? e.preventDefault() : e.returnValue = !1), 39 === a && f.slideNext(), 37 === a && f.slidePrev()) : ((38 === a || 40 === a) && (e.preventDefault ? e.preventDefault() : e.returnValue = !1), 40 === a && f.slideNext(), 38 === a && f.slidePrev());
      }
    }function o(e) {
      e.originalEvent && (e = e.originalEvent);var a = f._wheelEvent,
          s = 0;if (e.detail) s = -e.detail;else if ("mousewheel" === a) if (f.params.mousewheelForceToAxis) if (t()) {
        if (!(Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY))) {
          return;
        }s = e.wheelDeltaX;
      } else {
        if (!(Math.abs(e.wheelDeltaY) > Math.abs(e.wheelDeltaX))) {
          return;
        }s = e.wheelDeltaY;
      } else s = e.wheelDelta;else if ("DOMMouseScroll" === a) s = -e.detail;else if ("wheel" === a) if (f.params.mousewheelForceToAxis) if (t()) {
        if (!(Math.abs(e.deltaX) > Math.abs(e.deltaY))) {
          return;
        }s = -e.deltaX;
      } else {
        if (!(Math.abs(e.deltaY) > Math.abs(e.deltaX))) {
          return;
        }s = -e.deltaY;
      } else s = Math.abs(e.deltaX) > Math.abs(e.deltaY) ? -e.deltaX : -e.deltaY;if (f.params.freeMode) {
        var r = f.getWrapperTranslate() + s;if ((r > 0 && (r = 0), r < f.maxTranslate() && (r = f.maxTranslate()), f.setWrapperTransition(0), f.setWrapperTranslate(r), f.updateProgress(), f.updateActiveIndex(), 0 === r || r === f.maxTranslate())) {
          return;
        }
      } else new Date().getTime() - f._lastWheelScrollTime > 60 && (0 > s ? f.slideNext() : f.slidePrev()), f._lastWheelScrollTime = new Date().getTime();return (f.params.autoplay && f.stopAutoplay(), e.preventDefault ? e.preventDefault() : e.returnValue = !1, !1);
    }function l(e, a) {
      e = h(e);var s, r, i;s = e.attr("data-swiper-parallax") || "0", r = e.attr("data-swiper-parallax-x"), i = e.attr("data-swiper-parallax-y"), r || i ? (r = r || "0", i = i || "0") : t() ? (r = s, i = "0") : (i = s, r = "0"), r = r.indexOf("%") >= 0 ? parseInt(r, 10) * a + "%" : r * a + "px", i = i.indexOf("%") >= 0 ? parseInt(i, 10) * a + "%" : i * a + "px", e.transform("translate3d(" + r + ", " + i + ",0px)");
    }function p(e) {
      return (0 !== e.indexOf("on") && (e = e[0] !== e[0].toUpperCase() ? "on" + e[0].toUpperCase() + e.substring(1) : "on" + e), e);
    }if (!(this instanceof Swiper)) return new Swiper(e, a);var d = { direction: "horizontal", touchEventsTarget: "container", initialSlide: 0, speed: 300, autoplay: !1, autoplayDisableOnInteraction: !0, freeMode: !1, freeModeMomentum: !0, freeModeMomentumRatio: 1, freeModeMomentumBounce: !0, freeModeMomentumBounceRatio: 1, setWrapperSize: !1, virtualTranslate: !1, effect: "slide", coverflow: { rotate: 50, stretch: 0, depth: 100, modifier: 1, slideShadows: !0 }, cube: { slideShadows: !0, shadow: !0, shadowOffset: 20, shadowScale: 0.94 }, fade: { crossFade: !1 }, parallax: !1, scrollbar: null, scrollbarHide: !0, keyboardControl: !1, mousewheelControl: !1, mousewheelForceToAxis: !1, hashnav: !1, spaceBetween: 0, slidesPerView: 1, slidesPerColumn: 1, slidesPerColumnFill: "column", slidesPerGroup: 1, centeredSlides: !1, touchRatio: 1, touchAngle: 45, simulateTouch: !0, shortSwipes: !0, longSwipes: !0, longSwipesRatio: 0.5, longSwipesMs: 300, followFinger: !0, onlyExternal: !1, threshold: 0, touchMoveStopPropagation: !0, pagination: null, paginationClickable: !1, paginationHide: !1, paginationBulletRender: null, resistance: !0, resistanceRatio: 0.85, nextButton: null, prevButton: null, watchSlidesProgress: !1, watchSlidesVisibility: !1, grabCursor: !1, preventClicks: !0, preventClicksPropagation: !0, slideToClickedSlide: !1, lazyLoading: !1, lazyLoadingInPrevNext: !1, lazyLoadingOnTransitionStart: !1, preloadImages: !0, updateOnImagesReady: !0, loop: !1, loopAdditionalSlides: 0, loopedSlides: null, control: void 0, controlInverse: !1, allowSwipeToPrev: !0, allowSwipeToNext: !0, swipeHandler: null, noSwiping: !0, noSwipingClass: "swiper-no-swiping", slideClass: "swiper-slide", slideActiveClass: "swiper-slide-active", slideVisibleClass: "swiper-slide-visible", slideDuplicateClass: "swiper-slide-duplicate", slideNextClass: "swiper-slide-next", slidePrevClass: "swiper-slide-prev", wrapperClass: "swiper-wrapper", bulletClass: "swiper-pagination-bullet", bulletActiveClass: "swiper-pagination-bullet-active", buttonDisabledClass: "swiper-button-disabled", paginationHiddenClass: "swiper-pagination-hidden", observer: !1, observeParents: !1, a11y: !1, prevSlideMessage: "Previous slide", nextSlideMessage: "Next slide", firstSlideMessage: "This is the first slide", lastSlideMessage: "This is the last slide", runCallbacksOnInit: !0 },
        u = a && a.virtualTranslate;a = a || {};for (var c in d) if ("undefined" == typeof a[c]) a[c] = d[c];else if ("object" == typeof a[c]) for (var m in d[c]) "undefined" == typeof a[c][m] && (a[c][m] = d[c][m]);var f = this;f.params = a, f.classNames = [];var h;if ((h = "undefined" == typeof Dom7 ? window.Dom7 || window.Zepto || window.jQuery : Dom7, h && (f.$ = h, f.container = h(e), 0 !== f.container.length))) {
      if (f.container.length > 1) return void f.container.each(function () {
        new Swiper(this, a);
      });f.container[0].swiper = f, f.container.data("swiper", f), f.classNames.push("swiper-container-" + f.params.direction), f.params.freeMode && f.classNames.push("swiper-container-free-mode"), f.support.flexbox || (f.classNames.push("swiper-container-no-flexbox"), f.params.slidesPerColumn = 1), (f.params.parallax || f.params.watchSlidesVisibility) && (f.params.watchSlidesProgress = !0), ["cube", "coverflow"].indexOf(f.params.effect) >= 0 && (f.support.transforms3d ? (f.params.watchSlidesProgress = !0, f.classNames.push("swiper-container-3d")) : f.params.effect = "slide"), "slide" !== f.params.effect && f.classNames.push("swiper-container-" + f.params.effect), "cube" === f.params.effect && (f.params.resistanceRatio = 0, f.params.slidesPerView = 1, f.params.slidesPerColumn = 1, f.params.slidesPerGroup = 1, f.params.centeredSlides = !1, f.params.spaceBetween = 0, f.params.virtualTranslate = !0, f.params.setWrapperSize = !1), "fade" === f.params.effect && (f.params.slidesPerView = 1, f.params.slidesPerColumn = 1, f.params.slidesPerGroup = 1, f.params.watchSlidesProgress = !0, f.params.spaceBetween = 0, "undefined" == typeof u && (f.params.virtualTranslate = !0)), f.params.grabCursor && f.support.touch && (f.params.grabCursor = !1), f.wrapper = f.container.children("." + f.params.wrapperClass), f.params.pagination && (f.paginationContainer = h(f.params.pagination), f.params.paginationClickable && f.paginationContainer.addClass("swiper-pagination-clickable")), f.rtl = t() && ("rtl" === f.container[0].dir.toLowerCase() || "rtl" === f.container.css("direction")), f.rtl && f.classNames.push("swiper-container-rtl"), f.rtl && (f.wrongRTL = "-webkit-box" === f.wrapper.css("display")), f.params.slidesPerColumn > 1 && f.classNames.push("swiper-container-multirow"), f.device.android && f.classNames.push("swiper-container-android"), f.container.addClass(f.classNames.join(" ")), f.translate = 0, f.progress = 0, f.velocity = 0, f.lockSwipeToNext = function () {
        f.params.allowSwipeToNext = !1;
      }, f.lockSwipeToPrev = function () {
        f.params.allowSwipeToPrev = !1;
      }, f.lockSwipes = function () {
        f.params.allowSwipeToNext = f.params.allowSwipeToPrev = !1;
      }, f.unlockSwipeToNext = function () {
        f.params.allowSwipeToNext = !0;
      }, f.unlockSwipeToPrev = function () {
        f.params.allowSwipeToPrev = !0;
      }, f.unlockSwipes = function () {
        f.params.allowSwipeToNext = f.params.allowSwipeToPrev = !0;
      }, f.params.grabCursor && (f.container[0].style.cursor = "move", f.container[0].style.cursor = "-webkit-grab", f.container[0].style.cursor = "-moz-grab", f.container[0].style.cursor = "grab"), f.imagesToLoad = [], f.imagesLoaded = 0, f.loadImage = function (e, a, t, s) {
        function r() {
          s && s();
        }var i;e.complete && t ? r() : a ? (i = new Image(), i.onload = r, i.onerror = r, i.src = a) : r();
      }, f.preloadImages = function () {
        function e() {
          "undefined" != typeof f && null !== f && (void 0 !== f.imagesLoaded && f.imagesLoaded++, f.imagesLoaded === f.imagesToLoad.length && (f.params.updateOnImagesReady && f.update(), f.emit("onImagesReady", f)));
        }f.imagesToLoad = f.container.find("img");for (var a = 0; a < f.imagesToLoad.length; a++) f.loadImage(f.imagesToLoad[a], f.imagesToLoad[a].currentSrc || f.imagesToLoad[a].getAttribute("src"), !0, e);
      }, f.autoplayTimeoutId = void 0, f.autoplaying = !1, f.autoplayPaused = !1, f.startAutoplay = function () {
        return "undefined" != typeof f.autoplayTimeoutId ? !1 : f.params.autoplay ? f.autoplaying ? !1 : (f.autoplaying = !0, f.emit("onAutoplayStart", f), void s()) : !1;
      }, f.stopAutoplay = function () {
        f.autoplayTimeoutId && (f.autoplayTimeoutId && clearTimeout(f.autoplayTimeoutId), f.autoplaying = !1, f.autoplayTimeoutId = void 0, f.emit("onAutoplayStop", f));
      }, f.pauseAutoplay = function (e) {
        f.autoplayPaused || (f.autoplayTimeoutId && clearTimeout(f.autoplayTimeoutId), f.autoplayPaused = !0, 0 === e ? (f.autoplayPaused = !1, s()) : f.wrapper.transitionEnd(function () {
          f.autoplayPaused = !1, f.autoplaying ? s() : f.stopAutoplay();
        }));
      }, f.minTranslate = function () {
        return -f.snapGrid[0];
      }, f.maxTranslate = function () {
        return -f.snapGrid[f.snapGrid.length - 1];
      }, f.updateContainerSize = function () {
        f.width = f.container[0].clientWidth, f.height = f.container[0].clientHeight, f.size = t() ? f.width : f.height;
      }, f.updateSlidesSize = function () {
        f.slides = f.wrapper.children("." + f.params.slideClass), f.snapGrid = [], f.slidesGrid = [], f.slidesSizesGrid = [];var e,
            a = f.params.spaceBetween,
            s = 0,
            r = 0,
            i = 0;"string" == typeof a && a.indexOf("%") >= 0 && (a = parseFloat(a.replace("%", "")) / 100 * f.size), f.virtualSize = -a, f.slides.css(f.rtl ? { marginLeft: "", marginTop: "" } : { marginRight: "", marginBottom: "" });var n;f.params.slidesPerColumn > 1 && (n = Math.floor(f.slides.length / f.params.slidesPerColumn) === f.slides.length / f.params.slidesPerColumn ? f.slides.length : Math.ceil(f.slides.length / f.params.slidesPerColumn) * f.params.slidesPerColumn);var o;for (e = 0; e < f.slides.length; e++) {
          o = 0;var l = f.slides.eq(e);if (f.params.slidesPerColumn > 1) {
            var p,
                d,
                u,
                c,
                m = f.params.slidesPerColumn;"column" === f.params.slidesPerColumnFill ? (d = Math.floor(e / m), u = e - d * m, p = d + u * n / m, l.css({ "-webkit-box-ordinal-group": p, "-moz-box-ordinal-group": p, "-ms-flex-order": p, "-webkit-order": p, order: p })) : (c = n / m, u = Math.floor(e / c), d = e - u * c), l.css({ "margin-top": 0 !== u && f.params.spaceBetween && f.params.spaceBetween + "px" }).attr("data-swiper-column", d).attr("data-swiper-row", u);
          }"none" !== l.css("display") && ("auto" === f.params.slidesPerView ? o = t() ? l.outerWidth(!0) : l.outerHeight(!0) : (o = (f.size - (f.params.slidesPerView - 1) * a) / f.params.slidesPerView, t() ? f.slides[e].style.width = o + "px" : f.slides[e].style.height = o + "px"), f.slides[e].swiperSlideSize = o, f.slidesSizesGrid.push(o), f.params.centeredSlides ? (s = s + o / 2 + r / 2 + a, 0 === e && (s = s - f.size / 2 - a), Math.abs(s) < 0.001 && (s = 0), i % f.params.slidesPerGroup === 0 && f.snapGrid.push(s), f.slidesGrid.push(s)) : (i % f.params.slidesPerGroup === 0 && f.snapGrid.push(s), f.slidesGrid.push(s), s = s + o + a), f.virtualSize += o + a, r = o, i++);
        }f.virtualSize = Math.max(f.virtualSize, f.size);var h;if ((f.rtl && f.wrongRTL && ("slide" === f.params.effect || "coverflow" === f.params.effect) && f.wrapper.css({ width: f.virtualSize + f.params.spaceBetween + "px" }), (!f.support.flexbox || f.params.setWrapperSize) && f.wrapper.css(t() ? { width: f.virtualSize + f.params.spaceBetween + "px" } : { height: f.virtualSize + f.params.spaceBetween + "px" }), f.params.slidesPerColumn > 1 && (f.virtualSize = (o + f.params.spaceBetween) * n, f.virtualSize = Math.ceil(f.virtualSize / f.params.slidesPerColumn) - f.params.spaceBetween, f.wrapper.css({ width: f.virtualSize + f.params.spaceBetween + "px" }), f.params.centeredSlides))) {
          for (h = [], e = 0; e < f.snapGrid.length; e++) f.snapGrid[e] < f.virtualSize + f.snapGrid[0] && h.push(f.snapGrid[e]);f.snapGrid = h;
        }if (!f.params.centeredSlides) {
          for (h = [], e = 0; e < f.snapGrid.length; e++) f.snapGrid[e] <= f.virtualSize - f.size && h.push(f.snapGrid[e]);f.snapGrid = h, Math.floor(f.virtualSize - f.size) > Math.floor(f.snapGrid[f.snapGrid.length - 1]) && f.snapGrid.push(f.virtualSize - f.size);
        }0 === f.snapGrid.length && (f.snapGrid = [0]), 0 !== f.params.spaceBetween && f.slides.css(t() ? f.rtl ? { marginLeft: a + "px" } : { marginRight: a + "px" } : { marginBottom: a + "px" }), f.params.watchSlidesProgress && f.updateSlidesOffset();
      }, f.updateSlidesOffset = function () {
        for (var e = 0; e < f.slides.length; e++) f.slides[e].swiperSlideOffset = t() ? f.slides[e].offsetLeft : f.slides[e].offsetTop;
      }, f.updateSlidesProgress = function (e) {
        if (("undefined" == typeof e && (e = f.translate || 0), 0 !== f.slides.length)) {
          "undefined" == typeof f.slides[0].swiperSlideOffset && f.updateSlidesOffset();var a = f.params.centeredSlides ? -e + f.size / 2 : -e;f.rtl && (a = f.params.centeredSlides ? e - f.size / 2 : e);{
            f.container[0].getBoundingClientRect(), t() ? "left" : "top", t() ? "right" : "bottom";
          }f.slides.removeClass(f.params.slideVisibleClass);for (var s = 0; s < f.slides.length; s++) {
            var r = f.slides[s],
                i = f.params.centeredSlides === !0 ? r.swiperSlideSize / 2 : 0,
                n = (a - r.swiperSlideOffset - i) / (r.swiperSlideSize + f.params.spaceBetween);if (f.params.watchSlidesVisibility) {
              var o = -(a - r.swiperSlideOffset - i),
                  l = o + f.slidesSizesGrid[s],
                  p = o >= 0 && o < f.size || l > 0 && l <= f.size || 0 >= o && l >= f.size;p && f.slides.eq(s).addClass(f.params.slideVisibleClass);
            }r.progress = f.rtl ? -n : n;
          }
        }
      }, f.updateProgress = function (e) {
        "undefined" == typeof e && (e = f.translate || 0);var a = f.maxTranslate() - f.minTranslate();0 === a ? (f.progress = 0, f.isBeginning = f.isEnd = !0) : (f.progress = (e - f.minTranslate()) / a, f.isBeginning = f.progress <= 0, f.isEnd = f.progress >= 1), f.isBeginning && f.emit("onReachBeginning", f), f.isEnd && f.emit("onReachEnd", f), f.params.watchSlidesProgress && f.updateSlidesProgress(e), f.emit("onProgress", f, f.progress);
      }, f.updateActiveIndex = function () {
        var e,
            a,
            t,
            s = f.rtl ? f.translate : -f.translate;for (a = 0; a < f.slidesGrid.length; a++) "undefined" != typeof f.slidesGrid[a + 1] ? s >= f.slidesGrid[a] && s < f.slidesGrid[a + 1] - (f.slidesGrid[a + 1] - f.slidesGrid[a]) / 2 ? e = a : s >= f.slidesGrid[a] && s < f.slidesGrid[a + 1] && (e = a + 1) : s >= f.slidesGrid[a] && (e = a);(0 > e || "undefined" == typeof e) && (e = 0), t = Math.floor(e / f.params.slidesPerGroup), t >= f.snapGrid.length && (t = f.snapGrid.length - 1), e !== f.activeIndex && (f.snapIndex = t, f.previousIndex = f.activeIndex, f.activeIndex = e, f.updateClasses());
      }, f.updateClasses = function () {
        f.slides.removeClass(f.params.slideActiveClass + " " + f.params.slideNextClass + " " + f.params.slidePrevClass);var e = f.slides.eq(f.activeIndex);if ((e.addClass(f.params.slideActiveClass), e.next("." + f.params.slideClass).addClass(f.params.slideNextClass), e.prev("." + f.params.slideClass).addClass(f.params.slidePrevClass), f.bullets && f.bullets.length > 0)) {
          f.bullets.removeClass(f.params.bulletActiveClass);var a;f.params.loop ? (a = Math.ceil(f.activeIndex - f.loopedSlides) / f.params.slidesPerGroup, a > f.slides.length - 1 - 2 * f.loopedSlides && (a -= f.slides.length - 2 * f.loopedSlides), a > f.bullets.length - 1 && (a -= f.bullets.length)) : a = "undefined" != typeof f.snapIndex ? f.snapIndex : f.activeIndex || 0, f.paginationContainer.length > 1 ? f.bullets.each(function () {
            h(this).index() === a && h(this).addClass(f.params.bulletActiveClass);
          }) : f.bullets.eq(a).addClass(f.params.bulletActiveClass);
        }f.params.loop || (f.params.prevButton && (f.isBeginning ? (h(f.params.prevButton).addClass(f.params.buttonDisabledClass), f.params.a11y && f.a11y && f.a11y.disable(h(f.params.prevButton))) : (h(f.params.prevButton).removeClass(f.params.buttonDisabledClass), f.params.a11y && f.a11y && f.a11y.enable(h(f.params.prevButton)))), f.params.nextButton && (f.isEnd ? (h(f.params.nextButton).addClass(f.params.buttonDisabledClass), f.params.a11y && f.a11y && f.a11y.disable(h(f.params.nextButton))) : (h(f.params.nextButton).removeClass(f.params.buttonDisabledClass), f.params.a11y && f.a11y && f.a11y.enable(h(f.params.nextButton)))));
      }, f.updatePagination = function () {
        if (f.params.pagination && f.paginationContainer && f.paginationContainer.length > 0) {
          for (var e = "", a = f.params.loop ? Math.ceil((f.slides.length - 2 * f.loopedSlides) / f.params.slidesPerGroup) : f.snapGrid.length, t = 0; a > t; t++) e += f.params.paginationBulletRender ? f.params.paginationBulletRender(t, f.params.bulletClass) : "<span class=\"" + f.params.bulletClass + "\"></span>";f.paginationContainer.html(e), f.bullets = f.paginationContainer.find("." + f.params.bulletClass);
        }
      }, f.update = function (e) {
        function a() {
          s = Math.min(Math.max(f.translate, f.maxTranslate()), f.minTranslate()), f.setWrapperTranslate(s), f.updateActiveIndex(), f.updateClasses();
        }if ((f.updateContainerSize(), f.updateSlidesSize(), f.updateProgress(), f.updatePagination(), f.updateClasses(), f.params.scrollbar && f.scrollbar && f.scrollbar.set(), e)) {
          var t, s;f.params.freeMode ? a() : (t = "auto" === f.params.slidesPerView && f.isEnd && !f.params.centeredSlides ? f.slideTo(f.slides.length - 1, 0, !1, !0) : f.slideTo(f.activeIndex, 0, !1, !0), t || a());
        }
      }, f.onResize = function () {
        if ((f.updateContainerSize(), f.updateSlidesSize(), f.updateProgress(), ("auto" === f.params.slidesPerView || f.params.freeMode) && f.updatePagination(), f.params.scrollbar && f.scrollbar && f.scrollbar.set(), f.params.freeMode)) {
          var e = Math.min(Math.max(f.translate, f.maxTranslate()), f.minTranslate());f.setWrapperTranslate(e), f.updateActiveIndex(), f.updateClasses();
        } else f.updateClasses(), "auto" === f.params.slidesPerView && f.isEnd && !f.params.centeredSlides ? f.slideTo(f.slides.length - 1, 0, !1, !0) : f.slideTo(f.activeIndex, 0, !1, !0);
      };var v = ["mousedown", "mousemove", "mouseup"];window.navigator.pointerEnabled ? v = ["pointerdown", "pointermove", "pointerup"] : window.navigator.msPointerEnabled && (v = ["MSPointerDown", "MSPointerMove", "MSPointerUp"]), f.touchEvents = { start: f.support.touch || !f.params.simulateTouch ? "touchstart" : v[0], move: f.support.touch || !f.params.simulateTouch ? "touchmove" : v[1], end: f.support.touch || !f.params.simulateTouch ? "touchend" : v[2] }, (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) && ("container" === f.params.touchEventsTarget ? f.container : f.wrapper).addClass("swiper-wp8-" + f.params.direction), f.initEvents = function (e) {
        var t = e ? "off" : "on",
            s = e ? "removeEventListener" : "addEventListener",
            r = "container" === f.params.touchEventsTarget ? f.container[0] : f.wrapper[0],
            i = f.support.touch ? r : document,
            n = f.params.nested ? !0 : !1;f.browser.ie ? (r[s](f.touchEvents.start, f.onTouchStart, !1), i[s](f.touchEvents.move, f.onTouchMove, n), i[s](f.touchEvents.end, f.onTouchEnd, !1)) : (f.support.touch && (r[s](f.touchEvents.start, f.onTouchStart, !1), r[s](f.touchEvents.move, f.onTouchMove, n), r[s](f.touchEvents.end, f.onTouchEnd, !1)), !a.simulateTouch || f.device.ios || f.device.android || (r[s]("mousedown", f.onTouchStart, !1), i[s]("mousemove", f.onTouchMove, n), i[s]("mouseup", f.onTouchEnd, !1))), window[s]("resize", f.onResize), f.params.nextButton && (h(f.params.nextButton)[t]("click", f.onClickNext), f.params.a11y && f.a11y && h(f.params.nextButton)[t]("keydown", f.a11y.onEnterKey)), f.params.prevButton && (h(f.params.prevButton)[t]("click", f.onClickPrev), f.params.a11y && f.a11y && h(f.params.prevButton)[t]("keydown", f.a11y.onEnterKey)), f.params.pagination && f.params.paginationClickable && h(f.paginationContainer)[t]("click", "." + f.params.bulletClass, f.onClickIndex), (f.params.preventClicks || f.params.preventClicksPropagation) && r[s]("click", f.preventClicks, !0);
      }, f.attachEvents = function () {
        f.initEvents();
      }, f.detachEvents = function () {
        f.initEvents(!0);
      }, f.allowClick = !0, f.preventClicks = function (e) {
        f.allowClick || (f.params.preventClicks && e.preventDefault(), f.params.preventClicksPropagation && (e.stopPropagation(), e.stopImmediatePropagation()));
      }, f.onClickNext = function (e) {
        e.preventDefault(), f.slideNext();
      }, f.onClickPrev = function (e) {
        e.preventDefault(), f.slidePrev();
      }, f.onClickIndex = function (e) {
        e.preventDefault();var a = h(this).index() * f.params.slidesPerGroup;f.params.loop && (a += f.loopedSlides), f.slideTo(a);
      }, f.updateClickedSlide = function (e) {
        var a = r(e, "." + f.params.slideClass);if (!a) return (f.clickedSlide = void 0, void (f.clickedIndex = void 0));if ((f.clickedSlide = a, f.clickedIndex = h(a).index(), f.params.slideToClickedSlide && void 0 !== f.clickedIndex && f.clickedIndex !== f.activeIndex)) {
          var t,
              s = f.clickedIndex;if (f.params.loop) if ((t = h(f.clickedSlide).attr("data-swiper-slide-index"), s > f.slides.length - f.params.slidesPerView)) f.fixLoop(), s = f.wrapper.children("." + f.params.slideClass + "[data-swiper-slide-index=\"" + t + "\"]").eq(0).index(), setTimeout(function () {
            f.slideTo(s);
          }, 0);else if (s < f.params.slidesPerView - 1) {
            f.fixLoop();var i = f.wrapper.children("." + f.params.slideClass + "[data-swiper-slide-index=\"" + t + "\"]");s = i.eq(i.length - 1).index(), setTimeout(function () {
              f.slideTo(s);
            }, 0);
          } else f.slideTo(s);else f.slideTo(s);
        }
      };var g,
          w,
          b,
          y,
          x,
          T,
          S,
          C,
          M,
          P = "input, select, textarea, button",
          z = Date.now(),
          I = [];f.animating = !1, f.touches = { startX: 0, startY: 0, currentX: 0, currentY: 0, diff: 0 };var E, k;if ((f.onTouchStart = function (e) {
        if ((e.originalEvent && (e = e.originalEvent), E = "touchstart" === e.type, E || !("which" in e) || 3 !== e.which)) {
          if (f.params.noSwiping && r(e, "." + f.params.noSwipingClass)) return void (f.allowClick = !0);if (!f.params.swipeHandler || r(e, f.params.swipeHandler)) {
            if ((g = !0, w = !1, y = void 0, k = void 0, f.touches.startX = f.touches.currentX = "touchstart" === e.type ? e.targetTouches[0].pageX : e.pageX, f.touches.startY = f.touches.currentY = "touchstart" === e.type ? e.targetTouches[0].pageY : e.pageY, b = Date.now(), f.allowClick = !0, f.updateContainerSize(), f.swipeDirection = void 0, f.params.threshold > 0 && (S = !1), "touchstart" !== e.type)) {
              var a = !0;h(e.target).is(P) && (a = !1), document.activeElement && h(document.activeElement).is(P) && document.activeElement.blur(), a && e.preventDefault();
            }f.emit("onTouchStart", f, e);
          }
        }
      }, f.onTouchMove = function (e) {
        if ((e.originalEvent && (e = e.originalEvent), !(E && "mousemove" === e.type || e.preventedByNestedSwiper))) {
          if (f.params.onlyExternal) return (w = !0, void (f.allowClick = !1));if (E && document.activeElement && e.target === document.activeElement && h(e.target).is(P)) return (w = !0, void (f.allowClick = !1));if ((f.emit("onTouchMove", f, e), !(e.targetTouches && e.targetTouches.length > 1))) {
            if ((f.touches.currentX = "touchmove" === e.type ? e.targetTouches[0].pageX : e.pageX, f.touches.currentY = "touchmove" === e.type ? e.targetTouches[0].pageY : e.pageY, "undefined" == typeof y)) {
              var s = 180 * Math.atan2(Math.abs(f.touches.currentY - f.touches.startY), Math.abs(f.touches.currentX - f.touches.startX)) / Math.PI;y = t() ? s > f.params.touchAngle : 90 - s > f.params.touchAngle;
            }if ((y && f.emit("onTouchMoveOpposite", f, e), "undefined" == typeof k && f.browser.ieTouch && (f.touches.currentX !== f.touches.startX || f.touches.currentY !== f.touches.startY) && (k = !0), g)) {
              if (y) return void (g = !1);if (k || !f.browser.ieTouch) {
                f.allowClick = !1, f.emit("onSliderMove", f, e), e.preventDefault(), f.params.touchMoveStopPropagation && !f.params.nested && e.stopPropagation(), w || (a.loop && f.fixLoop(), T = f.getWrapperTranslate(), f.setWrapperTransition(0), f.animating && f.wrapper.trigger("webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd"), f.params.autoplay && f.autoplaying && (f.params.autoplayDisableOnInteraction ? f.stopAutoplay() : f.pauseAutoplay()), M = !1, f.params.grabCursor && (f.container[0].style.cursor = "move", f.container[0].style.cursor = "-webkit-grabbing", f.container[0].style.cursor = "-moz-grabbin", f.container[0].style.cursor = "grabbing")), w = !0;var r = f.touches.diff = t() ? f.touches.currentX - f.touches.startX : f.touches.currentY - f.touches.startY;r *= f.params.touchRatio, f.rtl && (r = -r), f.swipeDirection = r > 0 ? "prev" : "next", x = r + T;var i = !0;if ((r > 0 && x > f.minTranslate() ? (i = !1, f.params.resistance && (x = f.minTranslate() - 1 + Math.pow(-f.minTranslate() + T + r, f.params.resistanceRatio))) : 0 > r && x < f.maxTranslate() && (i = !1, f.params.resistance && (x = f.maxTranslate() + 1 - Math.pow(f.maxTranslate() - T - r, f.params.resistanceRatio))), i && (e.preventedByNestedSwiper = !0), !f.params.allowSwipeToNext && "next" === f.swipeDirection && T > x && (x = T), !f.params.allowSwipeToPrev && "prev" === f.swipeDirection && x > T && (x = T), f.params.followFinger)) {
                  if (f.params.threshold > 0) {
                    if (!(Math.abs(r) > f.params.threshold || S)) return void (x = T);if (!S) return (S = !0, f.touches.startX = f.touches.currentX, f.touches.startY = f.touches.currentY, x = T, void (f.touches.diff = t() ? f.touches.currentX - f.touches.startX : f.touches.currentY - f.touches.startY));
                  }(f.params.freeMode || f.params.watchSlidesProgress) && f.updateActiveIndex(), f.params.freeMode && (0 === I.length && I.push({ position: f.touches[t() ? "startX" : "startY"], time: b }), I.push({ position: f.touches[t() ? "currentX" : "currentY"], time: new Date().getTime() })), f.updateProgress(x), f.setWrapperTranslate(x);
                }
              }
            }
          }
        }
      }, f.onTouchEnd = function (e) {
        if ((e.originalEvent && (e = e.originalEvent), f.emit("onTouchEnd", f, e), g)) {
          f.params.grabCursor && w && g && (f.container[0].style.cursor = "move", f.container[0].style.cursor = "-webkit-grab", f.container[0].style.cursor = "-moz-grab", f.container[0].style.cursor = "grab");var a = Date.now(),
              t = a - b;if ((f.allowClick && (f.updateClickedSlide(e), f.emit("onTap", f, e), 300 > t && a - z > 300 && (C && clearTimeout(C), C = setTimeout(function () {
            f && (f.params.paginationHide && f.paginationContainer.length > 0 && !h(e.target).hasClass(f.params.bulletClass) && f.paginationContainer.toggleClass(f.params.paginationHiddenClass), f.emit("onClick", f, e));
          }, 300)), 300 > t && 300 > a - z && (C && clearTimeout(C), f.emit("onDoubleTap", f, e))), z = Date.now(), setTimeout(function () {
            f && f.allowClick && (f.allowClick = !0);
          }, 0), !g || !w || !f.swipeDirection || 0 === f.touches.diff || x === T)) return void (g = w = !1);g = w = !1;var s;if ((s = f.params.followFinger ? f.rtl ? f.translate : -f.translate : -x, f.params.freeMode)) {
            if (s < -f.minTranslate()) return void f.slideTo(f.activeIndex);if (s > -f.maxTranslate()) return void f.slideTo(f.slides.length - 1);if (f.params.freeModeMomentum) {
              if (I.length > 1) {
                var r = I.pop(),
                    i = I.pop(),
                    n = r.position - i.position,
                    o = r.time - i.time;f.velocity = n / o, f.velocity = f.velocity / 2, Math.abs(f.velocity) < 0.02 && (f.velocity = 0), (o > 150 || new Date().getTime() - r.time > 300) && (f.velocity = 0);
              } else f.velocity = 0;I.length = 0;var l = 1000 * f.params.freeModeMomentumRatio,
                  p = f.velocity * l,
                  d = f.translate + p;f.rtl && (d = -d);var u,
                  c = !1,
                  m = 20 * Math.abs(f.velocity) * f.params.freeModeMomentumBounceRatio;d < f.maxTranslate() && (f.params.freeModeMomentumBounce ? (d + f.maxTranslate() < -m && (d = f.maxTranslate() - m), u = f.maxTranslate(), c = !0, M = !0) : d = f.maxTranslate()), d > f.minTranslate() && (f.params.freeModeMomentumBounce ? (d - f.minTranslate() > m && (d = f.minTranslate() + m), u = f.minTranslate(), c = !0, M = !0) : d = f.minTranslate()), 0 !== f.velocity && (l = Math.abs(f.rtl ? (-d - f.translate) / f.velocity : (d - f.translate) / f.velocity)), f.params.freeModeMomentumBounce && c ? (f.updateProgress(u), f.setWrapperTransition(l), f.setWrapperTranslate(d), f.onTransitionStart(), f.animating = !0, f.wrapper.transitionEnd(function () {
                M && (f.emit("onMomentumBounce", f), f.setWrapperTransition(f.params.speed), f.setWrapperTranslate(u), f.wrapper.transitionEnd(function () {
                  f.onTransitionEnd();
                }));
              })) : f.velocity ? (f.updateProgress(d), f.setWrapperTransition(l), f.setWrapperTranslate(d), f.onTransitionStart(), f.animating || (f.animating = !0, f.wrapper.transitionEnd(function () {
                f.onTransitionEnd();
              }))) : f.updateProgress(d), f.updateActiveIndex();
            }return void ((!f.params.freeModeMomentum || t >= f.params.longSwipesMs) && (f.updateProgress(), f.updateActiveIndex()));
          }var v,
              y = 0,
              S = f.slidesSizesGrid[0];for (v = 0; v < f.slidesGrid.length; v += f.params.slidesPerGroup) "undefined" != typeof f.slidesGrid[v + f.params.slidesPerGroup] ? s >= f.slidesGrid[v] && s < f.slidesGrid[v + f.params.slidesPerGroup] && (y = v, S = f.slidesGrid[v + f.params.slidesPerGroup] - f.slidesGrid[v]) : s >= f.slidesGrid[v] && (y = v, S = f.slidesGrid[f.slidesGrid.length - 1] - f.slidesGrid[f.slidesGrid.length - 2]);var P = (s - f.slidesGrid[y]) / S;if (t > f.params.longSwipesMs) {
            if (!f.params.longSwipes) return void f.slideTo(f.activeIndex);"next" === f.swipeDirection && f.slideTo(P >= f.params.longSwipesRatio ? y + f.params.slidesPerGroup : y), "prev" === f.swipeDirection && f.slideTo(P > 1 - f.params.longSwipesRatio ? y + f.params.slidesPerGroup : y);
          } else {
            if (!f.params.shortSwipes) return void f.slideTo(f.activeIndex);"next" === f.swipeDirection && f.slideTo(y + f.params.slidesPerGroup), "prev" === f.swipeDirection && f.slideTo(y);
          }
        }
      }, f._slideTo = function (e, a) {
        return f.slideTo(e, a, !0, !0);
      }, f.slideTo = function (e, a, s, r) {
        "undefined" == typeof s && (s = !0), "undefined" == typeof e && (e = 0), 0 > e && (e = 0), f.snapIndex = Math.floor(e / f.params.slidesPerGroup), f.snapIndex >= f.snapGrid.length && (f.snapIndex = f.snapGrid.length - 1);var i = -f.snapGrid[f.snapIndex];f.params.autoplay && f.autoplaying && (r || !f.params.autoplayDisableOnInteraction ? f.pauseAutoplay(a) : f.stopAutoplay()), f.updateProgress(i);for (var n = 0; n < f.slidesGrid.length; n++) -i >= f.slidesGrid[n] && (e = n);if (("undefined" == typeof a && (a = f.params.speed), f.previousIndex = f.activeIndex || 0, f.activeIndex = e, i === f.translate)) return (f.updateClasses(), !1);f.onTransitionStart(s);t() ? i : 0, t() ? 0 : i;return (0 === a ? (f.setWrapperTransition(0), f.setWrapperTranslate(i), f.onTransitionEnd(s)) : (f.setWrapperTransition(a), f.setWrapperTranslate(i), f.animating || (f.animating = !0, f.wrapper.transitionEnd(function () {
          f.onTransitionEnd(s);
        }))), f.updateClasses(), !0);
      }, f.onTransitionStart = function (e) {
        "undefined" == typeof e && (e = !0), f.lazy && f.lazy.onTransitionStart(), e && (f.emit("onTransitionStart", f), f.activeIndex !== f.previousIndex && f.emit("onSlideChangeStart", f));
      }, f.onTransitionEnd = function (e) {
        f.animating = !1, f.setWrapperTransition(0), "undefined" == typeof e && (e = !0), f.lazy && f.lazy.onTransitionEnd(), e && (f.emit("onTransitionEnd", f), f.activeIndex !== f.previousIndex && f.emit("onSlideChangeEnd", f)), f.params.hashnav && f.hashnav && f.hashnav.setHash();
      }, f.slideNext = function (e, a, t) {
        if (f.params.loop) {
          if (f.animating) return !1;f.fixLoop();{
            f.container[0].clientLeft;
          }return f.slideTo(f.activeIndex + f.params.slidesPerGroup, a, e, t);
        }return f.slideTo(f.activeIndex + f.params.slidesPerGroup, a, e, t);
      }, f._slideNext = function (e) {
        return f.slideNext(!0, e, !0);
      }, f.slidePrev = function (e, a, t) {
        if (f.params.loop) {
          if (f.animating) return !1;f.fixLoop();{
            f.container[0].clientLeft;
          }return f.slideTo(f.activeIndex - 1, a, e, t);
        }return f.slideTo(f.activeIndex - 1, a, e, t);
      }, f._slidePrev = function (e) {
        return f.slidePrev(!0, e, !0);
      }, f.slideReset = function (e, a) {
        return f.slideTo(f.activeIndex, a, e);
      }, f.setWrapperTransition = function (e, a) {
        f.wrapper.transition(e), "slide" !== f.params.effect && f.effects[f.params.effect] && f.effects[f.params.effect].setTransition(e), f.params.parallax && f.parallax && f.parallax.setTransition(e), f.params.scrollbar && f.scrollbar && f.scrollbar.setTransition(e), f.params.control && f.controller && f.controller.setTransition(e, a), f.emit("onSetTransition", f, e);
      }, f.setWrapperTranslate = function (e, a, s) {
        var r = 0,
            i = 0,
            n = 0;t() ? r = f.rtl ? -e : e : i = e, f.params.virtualTranslate || f.wrapper.transform(f.support.transforms3d ? "translate3d(" + r + "px, " + i + "px, " + n + "px)" : "translate(" + r + "px, " + i + "px)"), f.translate = t() ? r : i, a && f.updateActiveIndex(), "slide" !== f.params.effect && f.effects[f.params.effect] && f.effects[f.params.effect].setTranslate(f.translate), f.params.parallax && f.parallax && f.parallax.setTranslate(f.translate), f.params.scrollbar && f.scrollbar && f.scrollbar.setTranslate(f.translate), f.params.control && f.controller && f.controller.setTranslate(f.translate, s), f.emit("onSetTranslate", f, f.translate);
      }, f.getTranslate = function (e, a) {
        var t, s, r, i;return ("undefined" == typeof a && (a = "x"), f.params.virtualTranslate ? f.rtl ? -f.translate : f.translate : (r = window.getComputedStyle(e, null), window.WebKitCSSMatrix ? i = new WebKitCSSMatrix("none" === r.webkitTransform ? "" : r.webkitTransform) : (i = r.MozTransform || r.OTransform || r.MsTransform || r.msTransform || r.transform || r.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,"), t = i.toString().split(",")), "x" === a && (s = window.WebKitCSSMatrix ? i.m41 : parseFloat(16 === t.length ? t[12] : t[4])), "y" === a && (s = window.WebKitCSSMatrix ? i.m42 : parseFloat(16 === t.length ? t[13] : t[5])), f.rtl && s && (s = -s), s || 0));
      }, f.getWrapperTranslate = function (e) {
        return ("undefined" == typeof e && (e = t() ? "x" : "y"), f.getTranslate(f.wrapper[0], e));
      }, f.observers = [], f.initObservers = function () {
        if (f.params.observeParents) for (var e = f.container.parents(), a = 0; a < e.length; a++) i(e[a]);i(f.container[0], { childList: !1 }), i(f.wrapper[0], { attributes: !1 });
      }, f.disconnectObservers = function () {
        for (var e = 0; e < f.observers.length; e++) f.observers[e].disconnect();f.observers = [];
      }, f.createLoop = function () {
        f.wrapper.children("." + f.params.slideClass + "." + f.params.slideDuplicateClass).remove();
        var e = f.wrapper.children("." + f.params.slideClass);f.loopedSlides = parseInt(f.params.loopedSlides || f.params.slidesPerView, 10), f.loopedSlides = f.loopedSlides + f.params.loopAdditionalSlides, f.loopedSlides > e.length && (f.loopedSlides = e.length);var a,
            t = [],
            s = [];for (e.each(function (a, r) {
          var i = h(this);a < f.loopedSlides && s.push(r), a < e.length && a >= e.length - f.loopedSlides && t.push(r), i.attr("data-swiper-slide-index", a);
        }), a = 0; a < s.length; a++) f.wrapper.append(h(s[a].cloneNode(!0)).addClass(f.params.slideDuplicateClass));for (a = t.length - 1; a >= 0; a--) f.wrapper.prepend(h(t[a].cloneNode(!0)).addClass(f.params.slideDuplicateClass));
      }, f.destroyLoop = function () {
        f.wrapper.children("." + f.params.slideClass + "." + f.params.slideDuplicateClass).remove(), f.slides.removeAttr("data-swiper-slide-index");
      }, f.fixLoop = function () {
        var e;f.activeIndex < f.loopedSlides ? (e = f.slides.length - 3 * f.loopedSlides + f.activeIndex, e += f.loopedSlides, f.slideTo(e, 0, !1, !0)) : ("auto" === f.params.slidesPerView && f.activeIndex >= 2 * f.loopedSlides || f.activeIndex > f.slides.length - 2 * f.params.slidesPerView) && (e = -f.slides.length + f.activeIndex + f.loopedSlides, e += f.loopedSlides, f.slideTo(e, 0, !1, !0));
      }, f.appendSlide = function (e) {
        if ((f.params.loop && f.destroyLoop(), "object" == typeof e && e.length)) for (var a = 0; a < e.length; a++) e[a] && f.wrapper.append(e[a]);else f.wrapper.append(e);f.params.loop && f.createLoop(), f.params.observer && f.support.observer || f.update(!0);
      }, f.prependSlide = function (e) {
        f.params.loop && f.destroyLoop();var a = f.activeIndex + 1;if ("object" == typeof e && e.length) {
          for (var t = 0; t < e.length; t++) e[t] && f.wrapper.prepend(e[t]);a = f.activeIndex + e.length;
        } else f.wrapper.prepend(e);f.params.loop && f.createLoop(), f.params.observer && f.support.observer || f.update(!0), f.slideTo(a, 0, !1);
      }, f.removeSlide = function (e) {
        f.params.loop && f.destroyLoop();var a,
            t = f.activeIndex;if ("object" == typeof e && e.length) {
          for (var s = 0; s < e.length; s++) a = e[s], f.slides[a] && f.slides.eq(a).remove(), t > a && t--;t = Math.max(t, 0);
        } else a = e, f.slides[a] && f.slides.eq(a).remove(), t > a && t--, t = Math.max(t, 0);f.params.observer && f.support.observer || f.update(!0), f.slideTo(t, 0, !1);
      }, f.removeAllSlides = function () {
        for (var e = [], a = 0; a < f.slides.length; a++) e.push(a);f.removeSlide(e);
      }, f.effects = { fade: { fadeIndex: null, setTranslate: function setTranslate() {
            for (var e = 0; e < f.slides.length; e++) {
              var a = f.slides.eq(e),
                  s = a[0].swiperSlideOffset,
                  r = -s;f.params.virtualTranslate || (r -= f.translate);var i = 0;t() || (i = r, r = 0);var n = f.params.fade.crossFade ? Math.max(1 - Math.abs(a[0].progress), 0) : 1 + Math.min(Math.max(a[0].progress, -1), 0);n > 0 && 1 > n && (f.effects.fade.fadeIndex = e), a.css({ opacity: n }).transform("translate3d(" + r + "px, " + i + "px, 0px)");
            }
          }, setTransition: function setTransition(e) {
            if ((f.slides.transition(e), f.params.virtualTranslate && 0 !== e)) {
              var a = null !== f.effects.fade.fadeIndex ? f.effects.fade.fadeIndex : f.activeIndex;f.slides.eq(a).transitionEnd(function () {
                for (var e = ["webkitTransitionEnd", "transitionend", "oTransitionEnd", "MSTransitionEnd", "msTransitionEnd"], a = 0; a < e.length; a++) f.wrapper.trigger(e[a]);
              });
            }
          } }, cube: { setTranslate: function setTranslate() {
            var e,
                a = 0;f.params.cube.shadow && (t() ? (e = f.wrapper.find(".swiper-cube-shadow"), 0 === e.length && (e = h("<div class=\"swiper-cube-shadow\"></div>"), f.wrapper.append(e)), e.css({ height: f.width + "px" })) : (e = f.container.find(".swiper-cube-shadow"), 0 === e.length && (e = h("<div class=\"swiper-cube-shadow\"></div>"), f.container.append(e))));for (var s = 0; s < f.slides.length; s++) {
              var r = f.slides.eq(s),
                  i = 90 * s,
                  n = Math.floor(i / 360);f.rtl && (i = -i, n = Math.floor(-i / 360));var o = Math.max(Math.min(r[0].progress, 1), -1),
                  l = 0,
                  p = 0,
                  d = 0;s % 4 === 0 ? (l = 4 * -n * f.size, d = 0) : (s - 1) % 4 === 0 ? (l = 0, d = 4 * -n * f.size) : (s - 2) % 4 === 0 ? (l = f.size + 4 * n * f.size, d = f.size) : (s - 3) % 4 === 0 && (l = -f.size, d = 3 * f.size + 4 * f.size * n), f.rtl && (l = -l), t() || (p = l, l = 0);var u = "rotateX(" + (t() ? 0 : -i) + "deg) rotateY(" + (t() ? i : 0) + "deg) translate3d(" + l + "px, " + p + "px, " + d + "px)";if ((1 >= o && o > -1 && (a = 90 * s + 90 * o, f.rtl && (a = 90 * -s - 90 * o)), r.transform(u), f.params.cube.slideShadows)) {
                var c = r.find(t() ? ".swiper-slide-shadow-left" : ".swiper-slide-shadow-top"),
                    m = r.find(t() ? ".swiper-slide-shadow-right" : ".swiper-slide-shadow-bottom");0 === c.length && (c = h("<div class=\"swiper-slide-shadow-" + (t() ? "left" : "top") + "\"></div>"), r.append(c)), 0 === m.length && (m = h("<div class=\"swiper-slide-shadow-" + (t() ? "right" : "bottom") + "\"></div>"), r.append(m));{
                  r[0].progress;
                }c.length && (c[0].style.opacity = -r[0].progress), m.length && (m[0].style.opacity = r[0].progress);
              }
            }if ((f.wrapper.css({ "-webkit-transform-origin": "50% 50% -" + f.size / 2 + "px", "-moz-transform-origin": "50% 50% -" + f.size / 2 + "px", "-ms-transform-origin": "50% 50% -" + f.size / 2 + "px", "transform-origin": "50% 50% -" + f.size / 2 + "px" }), f.params.cube.shadow)) if (t()) e.transform("translate3d(0px, " + (f.width / 2 + f.params.cube.shadowOffset) + "px, " + -f.width / 2 + "px) rotateX(90deg) rotateZ(0deg) scale(" + f.params.cube.shadowScale + ")");else {
              var v = Math.abs(a) - 90 * Math.floor(Math.abs(a) / 90),
                  g = 1.5 - (Math.sin(2 * v * Math.PI / 360) / 2 + Math.cos(2 * v * Math.PI / 360) / 2),
                  w = f.params.cube.shadowScale,
                  b = f.params.cube.shadowScale / g,
                  y = f.params.cube.shadowOffset;e.transform("scale3d(" + w + ", 1, " + b + ") translate3d(0px, " + (f.height / 2 + y) + "px, " + -f.height / 2 / b + "px) rotateX(-90deg)");
            }var x = f.isSafari || f.isUiWebView ? -f.size / 2 : 0;f.wrapper.transform("translate3d(0px,0," + x + "px) rotateX(" + (t() ? 0 : a) + "deg) rotateY(" + (t() ? -a : 0) + "deg)");
          }, setTransition: function setTransition(e) {
            f.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e), f.params.cube.shadow && !t() && f.container.find(".swiper-cube-shadow").transition(e);
          } }, coverflow: { setTranslate: function setTranslate() {
            for (var e = f.translate, a = t() ? -e + f.width / 2 : -e + f.height / 2, s = t() ? f.params.coverflow.rotate : -f.params.coverflow.rotate, r = f.params.coverflow.depth, i = 0, n = f.slides.length; n > i; i++) {
              var o = f.slides.eq(i),
                  l = f.slidesSizesGrid[i],
                  p = o[0].swiperSlideOffset,
                  d = (a - p - l / 2) / l * f.params.coverflow.modifier,
                  u = t() ? s * d : 0,
                  c = t() ? 0 : s * d,
                  m = -r * Math.abs(d),
                  v = t() ? 0 : f.params.coverflow.stretch * d,
                  g = t() ? f.params.coverflow.stretch * d : 0;Math.abs(g) < 0.001 && (g = 0), Math.abs(v) < 0.001 && (v = 0), Math.abs(m) < 0.001 && (m = 0), Math.abs(u) < 0.001 && (u = 0), Math.abs(c) < 0.001 && (c = 0);var w = "translate3d(" + g + "px," + v + "px," + m + "px)  rotateX(" + c + "deg) rotateY(" + u + "deg)";if ((o.transform(w), o[0].style.zIndex = -Math.abs(Math.round(d)) + 1, f.params.coverflow.slideShadows)) {
                var b = o.find(t() ? ".swiper-slide-shadow-left" : ".swiper-slide-shadow-top"),
                    y = o.find(t() ? ".swiper-slide-shadow-right" : ".swiper-slide-shadow-bottom");0 === b.length && (b = h("<div class=\"swiper-slide-shadow-" + (t() ? "left" : "top") + "\"></div>"), o.append(b)), 0 === y.length && (y = h("<div class=\"swiper-slide-shadow-" + (t() ? "right" : "bottom") + "\"></div>"), o.append(y)), b.length && (b[0].style.opacity = d > 0 ? d : 0), y.length && (y[0].style.opacity = -d > 0 ? -d : 0);
              }
            }if (f.browser.ie) {
              var x = f.wrapper[0].style;x.perspectiveOrigin = a + "px 50%";
            }
          }, setTransition: function setTransition(e) {
            f.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e);
          } } }, f.lazy = { initialImageLoaded: !1, loadImageInSlide: function loadImageInSlide(e) {
          if ("undefined" != typeof e && 0 !== f.slides.length) {
            var a = f.slides.eq(e),
                t = a.find("img.swiper-lazy:not(.swiper-lazy-loaded):not(.swiper-lazy-loading)");0 !== t.length && t.each(function () {
              var e = h(this);e.addClass("swiper-lazy-loading");var t = e.attr("data-src");f.loadImage(e[0], t, !1, function () {
                e.attr("src", t), e.removeAttr("data-src"), e.addClass("swiper-lazy-loaded").removeClass("swiper-lazy-loading"), a.find(".swiper-lazy-preloader, .preloader").remove(), f.emit("onLazyImageReady", f, a[0], e[0]);
              }), f.emit("onLazyImageLoad", f, a[0], e[0]);
            });
          }
        }, load: function load() {
          if (f.params.watchSlidesVisibility) f.wrapper.children("." + f.params.slideVisibleClass).each(function () {
            f.lazy.loadImageInSlide(h(this).index());
          });else if (f.params.slidesPerView > 1) for (var e = f.activeIndex; e < f.activeIndex + f.params.slidesPerView; e++) f.slides[e] && f.lazy.loadImageInSlide(e);else f.lazy.loadImageInSlide(f.activeIndex);if (f.params.lazyLoadingInPrevNext) {
            var a = f.wrapper.children("." + f.params.slideNextClass);a.length > 0 && f.lazy.loadImageInSlide(a.index());var t = f.wrapper.children("." + f.params.slidePrevClass);t.length > 0 && f.lazy.loadImageInSlide(t.index());
          }
        }, onTransitionStart: function onTransitionStart() {
          f.params.lazyLoading && (f.params.lazyLoadingOnTransitionStart || !f.params.lazyLoadingOnTransitionStart && !f.lazy.initialImageLoaded) && (f.lazy.initialImageLoaded = !0, f.lazy.load());
        }, onTransitionEnd: function onTransitionEnd() {
          f.params.lazyLoading && !f.params.lazyLoadingOnTransitionStart && f.lazy.load();
        } }, f.scrollbar = { set: function set() {
          if (f.params.scrollbar) {
            var e = f.scrollbar;e.track = h(f.params.scrollbar), e.drag = e.track.find(".swiper-scrollbar-drag"), 0 === e.drag.length && (e.drag = h("<div class=\"swiper-scrollbar-drag\"></div>"), e.track.append(e.drag)), e.drag[0].style.width = "", e.drag[0].style.height = "", e.trackSize = t() ? e.track[0].offsetWidth : e.track[0].offsetHeight, e.divider = f.size / f.virtualSize, e.moveDivider = e.divider * (e.trackSize / f.size), e.dragSize = e.trackSize * e.divider, t() ? e.drag[0].style.width = e.dragSize + "px" : e.drag[0].style.height = e.dragSize + "px", e.track[0].style.display = e.divider >= 1 ? "none" : "", f.params.scrollbarHide && (e.track[0].style.opacity = 0);
          }
        }, setTranslate: function setTranslate() {
          if (f.params.scrollbar) {
            var e,
                a = f.scrollbar,
                s = (f.translate || 0, a.dragSize);e = (a.trackSize - a.dragSize) * f.progress, f.rtl && t() ? (e = -e, e > 0 ? (s = a.dragSize - e, e = 0) : -e + a.dragSize > a.trackSize && (s = a.trackSize + e)) : 0 > e ? (s = a.dragSize + e, e = 0) : e + a.dragSize > a.trackSize && (s = a.trackSize - e), t() ? (a.drag.transform(f.support.transforms3d ? "translate3d(" + e + "px, 0, 0)" : "translateX(" + e + "px)"), a.drag[0].style.width = s + "px") : (a.drag.transform(f.support.transforms3d ? "translate3d(0px, " + e + "px, 0)" : "translateY(" + e + "px)"), a.drag[0].style.height = s + "px"), f.params.scrollbarHide && (clearTimeout(a.timeout), a.track[0].style.opacity = 1, a.timeout = setTimeout(function () {
              a.track[0].style.opacity = 0, a.track.transition(400);
            }, 1000));
          }
        }, setTransition: function setTransition(e) {
          f.params.scrollbar && f.scrollbar.drag.transition(e);
        } }, f.controller = { setTranslate: function setTranslate(e, a) {
          var t,
              s,
              r = f.params.control;if (f.isArray(r)) for (var i = 0; i < r.length; i++) r[i] !== a && r[i] instanceof Swiper && (e = r[i].rtl && "horizontal" === r[i].params.direction ? -f.translate : f.translate, t = (r[i].maxTranslate() - r[i].minTranslate()) / (f.maxTranslate() - f.minTranslate()), s = (e - f.minTranslate()) * t + r[i].minTranslate(), f.params.controlInverse && (s = r[i].maxTranslate() - s), r[i].updateProgress(s), r[i].setWrapperTranslate(s, !1, f), r[i].updateActiveIndex());else r instanceof Swiper && a !== r && (e = r.rtl && "horizontal" === r.params.direction ? -f.translate : f.translate, t = (r.maxTranslate() - r.minTranslate()) / (f.maxTranslate() - f.minTranslate()), s = (e - f.minTranslate()) * t + r.minTranslate(), f.params.controlInverse && (s = r.maxTranslate() - s), r.updateProgress(s), r.setWrapperTranslate(s, !1, f), r.updateActiveIndex());
        }, setTransition: function setTransition(e, a) {
          var t = f.params.control;if (f.isArray(t)) for (var s = 0; s < t.length; s++) t[s] !== a && t[s] instanceof Swiper && t[s].setWrapperTransition(e, f);else t instanceof Swiper && a !== t && t.setWrapperTransition(e, f);
        } }, f.hashnav = { init: function init() {
          if (f.params.hashnav) {
            f.hashnav.initialized = !0;var e = document.location.hash.replace("#", "");if (e) for (var a = 0, t = 0, s = f.slides.length; s > t; t++) {
              var r = f.slides.eq(t),
                  i = r.attr("data-hash");if (i === e && !r.hasClass(f.params.slideDuplicateClass)) {
                var n = r.index();f.slideTo(n, a, f.params.runCallbacksOnInit, !0);
              }
            }
          }
        }, setHash: function setHash() {
          f.hashnav.initialized && f.params.hashnav && (document.location.hash = f.slides.eq(f.activeIndex).attr("data-hash") || "");
        } }, f.disableKeyboardControl = function () {
        h(document).off("keydown", n);
      }, f.enableKeyboardControl = function () {
        h(document).on("keydown", n);
      }, f._wheelEvent = !1, f._lastWheelScrollTime = new Date().getTime(), f.params.mousewheelControl)) {
        if ((void 0 !== document.onmousewheel && (f._wheelEvent = "mousewheel"), !f._wheelEvent)) try {
          new WheelEvent("wheel"), f._wheelEvent = "wheel";
        } catch (D) {}f._wheelEvent || (f._wheelEvent = "DOMMouseScroll");
      }f.disableMousewheelControl = function () {
        return f._wheelEvent ? (f.container.off(f._wheelEvent, o), !0) : !1;
      }, f.enableMousewheelControl = function () {
        return f._wheelEvent ? (f.container.on(f._wheelEvent, o), !0) : !1;
      }, f.parallax = { setTranslate: function setTranslate() {
          f.container.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function () {
            l(this, f.progress);
          }), f.slides.each(function () {
            var e = h(this);e.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function () {
              var a = Math.min(Math.max(e[0].progress, -1), 1);l(this, a);
            });
          });
        }, setTransition: function setTransition(e) {
          "undefined" == typeof e && (e = f.params.speed), f.container.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function () {
            var a = h(this),
                t = parseInt(a.attr("data-swiper-parallax-duration"), 10) || e;0 === e && (t = 0), a.transition(t);
          });
        } }, f._plugins = [];for (var L in f.plugins) {
        var G = f.plugins[L](f, f.params[L]);G && f._plugins.push(G);
      }return (f.callPlugins = function (e) {
        for (var a = 0; a < f._plugins.length; a++) e in f._plugins[a] && f._plugins[a][e](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      }, f.emitterEventListeners = {}, f.emit = function (e) {
        f.params[e] && f.params[e](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);var a;if (f.emitterEventListeners[e]) for (a = 0; a < f.emitterEventListeners[e].length; a++) f.emitterEventListeners[e][a](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);f.callPlugins && f.callPlugins(e, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      }, f.on = function (e, a) {
        return (e = p(e), f.emitterEventListeners[e] || (f.emitterEventListeners[e] = []), f.emitterEventListeners[e].push(a), f);
      }, f.off = function (e, a) {
        var t;if ((e = p(e), "undefined" == typeof a)) return (f.emitterEventListeners[e] = [], f);if (f.emitterEventListeners[e] && 0 !== f.emitterEventListeners[e].length) {
          for (t = 0; t < f.emitterEventListeners[e].length; t++) f.emitterEventListeners[e][t] === a && f.emitterEventListeners[e].splice(t, 1);return f;
        }
      }, f.once = function (e, a) {
        e = p(e);var t = (function (_t) {
          function t() {
            return _t.apply(this, arguments);
          }

          t.toString = function () {
            return _t.toString();
          };

          return t;
        })(function () {
          a(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]), f.off(e, t);
        });return (f.on(e, t), f);
      }, f.a11y = { makeFocusable: function makeFocusable(e) {
          return (e[0].tabIndex = "0", e);
        }, addRole: function addRole(e, a) {
          return (e.attr("role", a), e);
        }, addLabel: function addLabel(e, a) {
          return (e.attr("aria-label", a), e);
        }, disable: function disable(e) {
          return (e.attr("aria-disabled", !0), e);
        }, enable: function enable(e) {
          return (e.attr("aria-disabled", !1), e);
        }, onEnterKey: function onEnterKey(e) {
          13 === e.keyCode && (h(e.target).is(f.params.nextButton) ? (f.onClickNext(e), f.a11y.notify(f.isEnd ? f.params.lastSlideMsg : f.params.nextSlideMsg)) : h(e.target).is(f.params.prevButton) && (f.onClickPrev(e), f.a11y.notify(f.isBeginning ? f.params.firstSlideMsg : f.params.prevSlideMsg)));
        }, liveRegion: h("<span class=\"swiper-notification\" aria-live=\"assertive\" aria-atomic=\"true\"></span>"), notify: function notify(e) {
          var a = f.a11y.liveRegion;0 !== a.length && (a.html(""), a.html(e));
        }, init: function init() {
          if (f.params.nextButton) {
            var e = h(f.params.nextButton);f.a11y.makeFocusable(e), f.a11y.addRole(e, "button"), f.a11y.addLabel(e, f.params.nextSlideMsg);
          }if (f.params.prevButton) {
            var a = h(f.params.prevButton);f.a11y.makeFocusable(a), f.a11y.addRole(a, "button"), f.a11y.addLabel(a, f.params.prevSlideMsg);
          }h(f.container).append(f.a11y.liveRegion);
        }, destroy: function destroy() {
          f.a11y.liveRegion && f.a11y.liveRegion.length > 0 && f.a11y.liveRegion.remove();
        } }, f.init = function () {
        f.params.loop && f.createLoop(), f.updateContainerSize(), f.updateSlidesSize(), f.updatePagination(), f.params.scrollbar && f.scrollbar && f.scrollbar.set(), "slide" !== f.params.effect && f.effects[f.params.effect] && (f.params.loop || f.updateProgress(), f.effects[f.params.effect].setTranslate()), f.params.loop ? f.slideTo(f.params.initialSlide + f.loopedSlides, 0, f.params.runCallbacksOnInit) : (f.slideTo(f.params.initialSlide, 0, f.params.runCallbacksOnInit), 0 === f.params.initialSlide && (f.parallax && f.params.parallax && f.parallax.setTranslate(), f.lazy && f.params.lazyLoading && f.lazy.load())), f.attachEvents(), f.params.observer && f.support.observer && f.initObservers(), f.params.preloadImages && !f.params.lazyLoading && f.preloadImages(), f.params.autoplay && f.startAutoplay(), f.params.keyboardControl && f.enableKeyboardControl && f.enableKeyboardControl(), f.params.mousewheelControl && f.enableMousewheelControl && f.enableMousewheelControl(), f.params.hashnav && f.hashnav && f.hashnav.init(), f.params.a11y && f.a11y && f.a11y.init(), f.emit("onInit", f);
      }, f.cleanupStyles = function () {
        f.container.removeClass(f.classNames.join(" ")).removeAttr("style"), f.wrapper.removeAttr("style"), f.slides && f.slides.length && f.slides.removeClass([f.params.slideVisibleClass, f.params.slideActiveClass, f.params.slideNextClass, f.params.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-column").removeAttr("data-swiper-row"), f.paginationContainer && f.paginationContainer.length && f.paginationContainer.removeClass(f.params.paginationHiddenClass), f.bullets && f.bullets.length && f.bullets.removeClass(f.params.bulletActiveClass), f.params.prevButton && h(f.params.prevButton).removeClass(f.params.buttonDisabledClass), f.params.nextButton && h(f.params.nextButton).removeClass(f.params.buttonDisabledClass), f.params.scrollbar && f.scrollbar && (f.scrollbar.track && f.scrollbar.track.length && f.scrollbar.track.removeAttr("style"), f.scrollbar.drag && f.scrollbar.drag.length && f.scrollbar.drag.removeAttr("style"));
      }, f.destroy = function (e, a) {
        f.detachEvents(), f.stopAutoplay(), f.params.loop && f.destroyLoop(), a && f.cleanupStyles(), f.disconnectObservers(), f.params.keyboardControl && f.disableKeyboardControl && f.disableKeyboardControl(), f.params.mousewheelControl && f.disableMousewheelControl && f.disableMousewheelControl(), f.params.a11y && f.a11y && f.a11y.destroy(), f.emit("onDestroy"), e !== !1 && (f = null);
      }, f.init(), f);
    }
  }, Swiper.prototype = { isSafari: (function () {
      var e = navigator.userAgent.toLowerCase();return e.indexOf("safari") >= 0 && e.indexOf("chrome") < 0 && e.indexOf("android") < 0;
    })(), isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent), isArray: function isArray(e) {
      return "[object Array]" === Object.prototype.toString.apply(e);
    }, browser: { ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled, ieTouch: window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1 || window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1 }, device: (function () {
      var e = navigator.userAgent,
          a = e.match(/(Android);?[\s\/]+([\d.]+)?/),
          t = e.match(/(iPad).*OS\s([\d_]+)/),
          s = (e.match(/(iPod)(.*OS\s([\d_]+))?/), !t && e.match(/(iPhone\sOS)\s([\d_]+)/));return { ios: t || s || t, android: a };
    })(), support: { touch: window.Modernizr && Modernizr.touch === !0 || (function () {
        return !!("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch);
      })(), transforms3d: window.Modernizr && Modernizr.csstransforms3d === !0 || (function () {
        var e = document.createElement("div").style;return "webkitPerspective" in e || "MozPerspective" in e || "OPerspective" in e || "MsPerspective" in e || "perspective" in e;
      })(), flexbox: (function () {
        for (var e = document.createElement("div").style, a = "alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "), t = 0; t < a.length; t++) if (a[t] in e) return !0;
      })(), observer: (function () {
        return "MutationObserver" in window || "WebkitMutationObserver" in window;
      })() }, plugins: {} };for (var a = ["jQuery", "Zepto", "Dom7"], t = 0; t < a.length; t++) window[a[t]] && e(window[a[t]]);var s;s = "undefined" == typeof Dom7 ? window.Dom7 || window.Zepto || window.jQuery : Dom7, s && ("transitionEnd" in s.fn || (s.fn.transitionEnd = function (e) {
    function a(i) {
      if (i.target === this) for (e.call(this, i), t = 0; t < s.length; t++) r.off(s[t], a);
    }var t,
        s = ["webkitTransitionEnd", "transitionend", "oTransitionEnd", "MSTransitionEnd", "msTransitionEnd"],
        r = this;if (e) for (t = 0; t < s.length; t++) r.on(s[t], a);return this;
  }), "transform" in s.fn || (s.fn.transform = function (e) {
    for (var a = 0; a < this.length; a++) {
      var t = this[a].style;t.webkitTransform = t.MsTransform = t.msTransform = t.MozTransform = t.OTransform = t.transform = e;
    }return this;
  }), "transition" in s.fn || (s.fn.transition = function (e) {
    "string" != typeof e && (e += "ms");for (var a = 0; a < this.length; a++) {
      var t = this[a].style;t.webkitTransitionDuration = t.MsTransitionDuration = t.msTransitionDuration = t.MozTransitionDuration = t.OTransitionDuration = t.transitionDuration = e;
    }return this;
  }));
})(), "undefined" != typeof module ? module.exports = Swiper : "function" == typeof define && define.amd && define([], function () {
  "use strict";return Swiper;
});
//# sourceMappingURL=maps/swiper.jquery.min.js.map

},{}]},{},["./scripts/main.js"])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvY2hyaXMvV29ya2JlbmNoL3BpenphaW1wdWxzZS5jb20vc2NyaXB0cy9tYWluLmpzIiwiL1VzZXJzL2NocmlzL1dvcmtiZW5jaC9waXp6YWltcHVsc2UuY29tL3NjcmlwdHMvdmVuZG9yL2pxdWVyeS5hdXRvdGFiLmpzIiwiL1VzZXJzL2NocmlzL1dvcmtiZW5jaC9waXp6YWltcHVsc2UuY29tL3NjcmlwdHMvdmVuZG9yL2pxdWVyeS5pcy5qcyIsIi9Vc2Vycy9jaHJpcy9Xb3JrYmVuY2gvcGl6emFpbXB1bHNlLmNvbS9zY3JpcHRzL3ZlbmRvci9zd2lwZXIuanF1ZXJ5Lm1pbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0FDTUEsT0FBTyxDQUFDLDRCQUE0QixDQUFDLENBQUE7QUFDckMsT0FBTyxDQUFDLHlCQUF5QixDQUFDLENBQUE7QUFDbEMsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUE7O0FBRTdCLElBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7QUFDdkIsUUFBSSxVQUFVLEdBQUcsSUFBSSxNQUFNLENBQUMsbUJBQW1CLEVBQUU7QUFDN0Msa0JBQVUsRUFBRSxvQkFBb0I7S0FDbkMsQ0FBQyxDQUFBO0NBQ0w7O0FBRUQsQ0FBQyxDQUFDLDJCQUEyQixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxVQUFTLEVBQUUsRUFBRTtBQUNwRCxLQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLHFCQUFxQixDQUFDLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFBO0FBQzVELEtBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsOEJBQThCLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtDQUNqRSxDQUFDLENBQUE7O0FBRUYs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LFNBQVMsQ0FBQyxHQUFFO0FBQUMsT0FBQyxDQUFDLGlCQUFpQixHQUFDLFVBQVUsQ0FBQyxZQUFVO0FBQUMsU0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQSxHQUFFLENBQUMsQ0FBQyxLQUFLLEdBQUMsQ0FBQyxDQUFDLGtCQUFrQixHQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsR0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQTtLQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUM7QUFBQyxVQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFDLElBQUcsUUFBUSxJQUFFLE9BQU8sQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBRyxDQUFDLENBQUMsUUFBUSxFQUFDO0FBQUMsWUFBSSxDQUFDLENBQUMsUUFBTyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUFDLFdBQUMsS0FBRyxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLENBQUE7U0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxLQUFLLENBQUMsQ0FBQSxDQUFBO09BQUMsT0FBTyxDQUFDLEtBQUcsQ0FBQyxDQUFDLE1BQU0sR0FBQyxLQUFLLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7S0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDO0FBQUMsT0FBQyxHQUFDLENBQUMsSUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUMsTUFBTSxDQUFDLGdCQUFnQixJQUFFLE1BQU0sQ0FBQyxzQkFBc0I7VUFBQyxDQUFDLEdBQUMsSUFBSSxDQUFDLENBQUMsVUFBUyxDQUFDLEVBQUM7QUFBQyxTQUFDLENBQUMsT0FBTyxDQUFDLFVBQVMsQ0FBQyxFQUFDO0FBQUMsV0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFBO1NBQUMsQ0FBQyxDQUFBO09BQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFDLEVBQUMsVUFBVSxFQUFDLFdBQVcsSUFBRSxPQUFPLENBQUMsQ0FBQyxVQUFVLEdBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBQyxTQUFTLEVBQUMsV0FBVyxJQUFFLE9BQU8sQ0FBQyxDQUFDLFNBQVMsR0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsU0FBUyxFQUFDLGFBQWEsRUFBQyxXQUFXLElBQUUsT0FBTyxDQUFDLENBQUMsYUFBYSxHQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxhQUFhLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFBO0tBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFDO0FBQUMsT0FBQyxDQUFDLGFBQWEsS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQSxBQUFDLENBQUMsSUFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLE9BQU8sSUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUcsRUFBRSxDQUFDLENBQUMsUUFBUSxJQUFFLENBQUMsQ0FBQyxNQUFNLElBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBRSxDQUFDLENBQUMsT0FBTyxJQUFFLFFBQVEsQ0FBQyxhQUFhLElBQUUsUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLEtBQUcsT0FBTyxLQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxJQUFFLFVBQVUsS0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQSxBQUFDLENBQUEsQUFBQyxFQUFDO0FBQUMsWUFBRyxFQUFFLEtBQUcsQ0FBQyxJQUFFLEVBQUUsS0FBRyxDQUFDLElBQUUsRUFBRSxLQUFHLENBQUMsSUFBRSxFQUFFLEtBQUcsQ0FBQyxFQUFDO0FBQUMsY0FBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsSUFBRyxDQUFDLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxJQUFFLENBQUMsS0FBRyxDQUFDLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLE1BQU07QUFBQyxtQkFBTztXQUFBLEtBQUksSUFBSSxDQUFDLEdBQUMsRUFBQyxJQUFJLEVBQUMsTUFBTSxDQUFDLFdBQVcsRUFBQyxHQUFHLEVBQUMsTUFBTSxDQUFDLFdBQVcsRUFBQyxFQUFDLENBQUMsR0FBQyxNQUFNLENBQUMsVUFBVSxFQUFDLENBQUMsR0FBQyxNQUFNLENBQUMsV0FBVyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBQyxDQUFDLENBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUMsQ0FBQyxDQUFDLEtBQUssRUFBQyxDQUFDLENBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxFQUFFLEVBQUM7QUFBQyxnQkFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsSUFBSSxJQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsSUFBSSxHQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLEdBQUcsR0FBQyxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQTtXQUFDLElBQUcsQ0FBQyxDQUFDO0FBQUMsbUJBQU07V0FBQTtTQUFDLENBQUMsRUFBRSxJQUFFLENBQUMsRUFBRSxLQUFHLENBQUMsSUFBRSxFQUFFLEtBQUcsQ0FBQyxDQUFBLEtBQUksQ0FBQyxDQUFDLGNBQWMsR0FBQyxDQUFDLENBQUMsY0FBYyxFQUFFLEdBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsRUFBRSxLQUFHLENBQUMsSUFBRSxDQUFDLENBQUMsU0FBUyxFQUFFLEVBQUMsRUFBRSxLQUFHLENBQUMsSUFBRSxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUEsSUFBRyxDQUFDLEVBQUUsS0FBRyxDQUFDLElBQUUsRUFBRSxLQUFHLENBQUMsQ0FBQSxLQUFJLENBQUMsQ0FBQyxjQUFjLEdBQUMsQ0FBQyxDQUFDLGNBQWMsRUFBRSxHQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLEVBQUUsS0FBRyxDQUFDLElBQUUsQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFDLEVBQUUsS0FBRyxDQUFDLElBQUUsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFBLEFBQUMsQ0FBQTtPQUFDO0tBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFD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QyxDQUFDLENBQUMsU0FBUyxFQUFFLEdBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMsb0JBQW9CLEdBQUMsQUFBQyxJQUFJLElBQUksRUFBQSxDQUFFLE9BQU8sRUFBRSxDQUFDLFFBQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLElBQUUsQ0FBQyxDQUFDLFlBQVksRUFBRSxFQUFDLENBQUMsQ0FBQyxjQUFjLEdBQUMsQ0FBQyxDQUFDLGNBQWMsRUFBRSxHQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQTtLQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUM7QUFBQyxPQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBRSxHQUFHLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxFQUFDLENBQUMsSUFBRSxDQUFDLElBQUUsQ0FBQyxHQUFDLENBQUMsSUFBRSxHQUFHLEVBQUMsQ0FBQyxHQUFDLENBQUMsSUFBRSxHQUFHLENBQUEsR0FBRSxDQUFDLEVBQUUsSUFBRSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxHQUFHLENBQUEsSUFBRyxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxHQUFHLENBQUEsQUFBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFFLENBQUMsR0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFDLEVBQUUsQ0FBQyxHQUFDLENBQUMsR0FBQyxHQUFHLEdBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxJQUFJLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUUsQ0FBQyxHQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUMsRUFBRSxDQUFDLEdBQUMsQ0FBQyxHQUFDLEdBQUcsR0FBQyxDQUFDLEdBQUMsQ0FBQyxHQUFDLElBQUksRUFBQyxDQUFDLENBQUMsU0FBUyxDQUFDLGNBQWMsR0FBQyxDQUFDLEdBQUMsSUFBSSxHQUFDLENBQUMsR0FBQyxPQUFPLENBQUMsQ0FBQTtLQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQztBQUFDLGNBQU8sQ0FBQyxLQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLEdBQUMsSUFBSSxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsR0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFDLElBQUksR0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQSxDQUFBO0tBQUMsSUFBRyxFQUFFLElBQUksWUFBWSxNQUFNLENBQUEsQUFBQyxFQUFDLE9BQU8sSUFBSSxNQUFNLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFDLEVBQUMsU0FBUyxFQUFDLFlBQVksRUFBQyxpQkFBaUIsRUFBQyxXQUFXLEVBQUMsWUFBWSxFQUFDLENBQUMsRUFBQyxLQUFLLEVBQUMsR0FBRyxFQUFDLFFBQVEsRUFBQyxDQUFDLENBQUMsRUFBQyw0QkFBNEIsRUFBQyxDQUFDLENBQUMsRUFBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDLEVBQUMsZ0JBQWdCLEVBQUMsQ0FBQyxDQUFDLEVBQUMscUJBQXFCLEVBQUMsQ0FBQyxFQUFDLHNCQUFzQixFQUFDLENBQUMsQ0FBQyxFQUFDLDJCQUEyQixFQUFDLENBQUMsRUFBQyxjQUFjLEVBQUMsQ0FBQyxDQUFDLEVBQUMsZ0JBQWdCLEVBQUMsQ0FBQyxDQUFDLEVBQUMsTUFBTSxFQUFDLE9BQU8sRUFBQyxTQUFTLEVBQUMsRUFBQyxNQUFNLEVBQUMsRUFBRSxFQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUFDLEdBQUcsRUFBQyxRQUFRLEVBQUMsQ0FBQyxFQUFDLFlBQVksRUFBQyxDQUFDLENBQUMsRUFBQyxFQUFDLElBQUksRUFBQyxFQUFDLFlBQVksRUFBQyxDQUFDLENBQUMsRUFBQyxNQUFNLEVBQUMsQ0FBQyxDQUFDLEVBQUMsWUFBWSxFQUFDLEVBQUUsRUFBQyxXQUFXLEVBQUMsSUFBRyxFQUFDLEVBQUMsSUFBSSxFQUFDLEVBQUMsU0FBUyxFQUFDLENBQUMsQ0FBQyxFQUFDLEVBQUMsUUFBUSxFQUFDLENBQUMsQ0FBQyxFQUFDLFNBQVMsRUFBQyxJQUFJLEVBQUMsYUFBYSxFQUFDLENBQUMsQ0FBQyxFQUFDLGVBQWUsRUFBQyxDQUFDLENBQUMsRUFBQyxpQkFBaUIsRUFBQyxDQUFDLENBQUMsRUFBQyxxQkFBcUIsRUFBQyxDQUFDLENBQUMsRUFBQyxPQUFPLEVBQUMsQ0FBQyxDQUFDLEVBQUMsWUFBWSxFQUFDLENBQUMsRUFBQyxhQUFhLEVBQUMsQ0FBQyxFQUFDLGVBQWUsRUFBQyxDQUFDLEVBQUMsbUJBQW1CLEVBQUMsUUFBUSxFQUFDLGNBQWMsRUFBQyxDQUFDLEVBQUMsY0FBYyxFQUFDLENBQUMsQ0FBQyxFQUFDLFVBQVUsRUFBQyxDQUFDLEVBQUMsVUFBVSxFQUFDLEVBQUUsRUFBQyxhQUFhLEVBQUMsQ0FBQyxDQUFDLEVBQUMsV0FBVyxFQUFDLENBQUMsQ0FBQyxFQUFDLFVBQVUsRUFBQyxDQUFDLENBQUMsRUFBQyxlQUFlLEVBQUMsR0FBRSxFQUFDLFlBQVksRUFBQyxHQUFHLEVBQUMsWUFBWSxFQUFDLENBQUMsQ0FBQyxFQUFDLFlBQVksRUFBQyxDQUFDLENBQUMsRUFBQyxTQUFTLEVBQUMsQ0FBQyxFQUFDLHdCQUF3QixFQUFDLENBQUMsQ0FBQyxFQUFDLFVBQVUsRUFBQyxJQUFJLEVBQUMsbUJBQW1CLEVBQUMsQ0FBQyxDQUFDLEVBQUMsY0FBYyxFQUFDLENBQUMsQ0FBQyxFQUFDLHNCQUFzQixFQUFDLElBQUksRUFBQyxVQUFVLEVBQUMsQ0FBQyxDQUFDLEVBQUMsZUFBZSxFQUFDLElBQUcsRUFBQyxVQUFVLEVBQUMsSUFBSSxFQUFDLFVBQVUsRUFBQyxJQUFJLEVBQUMsbUJBQW1CLEVBQUMsQ0FBQyxDQUFDLEVBQUMscUJBQXFCLEVBQUMsQ0FBQyxDQUFDLEVBQUMsVUFBVSxFQUFDLENBQUMsQ0FBQyxFQUFDLGFBQWEsRUFBQyxDQUFDLENBQUMsRUFBQyx3QkFBd0IsRUFBQyxDQUFDLENBQUMsRUFBQyxtQkFBbUIsRUFBQyxDQUFDLENBQUMsRUFBQyxXQUFXLEVBQUMsQ0FBQyxDQUFDLEVBQUMscUJBQXFCLEVBQUMsQ0FBQyxDQUFDLEVBQUMsNEJBQTRCLEVBQUMsQ0FBQyxDQUFDLEVBQUMsYUFBYSxFQUFDLENBQUMsQ0FBQyxFQUFDLG1CQUFtQixFQUFDLENBQUMsQ0FBQyxFQUFDLElBQUksRUFBQyxDQUFDLENBQUMsRUFBQyxvQkFBb0IsRUFBQyxDQUFDLEVBQUMsWUFBWSxFQUFDLElBQUksRUFBQyxPQUFPLEVBQUMsS0FBSyxDQUFDLEVBQUMsY0FBYyxFQUFDLENBQUMsQ0FBQyxFQUFDLGdCQUFnQixFQUFDLENBQUMsQ0FBQyxFQUFDLGdCQUFnQixFQUFDLENBQUMsQ0FBQyxFQUFDLFlBQVksRUFBQyxJQUFJLEVBQUMsU0FBUyxFQUFDLENBQUMsQ0FBQyxFQUFDLGNBQWMsRUFBQyxtQkFBbUIsRUFBQyxVQUFVLEVBQUMsY0FBYyxFQUFDLGdCQUFnQixFQUFDLHFCQUFxQixFQUFDLGlCQUFpQixFQUFDLHNCQUFzQixFQUFDLG1CQUFtQixFQUFDLHdCQUF3QixFQUFDLGNBQWMsRUFBQyxtQkFBbUIsRUFBQyxjQUFjLEVBQUMsbUJBQW1CLEVBQUMsWUFBWSxFQUFDLGdCQUFnQixFQUFDLFdBQVcsRUFBQywwQkFBMEIsRUFBQyxpQkFBaUIsRUFBQyxpQ0FBaUMsRUFBQyxtQkFBbUIsRUFBQyx3QkFBd0IsRUFBQyxxQkFBcUIsRUFBQywwQkFBMEIsRUFBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDLEVBQUMsY0FBYyxFQUFDLENBQUMsQ0FBQyxFQUFDLElBQUksRUFBQyxDQUFDLENBQUMsRUFBQyxnQkFBZ0IsRUFBQyxnQkFBZ0IsRUFBQyxnQkFBZ0IsRUFBQyxZQUFZLEVBQUMsaUJBQWlCLEVBQUMseUJBQXlCLEVBQUMsZ0JBQWdCLEVBQUMsd0JBQXdCLEVBQUMsa0JBQWtCLEVBQUMsQ0FBQyxDQUFDLEVBQUM7UUFBQyxDQUFDLEdBQUMsQ0FBQyxJQUFFLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxJQUFFLEVBQUUsQ0FBQyxLQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQyxJQUFHLFdBQVcsSUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBRyxRQUFRLElBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsS0FBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsV0FBVyxJQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxDQUFDLElBQUksQ0FBQyxHQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsVUFBVSxHQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFHLENBQUMsR0FBQyxXQUFXLElBQUUsT0FBTyxJQUFJLEdBQUMsTUFBTSxDQUFDLElBQUksSUFBRSxNQUFNLENBQUMsS0FBSyxJQUFFLE1BQU0sQ0FBQyxNQUFNLEdBQUMsSUFBSSxFQUFDLENBQUMsS0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEtBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUEsQUFBQyxDQUFBLEVBQUM7QUFBQyxVQUFHLENBQUMsQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFDLENBQUMsRUFBQyxPQUFPLEtBQUssQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsWUFBVTtBQUFDLFlBQUksTUFBTSxDQUFDLElBQUksRUFBQyxDQUFDLENBQUMsQ0FBQTtPQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLG1CQUFtQixHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLElBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsNEJBQTRCLENBQUMsRUFBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sS0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyw2QkFBNkIsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsZUFBZSxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsSUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLHFCQUFxQixDQUFBLEtBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsR0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxNQUFNLEVBQUMsV0FBVyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUUsQ0FBQyxLQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxJQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLEdBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQSxHQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFDLE9BQU8sQ0FBQSxBQUFDLEVBQUMsT0FBTyxLQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFFLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLG1CQUFtQixHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUMsTUFBTSxLQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxLQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsZUFBZSxHQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGFBQWEsR0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxlQUFlLEdBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxHQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsR0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksR0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsR0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsR0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsTUFBTSxLQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxLQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsYUFBYSxHQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGVBQWUsR0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEdBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLEdBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLEdBQUMsQ0FBQyxFQUFDLFdBQVcsSUFBRSxPQUFPLENBQUMsS0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLGdCQUFnQixHQUFDLENBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLElBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEtBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEdBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxPQUFPLEdBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEtBQUcsQ0FBQyxDQUFDLG1CQUFtQixHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLElBQUUsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLFFBQVEsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMsR0FBRyxHQUFDLENBQUMsRUFBRSxLQUFHLEtBQUssS0FBRyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsSUFBRSxLQUFLLEtBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxHQUFHLElBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsRUFBQyxDQUFDLENBQUMsR0FBRyxLQUFHLENBQUMsQ0FBQyxRQUFRLEdBQUMsYUFBYSxLQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGVBQWUsR0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsMkJBQTJCLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQywwQkFBMEIsQ0FBQyxFQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLGVBQWUsR0FBQyxZQUFVO0FBQUMsU0FBQyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsR0FBQyxDQUFDLENBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLGVBQWUsR0FBQyxZQUFVO0FBQUMsU0FBQyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsR0FBQyxDQUFDLENBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLFVBQVUsR0FBQyxZQUFVO0FBQUMsU0FBQyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGdCQUFnQixHQUFDLENBQUMsQ0FBQyxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsaUJBQWlCLEdBQUMsWUFBVTtBQUFDLFNBQUMsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLEdBQUMsQ0FBQyxDQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxpQkFBaUIsR0FBQyxZQUFVO0FBQUMsU0FBQyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsR0FBQyxDQUFDLENBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLFlBQVksR0FBQyxZQUFVO0FBQUMsU0FBQyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGdCQUFnQixHQUFDLENBQUMsQ0FBQyxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsS0FBRyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUMsTUFBTSxFQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBQyxjQUFjLEVBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFDLFdBQVcsRUFBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUMsTUFBTSxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMsWUFBWSxHQUFDLEVBQUUsRUFBQyxDQUFDLENBQUMsWUFBWSxHQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsU0FBUyxHQUFDLFVBQVMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDO0FBQUMsaUJBQVMsQ0FBQyxHQUFFO0FBQUMsV0FBQyxJQUFFLENBQUMsRUFBRSxDQUFBO1NBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsSUFBRSxDQUFDLEdBQUMsQ0FBQyxFQUFFLEdBQUMsQ0FBQyxJQUFFLENBQUMsR0FBQyxJQUFJLEtBQUssRUFBQSxFQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxPQUFPLEdBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUMsQ0FBQyxDQUFBLEdBQUUsQ0FBQyxFQUFFLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxhQUFhLEdBQUMsWUFBVTtBQUFDLGlCQUFTLENBQUMsR0FBRTtBQUFDLHFCQUFXLElBQUUsT0FBTyxDQUFDLElBQUUsSUFBSSxLQUFHLENBQUMsS0FBRyxLQUFLLENBQUMsS0FBRyxDQUFDLENBQUMsWUFBWSxJQUFFLENBQUMsQ0FBQyxZQUFZLEVBQUUsRUFBQyxDQUFDLENBQUMsWUFBWSxLQUFHLENBQUMsQ0FBQyxZQUFZLENBQUMsTUFBTSxLQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLElBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFDLENBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQSxBQUFDLENBQUE7U0FBQyxDQUFDLENBQUMsWUFBWSxHQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLElBQUUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxpQkFBaUIsR0FBQyxLQUFLLENBQUMsRUFBQyxDQUFDLENBQUMsV0FBVyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxjQUFjLEdBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLGFBQWEsR0FBQyxZQUFVO0FBQUMsZUFBTSxXQUFXLElBQUUsT0FBTyxDQUFDLENBQUMsaUJBQWlCLEdBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLEdBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsV0FBVyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUMsQ0FBQyxDQUFDLEVBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQSxBQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxZQUFZLEdBQUMsWUFBVTtBQUFDLFNBQUMsQ0FBQyxpQkFBaUIsS0FBRyxDQUFDLENBQUMsaUJBQWlCLElBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxFQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLGlCQUFpQixHQUFDLEtBQUssQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsYUFBYSxHQUFDLFVBQVMsQ0FBQyxFQUFDO0FBQUMsU0FBQyxDQUFDLGNBQWMsS0FBRyxDQUFDLENBQUMsaUJBQWlCLElBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxFQUFDLENBQUMsQ0FBQyxjQUFjLEdBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxLQUFHLENBQUMsSUFBRSxDQUFDLENBQUMsY0FBYyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxDQUFBLEdBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsWUFBVTtBQUFDLFdBQUMsQ0FBQyxjQUFjLEdBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLEVBQUUsR0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLENBQUE7U0FBQyxDQUFDLENBQUEsQUFBQyxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsWUFBWSxHQUFDLFlBQVU7QUFBQyxlQUFNLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLFlBQVksR0FBQyxZQUFVO0FBQUMsZUFBTSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxtQkFBbUIsR0FBQyxZQUFVO0FBQUMsU0FBQyxDQUFDLEtBQUssR0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBQyxDQUFDLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxFQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUMsQ0FBQyxFQUFFLEdBQUMsQ0FBQyxDQUFDLEtBQUssR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsZ0JBQWdCLEdBQUMsWUFBVTtBQUFDLFNBQUMsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLFVBQVUsR0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLGVBQWUsR0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO1lBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWTtZQUFDLENBQUMsR0FBQyxDQUFDO1lBQUMsQ0FBQyxHQUFDLENBQUM7WUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFFBQVEsSUFBRSxPQUFPLENBQUMsSUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFFLENBQUMsS0FBRyxDQUFDLEdBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxJQUFJLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBQyxFQUFDLFVBQVUsRUFBQyxFQUFFLEVBQUMsU0FBUyxFQUFDLEVBQUUsRUFBQyxHQUFDLEVBQUMsV0FBVyxFQUFDLEVBQUUsRUFBQyxZQUFZLEVBQUMsRUFBRSxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGVBQWUsR0FBQyxDQUFDLEtBQUcsQ0FBQyxHQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsS0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGVBQWUsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUEsQUFBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUksQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUMsQ0FBQyxFQUFFLEVBQUM7QUFBQyxXQUFDLEdBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxlQUFlLEdBQUMsQ0FBQyxFQUFDO0FBQUMsZ0JBQUksQ0FBQztnQkFBQyxDQUFDO2dCQUFDLENBQUM7Z0JBQUMsQ0FBQztnQkFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsUUFBUSxLQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLElBQUUsQ0FBQyxHQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLEdBQUMsQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBQywyQkFBMkIsRUFBQyxDQUFDLEVBQUMsd0JBQXdCLEVBQUMsQ0FBQyxFQUFDLGdCQUFnQixFQUFDLENBQUMsRUFBQyxlQUFlLEVBQUMsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFBLElBQUcsQ0FBQyxHQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFDLFlBQVksRUFBQyxDQUFDLEtBQUcsQ0FBQyxJQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWSxJQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWSxHQUFDLElBQUksRUFBQyxDQUFDLENBQUMsSUFBSSxDQUFDLG9CQUFvQixFQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBQyxDQUFDLENBQUMsQ0FBQTtXQUFDLE1BQU0sS0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxLQUFHLE1BQU0sS0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLGFBQWEsR0FBQyxDQUFDLEdBQUMsQ0FBQyxFQUFFLEdBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBRSxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxhQUFhLEdBQUMsQ0FBQyxDQUFBLEdBQUUsQ0FBQyxDQUFBLEdBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUMsQ0FBQyxFQUFFLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFDLENBQUMsR0FBQyxJQUFJLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFDLENBQUMsR0FBQyxJQUFJLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBZSxHQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsSUFBRSxDQUFDLEdBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxDQUFDLEdBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxLQUFHLENBQUMsS0FBRyxDQUFDLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQyxLQUFJLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxLQUFHLENBQUMsSUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQSxJQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsS0FBRyxDQUFDLElBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMsV0FBVyxJQUFFLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsQ0FBQSxBQUFDLENBQUE7U0FBQyxDQUFDLENBQUMsV0FBVyxHQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBRyxDQUFDLENBQUMsR0FBRyxJQUFFLENBQUMsQ0FBQyxRQUFRLEtBQUcsT0FBTyxLQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFFLFdBQVcsS0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQSxBQUFDLElBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksR0FBQyxJQUFJLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sSUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQSxJQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxHQUFDLEVBQUMsS0FBSyxFQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLEdBQUMsSUFBSSxFQUFDLEdBQUMsRUFBQyxNQUFNLEVBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksR0FBQyxJQUFJLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsZUFBZSxHQUFDLENBQUMsS0FBRyxDQUFDLENBQUMsV0FBVyxHQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFBLEdBQUUsQ0FBQyxFQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsV0FBVyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksR0FBQyxJQUFJLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFBLEFBQUMsQ0FBQSxFQUFDO0FBQUMsZUFBSSxDQUFDLEdBQUMsRUFBRSxFQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBRSxFQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEdBQUMsQ0FBQyxDQUFBO1NBQUMsSUFBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFDO0FBQUMsZUFBSSxDQUFDLEdBQUMsRUFBRSxFQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBRSxFQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsSUFBSSxJQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEdBQUMsQ0FBQyxFQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUE7U0FBQyxDQUFDLEtBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEtBQUcs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Q0FBQyxHQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO2tCQUFDLENBQUMsR0FBQyxDQUFDLElBQUUsQ0FBQyxJQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsSUFBSSxJQUFFLENBQUMsR0FBQyxDQUFDLElBQUUsQ0FBQyxJQUFFLENBQUMsQ0FBQyxJQUFJLElBQUUsQ0FBQyxJQUFFLENBQUMsSUFBRSxDQUFDLElBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQTthQUFDLENBQUMsQ0FBQyxRQUFRLEdBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUE7V0FBQztTQUFDO09BQUMsRUFBQyxDQUFDLENBQUMsY0FBYyxHQUFDLFVBQVMsQ0FBQyxFQUFDO0FBQUMsbUJBQVcsSUFBRSxPQUFPLENBQUMsS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFNBQVMsSUFBRSxDQUFDLENBQUEsQUFBQyxDQUFDLElBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsR0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQyxLQUFHLENBQUMsSUFBRSxDQUFDLENBQUMsUUFBUSxHQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsV0FBVyxHQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUMsQ0FBQyxDQUFDLENBQUEsSUFBRyxDQUFDLENBQUMsUUFBUSxHQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQSxHQUFFLENBQUMsRUFBQyxDQUFDLENBQUMsV0FBVyxHQUFDLENBQUMsQ0FBQyxRQUFRLElBQUUsQ0FBQyxFQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUMsQ0FBQyxDQUFDLFFBQVEsSUFBRSxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxXQUFXLElBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsS0FBSyxJQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLElBQUUsQ0FBQyxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxpQkFBaUIsR0FBQyxZQUFVO0FBQUMsWUFBSSxDQUFDO1lBQUMsQ0FBQztZQUFDLENBQUM7WUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBQyxDQUFDLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxLQUFJLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBRSxFQUFDLFdBQVcsSUFBRSxPQUFPLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUEsR0FBRSxDQUFDLEdBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBRSxDQUFDLEdBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUEsQUFBQyxHQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUEsQUFBQyxDQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsSUFBRSxXQUFXLElBQUUsT0FBTyxDQUFDLENBQUEsS0FBSSxDQUFDLEdBQUMsQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLEdBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsRUFBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxLQUFHLENBQUMsQ0FBQyxXQUFXLEtBQUcsQ0FBQyxDQUFDLFNBQVMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLGFBQWEsR0FBQyxDQUFDLENBQUMsV0FBVyxFQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxhQUFhLEVBQUUsQ0FBQSxBQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxhQUFhLEdBQUMsWUFBVTtBQUFDLFNBQUMsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLEdBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxHQUFDLEdBQUcsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxLQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLEVBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsRUFBQyxDQUFDLENBQUMsT0FBTyxJQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQSxFQUFDO0FBQUMsV0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFFLENBQUMsR0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBQyxDQUFDLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxZQUFZLEtBQUcsQ0FBQyxJQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsWUFBWSxDQUFBLEFBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUMsQ0FBQyxLQUFHLENBQUMsSUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQSxBQUFDLENBQUEsR0FBRSxDQUFDLEdBQUMsV0FBVyxJQUFFLE9BQU8sQ0FBQyxDQUFDLFNBQVMsR0FBQyxDQUFDLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQyxXQUFXLElBQUUsQ0FBQyxFQUFDLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFlBQVU7QUFBQyxhQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUcsQ0FBQyxJQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO1dBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUE7U0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksS0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsS0FBRyxDQUFDLENBQUMsV0FBVyxJQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUUsQ0FBQyxDQUFDLElBQUksSUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFBLElBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksSUFBRSxDQUFDLENBQUMsSUFBSSxJQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUEsQ0FBQyxBQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEtBQUcsQ0FBQyxDQUFDLEtBQUssSUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFFLENBQUMsQ0FBQyxJQUFJLElBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQSxJQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUUsQ0FBQyxDQUFDLElBQUksSUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFBLENBQUMsQUFBQyxDQUFBLEFBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLGdCQUFnQixHQUFDLFlBQVU7QUFBQyxZQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxJQUFFLENBQUMsQ0FBQyxtQkFBbUIsSUFBRSxDQUFDLENBQUMsbUJBQW1CLENBQUMsTUFBTSxHQUFDLENBQUMsRUFBQztBQUFDLGVBQUksSUFBSSxDQUFDLEdBQUMsRUFBRSxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksR0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxZQUFZLENBQUEsR0FBRSxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxzQkFBc0IsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLHNCQUFzQixDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FB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QUUsQ0FBQyxDQUFDLEtBQUssSUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtPQUFDLENBQUMsSUFBSSxDQUFDLEdBQUMsQ0FBQyxXQUFXLEVBQUMsV0FBVyxFQUFDLFNBQVMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxHQUFDLENBQUMsR0FBQyxDQUFDLGFBQWEsRUFBQyxhQUFhLEVBQUMsV0FBVyxDQUFDLEdBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsS0FBRyxDQUFDLEdBQUMsQ0FBQyxlQUFlLEVBQUMsZUFBZSxFQUFDLGFBQWEsQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMsV0FBVyxHQUFDLEVBQUMsS0FBSyxFQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxJQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxhQUFhLEdBQUMsWUFBWSxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLElBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGFBQWEsR0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLEdBQUcsRUFBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsYUFBYSxHQUFDLFVBQVUsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsRUFBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxJQUFFLE1BQU0sQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUEsSUFBRyxDQUFDLFdBQVcsS0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLGlCQUFpQixHQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQSxDQUFFLFFBQVEsQ0FBQyxhQUFhLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsRUFBQyxDQUFDLENBQUMsVUFBVSxHQUFDLFVBQVMsQ0FBQyxFQUFDO0FBQUMsWUFBSSxDQUFDLEdBQUMsQ0FBQyxHQUFDLEtBQUssR0FBQyxJQUFJO1lBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxxQkFBcUIsR0FBQyxrQkFBa0I7WUFBQyxDQUFDLEdBQUMsV0FBVyxLQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEdBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBQyxDQUFDLEdBQUMsUUFBUTtZQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDLFlBQVksRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLElBQUksRUFBQyxDQUFDLENBQUMsV0FBVyxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBQyxDQUFDLENBQUMsVUFBVSxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsSUFBRyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssS0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDLFlBQVksRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLElBQUksRUFBQyxDQUFDLENBQUMsV0FBVyxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBQyxDQUFDLENBQUMsVUFBVSxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWEsSUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sS0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBQyxDQUFDLENBQUMsVUFBVSxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxDQUFBLEFBQUMsRUFBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsS0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFFLENBQUMsQ0FBQyxJQUFJLElBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMs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R0FBQyxLQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFDLFVBQVUsQ0FBQyxZQUFVO0FBQUMsZUFBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQTthQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUE7V0FBQyxNQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFBO1NBQUM7T0FBQyxDQUFDLElBQUksQ0FBQztVQUFDLENBQUM7VUFBQyxDQUFDO1VBQUMsQ0FBQztVQUFDLENBQUM7VUFBQyxDQUFDO1VBQUMsQ0FBQztVQUFDLENBQUM7VUFBQyxDQUFDO1VBQUMsQ0FBQyxHQUFDLGlDQUFpQztVQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO1VBQUMsQ0FBQyxHQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxPQUFPLEdBQUMsRUFBQyxNQUFNLEVBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUMsUUFBUSxFQUFDLENBQUMsRUFBQyxRQUFRLEVBQUMsQ0FBQyxFQUFDLElBQUksRUFBQyxDQUFDLEVBQUMsQ0FBQyxJQUFJLENBQUMsRUFBQyxDQUFDLENBQUMsS0FBRyxDQUFDLENBQUMsWUFBWSxHQUFDLFVBQVMsQ0FBQyxFQUFDO0FBQUMsYUFBRyxDQUFDLENBQUMsYUFBYSxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsYUFBYSxDQUFBLEFBQUMsRUFBQyxDQUFDLEdBQUMsWUFBWSxLQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxJQUFFLEVBQUUsT0FBTyxJQUFHLENBQUMsQ0FBQSxBQUFDLElBQUUsQ0FBQyxLQUFHLENBQUMsQ0FBQyxLQUFLLENBQUEsRUFBQztBQUFDLGNBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLElBQUUsQ0FBQyxDQUFDLENBQUMsRUFBQyxHQUFHLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsRUFBQyxPQUFPLE1BQUssQ0FBQyxDQUFDLFVBQVUsR0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLENBQUMsSUFBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWSxJQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsRUFBQztBQUFDLGlCQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLEtBQUssQ0FBQyxFQUFDLENBQUMsR0FBQyxLQUFLLENBQUMsRUFBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBQyxZQUFZLEtBQUcsQ0FBQyxDQUFDLElBQUksR0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBQyxDQUFDLENBQUMsS0FBSyxFQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFDLFlBQVksS0FBRyxDQUFDLENBQUMsSUFBSSxHQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsRUFBQyxDQUFDLENBQUMsVUFBVSxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxtQkFBbUIsRUFBRSxFQUFDLENBQUMsQ0FBQyxjQUFjLEdBQUMsS0FBSyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEdBQUMsQ0FBQyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsWUFBWSxLQUFHLENBQUMsQ0FBQyxJQUFJLENBQUEsRUFBQztBQUFDLGtCQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLFFBQVEsQ0FBQyxhQUFhLElBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUUsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsRUFBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFBO2FBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFBO1dBQUM7U0FBQztPQUFDLEVBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxVQUFTLENBQUMsRUFBQztBQUFDLGFBQUcsQ0FBQyxDQUFDLGFBQWEsS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQSxBQUFDLEVBQUMsRUFBRSxDQUFDLElBQUUsV0FBVyxLQUFHLENBQUMsQ0FBQyxJQUFJLElBQUUsQ0FBQyxDQUFDLHVCQUF1QixDQUFBLEFBQUMsQ0FBQSxFQUFDO0FBQUMsY0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBQyxRQUFPLENBQUMsR0FBQyxDQUFDLENBQUMsRUFBQyxNQUFLLENBQUMsQ0FBQyxVQUFVLEdBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxDQUFBLENBQUMsSUFBRyxDQUFDLElBQUUsUUFBUSxDQUFDLGFBQWEsSUFBRSxDQUFDLENBQUMsTUFBTSxLQUFHLFFBQVEsQ0FBQyxhQUFhLElBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUMsUUFBTyxDQUFDLEdBQUMsQ0FBQyxDQUFDLEVBQUMsTUFBSyxDQUFDLENBQUMsVUFBVSxHQUFDLENBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQSxDQUFDLEtBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUFDLEVBQUUsQ0FBQyxDQUFDLGFBQWEsSUFBRSxDQUFDLENBQUMsYUFBYSxDQUFDLE1BQU0sR0FBQyxDQUFDLENBQUEsQUFBQyxDQUFBLEVBQUM7QUFBQyxpQkFBRyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBQyxXQUFXLEtBQUcsQ0FBQyxDQUFDLElBQUksR0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBQyxDQUFDLENBQUMsS0FBSyxFQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFDLFdBQVcsS0FBRyxDQUFDLENBQUMsSUFBSSxHQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUMsV0FBVyxJQUFFLE9BQU8sQ0FBQyxDQUFBLEVBQUM7QUFBQyxrQkFBSSxDQUFDLEdBQUMsR0FBRyxHQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFDLENBQUMsRUFBRSxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsR0FBQyxFQUFFLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFBO2FBQUMsS0FBRyxDQUFDLElBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQUMsV0FBVyxJQUFFLE9BQU8sQ0FBQyxJQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxLQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxLQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxJQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxLQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFBLEFBQUMsS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQSxFQUFDO0FBQUMsa0JBQUcsQ0FBQyxFQUFDLE9BQU8sTUFBSyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxDQUFDLElBQUcsQ0FBQyxJQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUM7QUFBQyxpQkFBQyxDQUFDLFVBQVUsR0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLGNBQWMsRUFBRSxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsd0JBQXdCLElBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBRSxDQUFDLENBQUMsZUFBZSxFQUFFLEVBQUMsQ0FBQyxLQUFHLENBQUMsQ0FBQyxJQUFJLElBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsbUJBQW1CLEVBQUUsRUFBQyxDQUFDLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFNBQVMsSUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxrRkFBa0YsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxJQUFFLENBQUMsQ0FBQyxXQUFXLEtBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyw0QkFBNEIsR0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLEdBQUMsQ0FBQyxDQUFDLGFBQWEsRUFBRSxDQUFBLEFBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEtBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFDLE1BQU0sRUFBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUMsa0JBQWtCLEVBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFDLGNBQWMsRUFBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUMsVUFBVSxDQUFBLEFBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFDLENBQUMsRUFBRSxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBQyxDQUFDLENBQUMsR0FBRyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLGNBQWMsR0FBQyxDQUFDLEdBQUMsQ0FBQyxHQUFDLE1BQU0sR0FBQyxNQUFNLEVBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsS0FBRyxDQUFDLEdBQUMsQ0FBQyxJQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLElBQUUsQ0FBQyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLEdBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLEdBQUMsQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFBLEFBQUMsQ0FBQSxHQUFFLENBQUMsR0FBQyxDQUFDLElBQUUsQ0FBQyxHQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsR0FBQyxDQUFDLEdBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLEdBQUMsQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFBLEFBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxLQUFHLENBQUMsQ0FBQyx1QkFBdUIsR0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGdCQUFnQixJQUFFLE1BQU0sS0FBRyxDQUFDLENBQUMsY0FBYyxJQUFFLENBQUMsR0FBQyxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGdCQUFnQixJQUFFLE1BQU0sS0FBRyxDQUFDLENBQUMsY0FBYyxJQUFFLENBQUMsR0FBQyxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUEsRUFBQztBQUFDLHNCQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxHQUFDLENBQUMsRUFBQztBQUFDLHdCQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFNBQVMsSUFBRSxDQUFDLENBQUEsQUFBQyxFQUFDLE9BQU8sTUFBSyxDQUFDLEdBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQyxFQUFDLFFBQU8sQ0FBQyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsTUFBSyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksR0FBQyxDQUFDLEVBQUUsR0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQSxBQUFDLENBQUEsQ0FBQTttQkFBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxJQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUEsSUFBRyxDQUFDLENBQUMsaUJBQWlCLEVBQUUsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsS0FBRyxDQUFDLEtBQUcsQ0FBQyxDQUFDLE1BQU0sSUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUMsUUFBUSxFQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLEdBQUMsUUFBUSxHQUFDLFFBQVEsQ0FBQyxFQUFDLElBQUksRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsR0FBQyxVQUFVLEdBQUMsVUFBVSxDQUFDLEVBQUMsSUFBSSxFQUFDLEFBQUMsSUFBSSxJQUFJLEVBQUEsQ0FBRSxPQUFPLEVBQUUsRUFBQyxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQyxDQUFBO2lCQUFDO2VBQUM7YUFBQztXQUFDO1NBQUM7T0FBQyxFQUFDLENBQUMsQ0FBQyxVQUFVLEdBQUMsVUFBUyxDQUFDLEVBQUM7QUFBQyxhQUFHLENBQUMsQ0FBQyxhQUFhLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxhQUFhLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUEsRUFBQztBQUFDLFdBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxJQUFFLENBQUMsSUFBRSxDQUFDLEtBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFDLE1BQU0sRUFBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUMsY0FBYyxFQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBQyxXQUFXLEVBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFDLE1BQU0sQ0FBQSxBQUFDLENBQUMsSUFBSSxDQUFDLEdBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtjQUFDLENBQUMsR0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLEtBQUcsQ0FBQyxDQUFDLFVBQVUsS0FBRyxDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUFDLEdBQUcsR0FBQyxDQUFDLElBQUUsQ0FBQyxHQUFDLENBQUMsR0FBQyxHQUFHLEtBQUcsQ0FBQyxJQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsVUFBVSxDQUFDLFlBQVU7QUFBQyxhQUFDLEtBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLElBQUUsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLE1BQU0sR0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFFLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLENBQUE7V0FBQyxFQUFDLEdBQUcsQ0FBQyxDQUFBLEFBQUMsRUFBQyxHQUFHLEdBQUMsQ0FBQyxJQUFFLEdBQUcsR0FBQyxDQUFDLEdBQUMsQ0FBQyxLQUFHLENBQUMsSUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsRUFBQyxVQUFVLENBQUMsWUFBVTtBQUFDLGFBQUMsSUFBRSxDQUFDLENBQUMsVUFBVSxLQUFHLENBQUMsQ0FBQyxVQUFVLEdBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxDQUFBO1dBQUMsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsQ0FBQyxjQUFjLElBQUUsQ0FBQyxLQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxJQUFFLENBQUMsS0FBRyxDQUFDLENBQUEsRUFBQyxPQUFPLE1BQUssQ0FBQyxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksR0FBQyxDQUFDLENBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFBLEVBQUM7QUFBQyxnQkFBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLEVBQUMsT0FBTyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksRUFBRSxFQUFDLE9BQU8sS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxDQUFDLElBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsRUFBQztBQUFDLGtCQUFHLENBQUMsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxFQUFDO0FBQUMsb0JBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUU7b0JBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUU7b0JBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxRQUFRLEdBQUMsQ0FBQyxDQUFDLFFBQVE7b0JBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxHQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBQyxDQUFDLENBQUMsUUFBUSxHQUFDLENBQUMsRUFBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsR0FBQyxJQUFHLEtBQUcsQ0FBQyxDQUFDLFFBQVEsR0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxHQUFDLEdBQUcsSUFBRSxBQUFDLElBQUksSUFBSSxFQUFBLENBQUUsT0FBTyxFQUFFLEdBQUMsQ0FBQyxDQUFDLElBQUksR0FBQyxHQUFHLENBQUEsS0FBSSxDQUFDLENBQUMsUUFBUSxHQUFDLENBQUMsQ0FBQSxBQUFDLENBQUE7ZUFBQyxNQUFLLENBQUMsQ0FBQyxRQUFRLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFDLElBQUcsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLHFCQUFxQjtrQkFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBQyxDQUFDO2tCQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLENBQUMsSUFBSSxDQUFDO2tCQUFDLENBQUMsR0FBQyxDQUFDLENBQUM7a0JBQUMsQ0FBQyxHQUFDLEVBQUUsR0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLDJCQUEyQixDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLEtBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxzQkFBc0IsSUFBRSxDQUFDLEdBQUMsQ0FBQyxDQUFDLFlBQVksRUFBRSxHQUFDLENBQUMsQ0FBQyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLEdBQUMsQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFlBQVksRUFBRSxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUEsR0FBRSxDQUFDLEdBQUMsQ0FBQyxDQUFDLFlBQVksRUFBRSxDQUFBLEFBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFlBQVksRUFBRSxLQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsc0JBQXNCLElBQUUsQ0FBQyxHQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsR0FBQyxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsR0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQSxHQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLENBQUEsQUFBQyxFQUFDLENBQUMsS0FBRyxDQUFDLENBQUMsUUFBUSxLQUFHLENBQUMsR0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUMsQ0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsU0FBUyxDQUFBLEdBQUUsQ0FBQyxDQUFDLFFBQVEsR0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsU0FBUyxDQUFBLEdBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLHNCQUFzQixJQUFFLENBQUMsSUFBRSxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLEVBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxZQUFVO0FBQUMsaUJBQUMsS0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLGtCQUFrQixFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFDLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxZQUFVO0FBQUMsbUJBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQTtpQkFBQyxDQUFDLENBQUEsQUFBQyxDQUFBO2VBQUMsQ0FBQyxDQUFBLEdBQUUsQ0FBQyxDQUFDLFFBQVEsSUFBRSxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLEVBQUMsQ0FBQyxDQUFDLFNBQVMsS0FBRyxDQUFDLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLFlBQVU7QUFBQyxpQkFBQyxDQUFDLGVBQWUsRUFBRSxDQUFBO2VBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQSxHQUFFLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUE7YUFBQyxPQUFPLE1BQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLElBQUUsQ0FBQyxJQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFBLEtBQUksQ0FBQyxDQUFDLGNBQWMsRUFBRSxFQUFDLENBQUMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFBLENBQUMsQUFBQyxDQUFBO1dBQUMsSUFBSSxDQUFDO2NBQUMsQ0FBQyxHQUFDLENBQUM7Y0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFJLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsRUFBQyxXQUFXLElBQUUsT0FBTyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxHQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFHLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLEdBQUMsQ0FBQyxJQUFFLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQyxJQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFBLEdBQUUsQ0FBQyxDQUFDLElBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFDO0FBQUMsZ0JBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBQyxPQUFPLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsTUFBTSxLQUFHLENBQUMsQ0FBQyxjQUFjLElBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxlQUFlLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxHQUFDLENBQUMsQ0FBQyxFQUFDLE1BQU0sS0FBRyxDQUFDLENBQUMsY0FBYyxJQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGVBQWUsR0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEdBQUMsQ0FBQyxDQUFDLENBQUE7V0FBQyxNQUFJO0FBQUMsZ0JBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBQyxPQUFPLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsTUFBTSxLQUFHLENBQUMsQ0FBQyxjQUFjLElBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsRUFBQyxNQUFNLEtBQUcsQ0FBQyxDQUFDLGNBQWMsSUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFBO1dBQUM7U0FBQztPQUFDLEVBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBQyxVQUFTLENBQUMsRUFBQyxDQUFDLEVBQUM7QUFBQyxlQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsT0FBTyxHQUFDLFVBQVMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDO0FBQUMsbUJBQVcsSUFBRSxPQUFPLENBQUMsS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLFdBQVcsSUFBRSxPQUFPLENBQUMsS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsRUFBQyxDQUFDLENBQUMsU0FBUyxJQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxLQUFHLENBQUMsQ0FBQyxTQUFTLEdBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQyxJQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxJQUFFLENBQUMsQ0FBQyxXQUFXLEtBQUcsQ0FBQyxJQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyw0QkFBNEIsR0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFJLElBQUksQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQyxLQUFHLFdBQVcsSUFBRSxPQUFPLENBQUMsS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxhQUFhLEdBQUMsQ0FBQyxDQUFDLFdBQVcsSUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLEVBQUMsQ0FBQyxLQUFHLENBQUMsQ0FBQyxTQUFTLENBQUEsRUFBQyxRQUFPLENBQUMsQ0FBQyxhQUFhLEVBQUUsRUFBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBQyxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsUUFBTyxDQUFDLEtBQUcsQ0FBQyxJQUFFLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQSxJQUFHLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFNBQVMsS0FBRyxDQUFDLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLFlBQVU7QUFBQyxXQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFBO1NBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLGFBQWEsRUFBRSxFQUFDLENBQUMsQ0FBQyxDQUFBLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxpQkFBaUIsR0FBQyxVQUFTLENBQUMsRUFBQztBQUFDLG1CQUFXLElBQUUsT0FBTyxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMsSUFBSSxJQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsRUFBQyxDQUFDLEtBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsV0FBVyxLQUFHLENBQUMsQ0FBQyxhQUFhLElBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxlQUFlLEdBQUMsVUFBUyxDQUFDLEVBQUM7QUFBQyxTQUFDLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsRUFBQyxXQUFXLElBQUUsT0FBTyxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMsSUFBSSxJQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLEVBQUMsQ0FBQyxLQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFdBQVcsS0FBRyxDQUFDLENBQUMsYUFBYSxJQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEVBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFFLENBQUMsQ0FBQyxPQUFPLElBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBQyxVQUFTLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDO0FBQUMsWUFBRyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksRUFBQztBQUFDLGNBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBQyxPQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUFDLGFBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFBO1dBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQTtTQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsV0FBVyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxVQUFVLEdBQUMsVUFBUyxDQUFDLEVBQUM7QUFBQyxlQUFPLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUMsVUFBUyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUFDLFlBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUM7QUFBQyxjQUFHLENBQUMsQ0FBQyxTQUFTLEVBQUMsT0FBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7QUFBQyxhQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQTtXQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsV0FBVyxHQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFBO1NBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxVQUFVLEdBQUMsVUFBUyxDQUFDLEVBQUM7QUFBQyxlQUFPLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxVQUFVLEdBQUMsVUFBUyxDQUFDLEVBQUMsQ0FBQyxFQUFDO0FBQUMsZUFBTyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsb0JBQW9CLEdBQUMsVUFBUyxDQUFDLEVBQUMsQ0FBQyxFQUFDO0FBQUMsU0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUMsT0FBTyxLQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxJQUFFLENBQUMsQ0FBQyxRQUFRLElBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLElBQUUsQ0FBQyxDQUFDLFNBQVMsSUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBRSxDQUFDLENBQUMsVUFBVSxJQUFFLENBQUMsQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLG1CQUFtQixHQUFDLFVBQVMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUM7QUFBQyxZQUFJLENBQUMsR0FBQyxDQUFDO1lBQUMsQ0FBQyxHQUFDLENBQUM7WUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLElBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxZQUFZLEdBQUMsY0FBYyxHQUFDLENBQUMsR0FBQyxNQUFNLEdBQUMsQ0FBQyxHQUFDLE1BQU0sR0FBQyxDQUFDLEdBQUMsS0FBSyxHQUFDLFlBQVksR0FBQyxDQUFDLEdBQUMsTUFBTSxHQUFDLENBQUMsR0FBQyxLQUFLLENBQUMsRUFBQyxDQUFDLENBQUMsU0FBUyxHQUFDLENBQUMsRUFBRSxHQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxJQUFFLENBQUMsQ0FBQyxpQkFBaUIsRUFBRSxFQUFDLE9BQU8sS0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLElBQUUsQ0FBQyxDQUFDLFFBQVEsSUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLElBQUUsQ0FBQyxDQUFDLFNBQVMsSUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUUsQ0FBQyxDQUFDLFVBQVUsSUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLFlBQVksR0FBQyxVQUFTLENBQUMsRUFBQyxDQUFDLEVBQUM7QUFBQyxZQUFJLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxRQUFNLFdBQVcsSUFBRSxPQUFPLENBQUMsS0FBRyxDQUFDLEdBQUMsR0FBRyxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGdCQUFnQixHQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQyxTQUFTLElBQUUsQ0FBQyxHQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLEVBQUMsSUFBSSxDQUFDLEVBQUMsTUFBTSxDQUFDLGVBQWUsR0FBQyxDQUFDLEdBQUMsSUFBSSxlQUFlLENBQUMsTUFBTSxLQUFHLENBQUMsQ0FBQyxlQUFlLEdBQUMsRUFBRSxHQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsSUFBRSxDQUFDLEdBQUMsQ0FBQyxDQUFDLFlBQVksSUFBRSxDQUFDLENBQUMsVUFBVSxJQUFFLENBQUMsQ0FBQyxXQUFXLElBQUUsQ0FBQyxDQUFDLFdBQVcsSUFBRSxDQUFDLENBQUMsU0FBUyxJQUFFLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFDLG9CQUFvQixDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUEsQUFBQyxFQUFDLEdBQUcsS0FBRyxDQUFDLEtBQUcsQ0FBQyxHQUFDLE1BQU0sQ0FBQyxlQUFlLEdBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBQyxVQUFVLENBQUMsRUFBRSxLQUFHLENBQUMsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEFBQUMsRUFBQyxHQUFHLEtBQUcsQ0FBQyxLQUFHLENBQUMsR0FBQyxNQUFNLENBQUMsZUFBZSxHQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUMsVUFBVSxDQUFDLEVBQUUsS0FBRyxDQUFDLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBRSxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLElBQUUsQ0FBQyxDQUFBLEFBQUMsQ0FBQSxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsbUJBQW1CLEdBQUMsVUFBUyxDQUFDLEVBQUM7QUFBQyxnQkFBTSxXQUFXLElBQUUsT0FBTyxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsRUFBRSxHQUFDLEdBQUcsR0FBQyxHQUFHLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQSxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsU0FBUyxHQUFDLEVBQUUsRUFBQyxDQUFDLENBQUMsYUFBYSxHQUFDLFlBQVU7QUFBQyxZQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFDLEtBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsRUFBQyxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBRSxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxFQUFDLFNBQVMsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUMsRUFBQyxVQUFVLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsbUJBQW1CLEdBQUMsWUFBVTtBQUFDLGFBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUMsRUFBRSxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsVUFBVSxHQUFDLFlBQVU7QUFBQyxTQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEdBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUMzMitCLFlBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLEdBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWSxJQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFDLEVBQUUsQ0FBQyxFQUFDLENBQUMsQ0FBQyxZQUFZLEdBQUMsQ0FBQyxDQUFDLFlBQVksR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLG9CQUFvQixFQUFDLENBQUMsQ0FBQyxZQUFZLEdBQUMsQ0FBQyxDQUFDLE1BQU0sS0FBRyxDQUFDLENBQUMsWUFBWSxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUEsQUFBQyxDQUFDLElBQUksQ0FBQztZQUFDLENBQUMsR0FBQyxFQUFFO1lBQUMsQ0FBQyxHQUFDLEVBQUUsQ0FBQyxLQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBUyxDQUFDLEVBQUMsQ0FBQyxFQUFDO0FBQUMsY0FBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsWUFBWSxJQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLElBQUUsQ0FBQyxJQUFFLENBQUMsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDLFlBQVksSUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMseUJBQXlCLEVBQUMsQ0FBQyxDQUFDLENBQUE7U0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLEtBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxFQUFDLENBQUMsSUFBRSxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxZQUFVO0FBQUMsU0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxHQUFDLEdBQUcsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMseUJBQXlCLENBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLE9BQU8sR0FBQyxZQUFVO0FBQUMsWUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsWUFBWSxJQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFlBQVksR0FBQyxDQUFDLENBQUMsV0FBVyxFQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsWUFBWSxFQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEdBQUUsQ0FBQyxNQUFNLEtBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxhQUFhLElBQUUsQ0FBQyxDQUFDLFdBQVcsSUFBRSxDQUFDLEdBQUMsQ0FBQyxDQUFDLFlBQVksSUFBRSxDQUFDLENBQUMsV0FBVyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQSxLQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLFlBQVksRUFBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLFlBQVksRUFBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUMsVUFBUyxDQUFDLEVBQUM7QUFBQyxhQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFFLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBQyxRQUFRLElBQUUsT0FBTyxDQUFDLElBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQSxFQUFDLEtBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBRSxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFFLENBQUMsQ0FBQyxVQUFVLEVBQUUsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsSUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsSUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxZQUFZLEdBQUMsVUFBUyxDQUFDLEVBQUM7QUFBQyxTQUFDLENBQUMsTUFBTSxDQUFDLElBQUksSUFBRSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsSUFBRyxRQUFRLElBQUUsT0FBTyxDQUFDLElBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBQztBQUFDLGVBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBRSxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFBO1NBQUMsTUFBSyxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksSUFBRSxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLElBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLElBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsV0FBVyxHQUFDLFVBQVMsQ0FBQyxFQUFDO0FBQUMsU0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLElBQUksQ0FBQztZQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLElBQUcsUUFBUSxJQUFFLE9BQU8sQ0FBQyxJQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUM7QUFBQyxlQUFJLElBQUksQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxHQUFDLENBQUMsSUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUE7U0FBQyxNQUFLLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEdBQUMsQ0FBQyxJQUFFLENBQUMsRUFBRSxFQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsSUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsSUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxlQUFlLEdBQUMsWUFBVTtBQUFDLGFBQUksSUFBSSxDQUFDLEdBQUMsRUFBRSxFQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBRSxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLE9BQU8sR0FBQyxFQUFDLElBQUksRUFBQyxFQUFDLFNBQVMsRUFBQyxJQUFJLEVBQUMsWUFBWSxFQUFDLHdCQUFVO0FBQUMsaUJBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBQztBQUFDLGtCQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7a0JBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxpQkFBaUI7a0JBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLEtBQUcsQ0FBQyxJQUFFLENBQUMsQ0FBQyxTQUFTLENBQUEsQUFBQyxDQUFDLElBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBRyxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUEsQUFBQyxDQUFDLElBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBQyxDQUFDLENBQUMsR0FBQyxDQUFDLEdBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxJQUFFLENBQUMsR0FBQyxDQUFDLEtBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxjQUFjLEdBQUMsQ0FBQyxHQUFDLE1BQU0sR0FBQyxDQUFDLEdBQUMsVUFBVSxDQUFDLENBQUE7YUFBQztXQUFDLEVBQUMsYUFBYSxFQUFDLHVCQUFTLENBQUMsRUFBQztBQUFDLGlCQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLElBQUUsQ0FBQyxLQUFHLENBQUMsQ0FBQSxFQUFDO0FBQUMsa0JBQUksQ0FBQyxHQUFDLElBQUksS0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLFlBQVU7QUFBQyxxQkFBSSxJQUFJLENBQUMsR0FBQyxDQUFDLHFCQUFxQixFQUFDLGVBQWUsRUFBQyxnQkFBZ0IsRUFBQyxpQkFBaUIsRUFBQyxpQkFBaUIsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7ZUFBQyxDQUFDLENBQUE7YUFBQztXQUFDLEVBQUMsRUFBQyxJQUFJLEVBQUMsRUFBQyxZQUFZLEVBQUMsd0JBQVU7QUFBQyxnQkFBSSxDQUFDO2dCQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFHLENBQUMsRUFBRSxJQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxFQUFDLENBQUMsS0FBRyxDQUFDLENBQUMsTUFBTSxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsMENBQXdDLENBQUMsRUFBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFDLE1BQU0sRUFBQyxDQUFDLENBQUMsS0FBSyxHQUFDLElBQUksRUFBQyxDQUFDLENBQUEsSUFBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsRUFBQyxDQUFDLEtBQUcsQ0FBQyxDQUFDLE1BQU0sS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLDBDQUF3QyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxDQUFBLENBQUMsQUFBQyxDQUFDLEtBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBQztBQUFDLGtCQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7a0JBQUMsQ0FBQyxHQUFDLEVBQUUsR0FBQyxDQUFDO2tCQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBQyxHQUFHLENBQUMsQ0FBQSxBQUFDLENBQUMsSUFBSSxDQUFDLEdBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUM7a0JBQUMsQ0FBQyxHQUFDLENBQUM7a0JBQUMsQ0FBQyxHQUFDLENBQUM7a0JBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxLQUFHLENBQUMsSUFBRSxDQUFDLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQSxHQUFFLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQSxHQUFFLENBQUMsS0FBRyxDQUFDLElBQUUsQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxJQUFJLENBQUEsR0FBRSxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUEsR0FBRSxDQUFDLEtBQUcsQ0FBQyxJQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsSUFBSSxHQUFDLENBQUMsR0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLElBQUksRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQSxHQUFFLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQSxHQUFFLENBQUMsS0FBRyxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBQyxDQUFDLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUMsQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMsR0FBRyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxFQUFFLEtBQUcsQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQyxJQUFJLENBQUMsR0FBQyxVQUFVLElBQUUsQ0FBQyxFQUFFLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFBLEFBQUMsR0FBQyxlQUFlLElBQUUsQ0FBQyxFQUFFLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLEdBQUMsbUJBQW1CLEdBQUMsQ0FBQyxHQUFDLE1BQU0sR0FBQyxDQUFDLEdBQUMsTUFBTSxHQUFDLENBQUMsR0FBQyxLQUFLLENBQUMsS0FBRyxDQUFDLElBQUUsQ0FBQyxJQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsS0FBRyxDQUFDLEdBQUMsRUFBRSxHQUFDLENBQUMsR0FBQyxFQUFFLEdBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUcsQ0FBQyxHQUFDLEVBQUUsR0FBQyxDQUFDLENBQUMsR0FBQyxFQUFFLEdBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUEsRUFBQztBQUFDLG9CQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxHQUFDLDJCQUEyQixHQUFDLDBCQUEwQixDQUFDO29CQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxHQUFDLDRCQUE0QixHQUFDLDZCQUE2QixDQUFDLENBQUMsQ0FBQyxLQUFHLENBQUMsQ0FBQyxNQUFNLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxtQ0FBa0MsSUFBRSxDQUFDLEVBQUUsR0FBQyxNQUFNLEdBQUMsS0FBSyxDQUFBLEFBQUMsR0FBQyxXQUFVLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLEtBQUcsQ0FBQyxDQUFDLE1BQU0sS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLG1DQUFrQyxJQUFFLENBQUMsRUFBRSxHQUFDLE9BQU8sR0FBQyxRQUFRLENBQUEsQUFBQyxHQUFDLFdBQVUsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxDQUFDO0FBQUMsbUJBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUE7aUJBQUMsQ0FBQyxDQUFDLE1BQU0sS0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLEtBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQSxBQUFDLENBQUE7ZUFBQzthQUFDLEtBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBQywwQkFBMEIsRUFBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLElBQUksR0FBQyxDQUFDLEdBQUMsSUFBSSxFQUFDLHVCQUF1QixFQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsSUFBSSxHQUFDLENBQUMsR0FBQyxJQUFJLEVBQUMsc0JBQXNCLEVBQUMsV0FBVyxHQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUMsQ0FBQyxHQUFDLElBQUksRUFBQyxrQkFBa0IsRUFBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLElBQUksR0FBQyxDQUFDLEdBQUMsSUFBSSxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUEsRUFBQyxJQUFHLENBQUMsRUFBRSxFQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsbUJBQW1CLElBQUUsQ0FBQyxDQUFDLEtBQUssR0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFBLEFBQUMsR0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFDLENBQUMsR0FBQyx5Q0FBeUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUMsR0FBRyxDQUFDLENBQUMsS0FBSTtBQUFDLGtCQUFJLENBQUMsR0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFDLEVBQUUsR0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUMsRUFBRSxDQUFDO2tCQUFDLENBQUMsR0FBQyxHQUFHLElBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQyxFQUFFLEdBQUMsR0FBRyxDQUFDLEdBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsRUFBRSxHQUFDLEdBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDO2tCQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXO2tCQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUMsQ0FBQztrQkFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsVUFBVSxHQUFDLENBQUMsR0FBQyxPQUFPLEdBQUMsQ0FBQyxHQUFDLHFCQUFxQixJQUFFLENBQUMsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLEdBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBQyxDQUFDLEdBQUMsQ0FBQyxHQUFDLHFCQUFxQixDQUFDLENBQUE7YUFBQyxJQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsUUFBUSxJQUFFLENBQUMsQ0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEdBQUMsQ0FBQyxHQUFDLGNBQWMsSUFBRSxDQUFDLEVBQUUsR0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFBLEFBQUMsR0FBQyxlQUFlLElBQUUsQ0FBQyxFQUFFLEdBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFBLEFBQUMsR0FBQyxNQUFNLENBQUMsQ0FBQTtXQUFDLEVBQUMsYUFBYSxFQUFDLHVCQUFTLENBQUMsRUFBQztBQUFDLGFBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyw4R0FBOEcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUUsQ0FBQyxDQUFDLEVBQUUsSUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQTtXQUFDLEVBQUMsRUFBQyxTQUFTLEVBQUMsRUFBQyxZQUFZLEVBQUMsd0JBQVU7QUFBQyxpQkFBSSxJQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsU0FBUyxFQUFDLENBQUMsR0FBQyxDQUFDLEVBQUUsR0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsS0FBSyxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxFQUFFLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUMsQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBQztBQUFDLGtCQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7a0JBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO2tCQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsaUJBQWlCO2tCQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLEdBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQSxHQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRO2tCQUFDLENBQUMsR0FBQyxDQUFDLEVBQUUsR0FBQyxDQUFDLEdBQUMsQ0FBQyxHQUFDLENBQUM7a0JBQUMsQ0FBQyxHQUFDLENBQUMsRUFBRSxHQUFDLENBQUMsR0FBQyxDQUFDLEdBQUMsQ0FBQztrQkFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLEdBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7a0JBQUMsQ0FBQyxHQUFDLENBQUMsRUFBRSxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEdBQUMsQ0FBQztrQkFBQyxDQUFDLEdBQUMsQ0FBQyxFQUFFLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsT0FBTyxHQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQyxLQUFJLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQyxLQUFJLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQyxLQUFJLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQyxLQUFJLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQyxLQUFJLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLENBQUMsSUFBSSxDQUFDLEdBQUMsY0FBYyxHQUFDLENBQUMsR0FBQyxLQUFLLEdBQUMsQ0FBQyxHQUFDLEtBQUssR0FBQyxDQUFDLEdBQUMsZUFBZSxHQUFDLENBQUMsR0FBQyxlQUFlLEdBQUMsQ0FBQyxHQUFDLE1BQU0sQ0FBQyxLQUFHLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFBLEVBQUM7QUFBQyxvQkFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsR0FB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QUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFBO1dBQUM7U0FBQyxFQUFDLGlCQUFpQixFQUFDLDZCQUFVO0FBQUMsV0FBQyxDQUFDLE1BQU0sQ0FBQyxXQUFXLEtBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyw0QkFBNEIsSUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsNEJBQTRCLElBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFBLEFBQUMsS0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLGtCQUFrQixHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUEsQUFBQyxDQUFBO1NBQUMsRUFBQyxlQUFlLEVBQUMsMkJBQVU7QUFBQyxXQUFDLENBQUMsTUFBTSxDQUFDLFdBQVcsSUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsNEJBQTRCLElBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQTtTQUFDLEVBQUMsRUFBQyxDQUFDLENBQUMsU0FBUyxHQUFDLEVBQUMsR0FBRyxFQUFDLGVBQVU7QUFBQyxjQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFDO0FBQUMsZ0JBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsRUFBQyxDQUFDLENBQUMsSUFBSSxHQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLEVBQUMsQ0FBQyxLQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFHLENBQUMsQ0FBQyxJQUFJLEdBQUMsQ0FBQyxDQUFDLDZDQUEyQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUMsRUFBRSxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBQyxDQUFDLEVBQUUsR0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksRUFBQyxDQUFDLENBQUMsT0FBTyxHQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBQyxDQUFDLENBQUMsV0FBVyxHQUFDLENBQUMsQ0FBQyxPQUFPLElBQUUsQ0FBQyxDQUFDLFNBQVMsR0FBQyxDQUFDLENBQUMsSUFBSSxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMsUUFBUSxHQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUMsQ0FBQyxDQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUUsR0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBQyxJQUFJLEdBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxRQUFRLEdBQUMsSUFBSSxFQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBQyxDQUFDLENBQUMsT0FBTyxJQUFFLENBQUMsR0FBQyxNQUFNLEdBQUMsRUFBRSxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsYUFBYSxLQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBQyxDQUFDLENBQUEsQUFBQyxDQUFBO1dBQUM7U0FBQyxFQUFDLFlBQVksRUFBQyx3QkFBVTtBQUFDLGNBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUM7QUFBQyxnQkFBSSxDQUFDO2dCQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsU0FBUztnQkFBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLFNBQVMsSUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQSxBQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBQyxDQUFDLENBQUMsUUFBUSxDQUFBLEdBQUUsQ0FBQyxDQUFDLFFBQVEsRUFBQyxDQUFDLENBQUMsR0FBRyxJQUFFLENBQUMsRUFBRSxJQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxJQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsUUFBUSxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFBLEdBQUUsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBQyxDQUFDLENBQUMsU0FBUyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQSxBQUFDLENBQUEsR0FBRSxDQUFDLEdBQUMsQ0FBQyxJQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsUUFBUSxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFBLEdBQUUsQ0FBQyxHQUFDLENBQUMsQ0FBQyxRQUFRLEdBQUMsQ0FBQyxDQUFDLFNBQVMsS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsRUFBRSxJQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxHQUFDLGNBQWMsR0FBQyxDQUFDLEdBQUMsV0FBVyxHQUFDLGFBQWEsR0FBQyxDQUFDLEdBQUMsS0FBSyxDQUFDLEVBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFDLENBQUMsR0FBQyxJQUFJLENBQUEsSUFBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFlBQVksR0FBQyxtQkFBbUIsR0FBQyxDQUFDLEdBQUMsUUFBUSxHQUFDLGFBQWEsR0FBQyxDQUFDLEdBQUMsS0FBSyxDQUFDLEVBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFDLENBQUMsR0FBQyxJQUFJLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsYUFBYSxLQUFHLFlBQVksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsT0FBTyxHQUFDLFVBQVUsQ0FBQyxZQUFVO0FBQUMsZUFBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQTthQUFDLEVBQUMsSUFBRyxDQUFDLENBQUEsQUFBQyxDQUFBO1dBQUM7U0FBQyxFQUFDLGFBQWEsRUFBQyx1QkFBUyxDQUFDLEVBQUM7QUFBQyxXQUFDLENBQUMsTUFBTSxDQUFDLFNBQVMsSUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUE7U0FBQyxFQUFDLEVBQUMsQ0FBQyxDQUFDLFVBQVUsR0FBQyxFQUFDLFlBQVksRUFBQyxzQkFBUyxDQUFDLEVBQUMsQ0FBQyxFQUFDO0FBQUMsY0FBSSxDQUFDO2NBQUMsQ0FBQztjQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUMsS0FBSSxJQUFJLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFHLENBQUMsSUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVcsTUFBTSxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFFLFlBQVksS0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFNBQVMsR0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksRUFBRSxDQUFBLElBQUcsQ0FBQyxDQUFDLFlBQVksRUFBRSxHQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQSxHQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsR0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLEVBQUUsQ0FBQSxBQUFDLENBQUMsS0FBSyxDQUFDLFlBQVksTUFBTSxJQUFFLENBQUMsS0FBRyxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxHQUFHLElBQUUsWUFBWSxLQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBQyxDQUFDLENBQUMsU0FBUyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsR0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLENBQUEsSUFBRyxDQUFDLENBQUMsWUFBWSxFQUFFLEdBQUMsQ0FBQyxDQUFDLFlBQVksRUFBRSxDQUFBLEFBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFlBQVksRUFBRSxDQUFBLEdBQUUsQ0FBQyxHQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLFlBQVksRUFBRSxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFBLEFBQUMsQ0FBQTtTQUFDLEVBQUMsYUFBYSxFQUFDLHVCQUFTLENBQUMsRUFBQyxDQUFDLEVBQUM7QUFBQyxjQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUMsS0FBSSxJQUFJLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFHLENBQUMsSUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFlB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QUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUEsR0FBRSxDQUFDLENBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLHVCQUF1QixHQUFDLFlBQVU7QUFBQyxlQUFPLENBQUMsQ0FBQyxXQUFXLElBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQSxHQUFFLENBQUMsQ0FBQyxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsUUFBUSxHQUFDLEVBQUMsWUFBWSxFQUFDLHdCQUFVO0FBQUMsV0FBQyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsNEVBQTRFLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBVTtBQUFDLGFBQUMsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFBO1dBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVU7QUFBQyxnQkFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsNEVBQTRFLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBVTtBQUFDLGtCQUFJLENBQUMsR0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDLENBQUE7YUFBQyxDQUFDLENBQUE7V0FBQyxDQUFDLENBQUE7U0FBQyxFQUFDLGFBQWEsRUFBQyx1QkFBUyxDQUFDLEVBQUM7QUFBQyxxQkFBVyxJQUFFLE9BQU8sQ0FBQyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsNEVBQTRFLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBVTtBQUFDLGdCQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO2dCQUFDLENBQUMsR0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQywrQkFBK0IsQ0FBQyxFQUFDLEVBQUUsQ0FBQyxJQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUcsQ0FBQyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUEsQUFBQyxFQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUE7V0FBQyxDQUFDLENBQUE7U0FBQyxFQUFDLEVBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBQyxFQUFFLENBQUMsS0FBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxFQUFDO0FBQUMsWUFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQTtPQUFDLFFBQU8sQ0FBQyxDQUFDLFdBQVcsR0FBQyxVQUFTLENBQUMsRUFBQztBQUFDLGFBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBQyxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLHFCQUFxQixHQUFDLEVBQUUsRUFBQyxDQUFDLENBQUMsSUFBSSxHQUFDLFVBQVMsQ0FBQyxFQUFDO0FBQUMsU0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsRUFBQyxLQUFJLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxJQUFFLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBQyxVQUFTLENBQUMsRUFBQyxDQUFDLEVBQUM7QUFBQyxnQkFBTyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsS0FBRyxDQUFDLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDLEdBQUMsRUFBRSxDQUFBLEFBQUMsRUFBQyxDQUFDLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQSxDQUFBO09BQUMsRUFBQyxDQUFDLENBQUMsR0FBRyxHQUFDLFVBQVMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUFDLFlBQUksQ0FBQyxDQUFDLEtBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxXQUFXLElBQUUsT0FBTyxDQUFDLENBQUEsRUFBQyxRQUFPLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsR0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFBLENBQUMsSUFBRyxDQUFDLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDLElBQUUsQ0FBQyxLQUFHLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUM7QUFBQyxlQUFJLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFHLENBQUMsSUFBRSxDQUFDLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQTtTQUFDO09BQUMsRUFBQyxDQUFDLENBQUMsSUFBSSxHQUFDLFVBQVMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUFDLFNBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDOzs7Ozs7Ozs7O1dBQUMsWUFBVTtBQUFDLFdBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUE7U0FBQyxDQUFBLENBQUMsUUFBTyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUEsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLElBQUksR0FBQyxFQUFDLGFBQWEsRUFBQyx1QkFBUyxDQUFDLEVBQUM7QUFBQyxrQkFBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxHQUFDLEdBQUcsRUFBQyxDQUFDLENBQUEsQ0FBQTtTQUFDLEVBQUMsT0FBTyxFQUFDLGlCQUFTLENBQUMsRUFBQyxDQUFDLEVBQUM7QUFBQyxrQkFBTyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUEsQ0FBQTtTQUFDLEVBQUMsUUFBUSxFQUFDLGtCQUFTLENBQUMsRUFBQyxDQUFDLEVBQUM7QUFBQyxrQkFBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUEsQ0FBQTtTQUFDLEVBQUMsT0FBTyxFQUFDLGlCQUFTLENBQUMsRUFBQztBQUFDLGtCQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFBLENBQUE7U0FBQyxFQUFDLE1BQU0sRUFBQyxnQkFBUyxDQUFDLEVBQUM7QUFBQyxrQkFBTyxDQUFDLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQSxDQUFBO1NBQUMsRUFBQyxVQUFVLEVBQUMsb0JBQVMsQ0FBQyxFQUFDO0FBQUMsWUFBRSxLQUFHLENBQUMsQ0FBQyxPQUFPLEtBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQSxHQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEtBQUcsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsV0FBVyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsYUFBYSxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUEsQUFBQyxDQUFBLEFBQUMsQ0FBQTtTQUFDLEVBQUMsVUFBVSxFQUFDLENBQUMsQ0FBQywwRkFBb0YsQ0FBQyxFQUFDLE1BQU0sRUFBQyxnQkFBUyxDQUFDLEVBQUM7QUFBQyxjQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEtBQUcsQ0FBQyxDQUFDLE1BQU0sS0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUEsQUFBQyxDQUFBO1NBQUMsRUFBQyxJQUFJLEVBQUMsZ0JBQVU7QUFBQyxjQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFDO0FBQUMsZ0JBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBQyxRQUFRLENBQUMsRUFBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQTtXQUFDLElBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUM7QUFBQyxnQkFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFDLFFBQVEsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFBO1dBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQTtTQUFDLEVBQUMsT0FBTyxFQUFDLG1CQUFVO0FBQUMsV0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLElBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQTtTQUFDLEVBQUMsRUFBQyxDQUFDLENBQUMsSUFBSSxHQUFDLFlBQVU7QUFBQyxTQUFDLENBQUMsTUFBTSxDQUFDLElBQUksSUFBRSxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUMsQ0FBQyxDQUFDLG1CQUFtQixFQUFFLEVBQUMsQ0FBQyxDQUFDLGdCQUFnQixFQUFFLEVBQUMsQ0FBQyxDQUFDLGdCQUFnQixFQUFFLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLElBQUUsQ0FBQyxDQUFDLFNBQVMsSUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxFQUFDLE9BQU8sS0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUUsQ0FBQyxDQUFDLGNBQWMsRUFBRSxFQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksR0FBQyxDQUFDLENBQUMsWUFBWSxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDLElBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxFQUFDLENBQUMsS0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksS0FBRyxDQUFDLENBQUMsUUFBUSxJQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxJQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLEVBQUMsQ0FBQyxDQUFDLElBQUksSUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLFdBQVcsSUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFBLEFBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLFlBQVksRUFBRSxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxJQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxJQUFFLENBQUMsQ0FBQyxhQUFhLEVBQUUsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGFBQWEsSUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsV0FBVyxJQUFFLENBQUMsQ0FBQyxhQUFhLEVBQUUsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsSUFBRSxDQUFDLENBQUMsYUFBYSxFQUFFLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxlQUFlLElBQUUsQ0FBQyxDQUFDLHFCQUFxQixJQUFFLENBQUMsQ0FBQyxxQkFBcUIsRUFBRSxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLElBQUUsQ0FBQyxDQUFDLHVCQUF1QixJQUFFLENBQUMsQ0FBQyx1QkFBdUIsRUFBRSxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFFLENBQUMsQ0FBQyxPQUFPLElBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksSUFBRSxDQUFDLENBQUMsSUFBSSxJQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDLENBQUE7T0FBQyxFQUFDLENBQUMsQ0FBQyxhQUFhLEdBQUMsWUFBVTtBQUFDLFNBQUMsQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLElBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGlCQUFpQixFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsVUFBVSxDQUFDLG9CQUFvQixDQUFDLENBQUMsVUFBVSxDQUFDLGlCQUFpQixDQUFDLEVBQUMsQ0FBQyxDQUFDLG1CQUFtQixJQUFFLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxNQUFNLElBQUUsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLHFCQUFxQixDQUFDLEVBQUMsQ0FBQyxDQUFDLE9BQU8sSUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sSUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLElBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsSUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxJQUFFLENBQUMsQ0FBQyxTQUFTLEtBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxLQUFLLElBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsTUFBTSxJQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBQyxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksSUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFBLEFBQUMsQ0FBQTtPQUFDLEVBQUMsQ0FBQyxDQUFDLE9BQU8sR0FBQyxVQUFTLENBQUMsRUFBQyxDQUFDLEVBQUM7QUFBQyxTQUFD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QyxDQUFDLENBQUMsR0FBQyxXQUFXLElBQUUsT0FBTyxJQUFJLEdBQUMsTUFBTSxDQUFDLElBQUksSUFBRSxNQUFNLENBQUMsS0FBSyxJQUFFLE1BQU0sQ0FBQyxNQUFNLEdBQUMsSUFBSSxFQUFDLENBQUMsS0FBRyxlQUFlLElBQUcsQ0FBQyxDQUFDLEVBQUUsS0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLGFBQWEsR0FBQyxVQUFTLENBQUMsRUFBQztBQUFDLGFBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQztBQUFDLFVBQUcsQ0FBQyxDQUFDLE1BQU0sS0FBRyxJQUFJLEVBQUMsS0FBSSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBRSxFQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFBO0tBQUMsSUFBSSxDQUFDO1FBQUMsQ0FBQyxHQUFDLENBQUMscUJBQXFCLEVBQUMsZUFBZSxFQUFDLGdCQUFnQixFQUFDLGlCQUFpQixFQUFDLGlCQUFpQixDQUFDO1FBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQyxJQUFHLENBQUMsRUFBQyxLQUFJLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxJQUFJLENBQUE7R0FBQyxDQUFBLEFBQUMsRUFBQyxXQUFXLElBQUcsQ0FBQyxDQUFDLEVBQUUsS0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLFNBQVMsR0FBQyxVQUFTLENBQUMsRUFBQztBQUFDLFNBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBRSxFQUFDO0FBQUMsVUFBSSxDQUFDLEdBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsZUFBZSxHQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsWUFBWSxHQUFDLENBQUMsQ0FBQyxVQUFVLEdBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBQyxDQUFDLENBQUE7S0FBQyxPQUFPLElBQUksQ0FBQTtHQUFDLENBQUEsQUFBQyxFQUFDLFlBQVksSUFBRyxDQUFDLENBQUMsRUFBRSxLQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsVUFBVSxHQUFDLFVBQVMsQ0FBQyxFQUFDO0FBQUMsWUFBUSxJQUFFLE9BQU8sQ0FBQyxLQUFHLENBQUMsSUFBRSxJQUFJLENBQUEsQUFBQyxDQUFDLEtBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBRSxFQUFDO0FBQUMsVUFBSSxDQUFDLEdBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsd0JBQXdCLEdBQUMsQ0FBQyxDQUFDLG9CQUFvQixHQUFDLENBQUMsQ0FBQyxvQkFBb0IsR0FBQyxDQUFDLENBQUMscUJBQXFCLEdBQUMsQ0FBQyxDQUFDLG1CQUFtQixHQUFDLENBQUMsQ0FBQyxrQkFBa0IsR0FBQyxDQUFDLENBQUE7S0FBQyxPQUFPLElBQUksQ0FBQTtHQUFDLENBQUEsQUFBQyxDQUFBLEFBQUMsQ0FBQTtDQUFDLENBQUEsRUFBRSxFQUFDLFdBQVcsSUFBRSxPQUFPLE1BQU0sR0FBQyxNQUFNLENBQUMsT0FBTyxHQUFDLE1BQU0sR0FBQyxVQUFVLElBQUUsT0FBTyxNQUFNLElBQUUsTUFBTSxDQUFDLEdBQUcsSUFBRSxNQUFNLENBQUMsRUFBRSxFQUFDLFlBQVU7QUFBQyxjQUFZLENBQUMsT0FBTyxNQUFNLENBQUE7Q0FBQyxDQUFDLENBQUMiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiLy8gVXNlIEVTNiBqYXZhc2NyaXB0LCBhdXRvIHRyYW5zcGlsZWQgaW50byBFUzUgLSBzZWUgaHR0cDovL2JhYmVsanMuaW9cbi8vXG4vLyBqUXVlcnkgYWxyZWFkeSBsb2FkZWQgYXMgZXh0ZXJuYWwgQnJvd3NlcmlmeSBkZXBlbmRlbmN5LCBhdmFpbGJsZSBoZXJlIGFzICRcbi8vXG4vLyBQaXp6YSBJbXB1bHNlIE1haW4gRW50cnlwb2ludFxuLy9cbnJlcXVpcmUoJy4vdmVuZG9yL3N3aXBlci5qcXVlcnkubWluJylcbnJlcXVpcmUoJy4vdmVuZG9yL2pxdWVyeS5hdXRvdGFiJylcbnJlcXVpcmUoJy4vdmVuZG9yL2pxdWVyeS5pcycpXG5cbmlmKCQoJy5wcm9tbycpLmxlbmd0aCA+IDApIHtcbiAgICB2YXIgdG91clN3aXBlciA9IG5ldyBTd2lwZXIoJy5zd2lwZXItY29udGFpbmVyJywge1xuICAgICAgICBwYWdpbmF0aW9uOiAnLnN3aXBlci1wYWdpbmF0aW9uJ1xuICAgIH0pXG59XG5cbiQoJy5qcy1kZWxpdmVyeS10aW1lcy10b2dnbGUnKS5vbignY2xpY2snLCBmdW5jdGlvbihldikge1xuICAgICQodGhpcykucGFyZW50KCcucHJlZmVyZW5jZXMtZm9sZGVyJykudG9nZ2xlQ2xhc3MoJ2lzLW9wZW4nKVxuICAgICQodGhpcykuc2libGluZ3MoJy5wcmVmZXJlbmNlcy1mb2xkZXJfX2NvbnRlbnQnKS5zbGlkZVRvZ2dsZSgpXG59KVxuXG4kKCcuanMtdGltZS1zZWxlY3Rvci10b2dnbGUnKS5vbignY2xpY2snLCBmdW5jdGlvbihldikge1xuICAgICQoJy50aW1lLXNlbGVjdG9yJykuc2xpZGVUb2dnbGUoKVxufSlcblxuJCgnLmpzLWRheS1zZWxlY3Rvci10b2dnbGUnKS5vbignY2xpY2snLCBmdW5jdGlvbihldikge1xuICAgIC8vIHdlIGNhbid0IHN0b3BQcm9wYWdhdGlvbiBhbmQgcHJldmVudERlZmF1bHQgaGVyZSBhcyB0aGF0IHN0b3BzXG4gICAgLy8gdGhlIGRlZmF1bHQgbGFiZWw6Y2hlY2tlZCBiZWhhdmlvdXIgLSB0aGVyZWZvcmUgd2UgbmVlZCB0byBtYW51YWxseVxuICAgIC8vIHNpbXVsYXRlIGEgc2xpZGVUb2dnbGUoKSBjYWxsIHRvIHByZXZlbnQgb24gY2xpY2sgZXZlbnQgZmlyaW5nIHR3aWNlXG4gICAgaWYgKCQodGhpcykuZGF0YSgnaXNPcGVuJykgPT09IHRydWUpIHtcbiAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5zaWJsaW5ncygnLnRpbWUtc2VsZWN0b3JfX3RpbWVzJykuc2xpZGVVcCgpXG4gICAgICAgICQodGhpcykuZGF0YSgnaXNPcGVuJywgZmFsc2UpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5zaWJsaW5ncygnLnRpbWUtc2VsZWN0b3JfX3RpbWVzJykuc2xpZGVEb3duKClcbiAgICAgICAgJCh0aGlzKS5kYXRhKCdpc09wZW4nLCB0cnVlKVxuICAgIH1cbn0pXG5cbiQoJy5qcy1jcmVkaXRjYXJkLWF1dG90YWInKS5hdXRvdGFiKHtcbiAgICBmb3JtYXQ6ICdudW1iZXInLFxuICAgIG1heGxlbmd0aDogNFxufSlcblxuJCgnLmpzLWNyZWRpdGNhcmQteWVhcicpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbigpIHtcbiAgICBpZiAoJCh0aGlzKS5pcygvXFxkezR9LykpIHtcbiAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcygnaXMtZXJyb3InKVxuICAgIH0gZWxzZSB7XG4gICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ2lzLWVycm9yJylcbiAgICB9XG59KVxuXG4kKCcuanMtY3JlZGl0Y2FyZC1waW4nKS5vbignY2hhbmdlJywgZnVuY3Rpb24oKSB7XG4gICAgaWYgKCQodGhpcykuaXMoL1xcZHszfS8pKSB7XG4gICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoJ2lzLWVycm9yJylcbiAgICB9IGVsc2Uge1xuICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdpcy1lcnJvcicpXG4gICAgfVxufSlcbiIsIi8qKlxuICogQXV0b3RhYiAtIGpRdWVyeSBwbHVnaW4gMS45LjJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9NYXRoYWNoZXcvanF1ZXJ5LWF1dG90YWJcbiAqIFxuICogQ29weXJpZ2h0IChjKSAyMDA4LCAyMDE1IE1hdHRoZXcgTWlsbGVyXG4gKiBcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zaW5nOlxuICogICBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICovXG5cbihmdW5jdGlvbiAoJCkge1xuICAgIHZhciBwbGF0Zm9ybSA9IG5hdmlnYXRvci5wbGF0Zm9ybSxcbiAgICAgICAgc2V0dGluZ3MgPSB7XG4gICAgICAgICAgICB0YWJQYXVzZTogODAwLFxuICAgICAgICAgICAgZm9jdXNDaGFuZ2U6IG51bGwsXG4gICAgICAgICAgICBpT1M6IChwbGF0Zm9ybSA9PT0gJ2lQYWQnIHx8IHBsYXRmb3JtID09PSAnaVBob25lJyB8fCBwbGF0Zm9ybSA9PT0gJ2lQb2QnKSxcbiAgICAgICAgICAgIGZpcmVmb3g6ICh0eXBlb2YgSW5zdGFsbFRyaWdnZXIgIT09ICd1bmRlZmluZWQnKSxcbiAgICAgICAgICAgIGllMTE6ICEod2luZG93LkFjdGl2ZVhPYmplY3QpICYmIFwiQWN0aXZlWE9iamVjdFwiIGluIHdpbmRvd1xuICAgICAgICB9O1xuXG4gICAgdmFyIHNldFNldHRpbmdzID0gZnVuY3Rpb24gKGUsIHNldHRpbmdzKSB7XG4gICAgICAgIGlmIChzZXR0aW5ncyA9PT0gbnVsbCB8fCB0eXBlb2Ygc2V0dGluZ3MgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gc2V0dGluZ3MpIHtcbiAgICAgICAgICAgICQoZSkuZGF0YSgnYXV0b3RhYi0nICsga2V5LCBzZXR0aW5nc1trZXldKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB2YXIgZ2V0U2V0dGluZ3MgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICB2YXIgc2V0dGluZ3MgPSB7XG4gICAgICAgICAgICBhcnJvd0tleTogZmFsc2UsXG4gICAgICAgICAgICBmb3JtYXQ6ICdhbGwnLFxuICAgICAgICAgICAgbG9hZGVkOiBmYWxzZSxcbiAgICAgICAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICAgICAgICAgIHBhdHRlcm46IG51bGwsXG4gICAgICAgICAgICB1cHBlcmNhc2U6IGZhbHNlLFxuICAgICAgICAgICAgbG93ZXJjYXNlOiBmYWxzZSxcbiAgICAgICAgICAgIG5vc3BhY2U6IGZhbHNlLFxuICAgICAgICAgICAgbWF4bGVuZ3RoOiAyMTQ3NDgzNjQ3LFxuICAgICAgICAgICAgdGFyZ2V0OiBudWxsLFxuICAgICAgICAgICAgcHJldmlvdXM6IG51bGwsXG4gICAgICAgICAgICB0cmlnZ2VyOiBudWxsLFxuICAgICAgICAgICAgb3JpZ2luYWxWYWx1ZTogJycsXG4gICAgICAgICAgICBjaGFuZ2VkOiBmYWxzZSxcbiAgICAgICAgICAgIGVkaXRhYmxlOiAoZS50eXBlID09PSAndGV4dCcgfHwgZS50eXBlID09PSAncGFzc3dvcmQnIHx8IGUudHlwZSA9PT0gJ3RleHRhcmVhJyB8fCBlLnR5cGUgPT09ICd0ZWwnIHx8IGUudHlwZSA9PT0gJ251bWJlcicgfHwgZS50eXBlID09PSAnZW1haWwnIHx8IGUudHlwZSA9PT0gJ3NlYXJjaCcgfHwgZS50eXBlID09PSAndXJsJyksXG4gICAgICAgICAgICBmaWx0ZXJhYmxlOiAoZS50eXBlID09PSAndGV4dCcgfHwgZS50eXBlID09PSAncGFzc3dvcmQnIHx8IGUudHlwZSA9PT0gJ3RleHRhcmVhJyksXG4gICAgICAgICAgICB0YWJPblNlbGVjdDogZmFsc2VcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBJZiAkLmF1dG90YWIuc2VsZWN0RmlsdGVyQnlDbGFzIGlzIHRydWUgYW5kIHRoZSBmb3JtYXQgbm90IHNwZWNpZmllZCwgYXV0b21hdGljYWxseSBzZWxlY3QgYW4gZWxlbWVudCdzIGZvcm1hdCBiYXNlZCBvbiBhIG1hdGNoaW5nIGNsYXNzIG5hbWUuXG4gICAgICAgIC8vIFRoZSBmaXJzdCBtYXRjaGVkIGVsZW1lbnQgYmVjb21lcyB0aGUgc2VsZWN0ZWQgZm9ybWF0IGZvciB0aGUgZmlsdGVyLlxuICAgICAgICBpZiAoJC5hdXRvdGFiLnNlbGVjdEZpbHRlckJ5Q2xhc3MgPT09IHRydWUgJiYgdHlwZW9mICQoZSkuZGF0YSgnYXV0b3RhYi1mb3JtYXQnKSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHZhciBjbGFzc2VzID0gWydhbGwnLCAndGV4dCcsICdhbHBoYScsICdudW1iZXInLCAnbnVtZXJpYycsICdhbHBoYW51bWVyaWMnLCAnaGV4JywgJ2hleGFkZWNpbWFsJywgJ2N1c3RvbSddO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gY2xhc3Nlcykge1xuICAgICAgICAgICAgICAgIGlmICgkKGUpLmhhc0NsYXNzKGNsYXNzZXNba2V5XSkpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3MuZm9ybWF0ID0gY2xhc3Nlc1trZXldO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gc2V0dGluZ3MpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgJChlKS5kYXRhKCdhdXRvdGFiLScgKyBrZXkpICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIHNldHRpbmdzW2tleV0gPSAkKGUpLmRhdGEoJ2F1dG90YWItJyArIGtleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBTYXZlIHNldHRpbmdzIG9uIGZpcnN0IHJ1blxuICAgICAgICBpZiAoIXNldHRpbmdzLmxvYWRlZCkge1xuICAgICAgICAgICAgaWYgKHNldHRpbmdzLnRyaWdnZXIgIT09IG51bGwgJiYgdHlwZW9mIHNldHRpbmdzLnRyaWdnZXIgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgc2V0dGluZ3MudHJpZ2dlciA9IHNldHRpbmdzLnRyaWdnZXIudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc2V0U2V0dGluZ3MoZSwgc2V0dGluZ3MpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHNldHRpbmdzO1xuICAgIH07XG5cbiAgICB2YXIgcXVlcnlPYmplY3QgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICByZXR1cm4gKHR5cGVvZiBlICE9PSAndW5kZWZpbmVkJyAmJiAodHlwZW9mIGUgPT09ICdzdHJpbmcnIHx8ICEoZSBpbnN0YW5jZW9mIGpRdWVyeSkpKTtcbiAgICB9O1xuXG4gICAgdmFyIGdldFNlbGVjdGlvbiA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciBzdGFydCA9IDAsXG4gICAgICAgICAgICBlbmQgPSAwLFxuICAgICAgICAgICAgc2VsZWN0aW9uVHlwZSA9IDA7XG5cbiAgICAgICAgaWYgKGUudHlwZSA9PT0gJ3RleHQnIHx8IGUudHlwZSA9PT0gJ3Bhc3N3b3JkJyB8fCBlLnR5cGUgPT09ICd0ZXh0YXJlYScpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgZS5zZWxlY3Rpb25TdGFydCA9PT0gJ251bWJlcicgJiYgdHlwZW9mIGUuc2VsZWN0aW9uRW5kID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgIC8vIE5vbi1JRSBicm93c2VycyBhbmQgSUUgOStcbiAgICAgICAgICAgICAgICBzdGFydCA9IGUuc2VsZWN0aW9uU3RhcnQ7XG4gICAgICAgICAgICAgICAgZW5kID0gZS5zZWxlY3Rpb25FbmQ7XG4gICAgICAgICAgICAgICAgc2VsZWN0aW9uVHlwZSA9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChkb2N1bWVudC5zZWxlY3Rpb24gJiYgZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlKSB7XG4gICAgICAgICAgICAgICAgLy8gRm9yIElFIHVwIHRvIHZlcnNpb24gOFxuICAgICAgICAgICAgICAgIHZhciBzZWxlY3Rpb25SYW5nZSA9IGRvY3VtZW50LnNlbGVjdGlvbi5jcmVhdGVSYW5nZSgpLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0SW5wdXRSYW5nZSA9IGUuY3JlYXRlVGV4dFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIHByZWNlZGluZ1JhbmdlID0gZS5jcmVhdGVUZXh0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgYm9va21hcmsgPSBzZWxlY3Rpb25SYW5nZS5nZXRCb29rbWFyaygpO1xuICAgICAgICAgICAgICAgIHRleHRJbnB1dFJhbmdlLm1vdmVUb0Jvb2ttYXJrKGJvb2ttYXJrKTtcbiAgICAgICAgICAgICAgICBwcmVjZWRpbmdSYW5nZS5zZXRFbmRQb2ludChcIkVuZFRvU3RhcnRcIiwgdGV4dElucHV0UmFuZ2UpO1xuICAgICAgICAgICAgICAgIHN0YXJ0ID0gcHJlY2VkaW5nUmFuZ2UudGV4dC5sZW5ndGg7XG4gICAgICAgICAgICAgICAgZW5kID0gc3RhcnQgKyBzZWxlY3Rpb25SYW5nZS50ZXh0Lmxlbmd0aDtcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb25UeXBlID0gMjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGFydDogc3RhcnQsXG4gICAgICAgICAgICBlbmQ6IGVuZCxcbiAgICAgICAgICAgIHNlbGVjdGlvblR5cGU6IHNlbGVjdGlvblR5cGVcbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgJC5hdXRvdGFiID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgb3B0aW9ucyA9IHt9O1xuICAgICAgICB9XG5cbiAgICAgICAgJCgnOmlucHV0JykuYXV0b3RhYihvcHRpb25zKTtcbiAgICB9O1xuXG4gICAgJC5hdXRvdGFiLnNlbGVjdEZpbHRlckJ5Q2xhc3MgPSBmYWxzZTtcblxuICAgICQuYXV0b3RhYi5uZXh0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZSA9ICQoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCk7XG5cbiAgICAgICAgaWYgKGUubGVuZ3RoKSB7XG4gICAgICAgICAgICBlLnRyaWdnZXIoJ2F1dG90YWItbmV4dCcpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgICQuYXV0b3RhYi5wcmV2aW91cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGUgPSAkKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpO1xuXG4gICAgICAgIGlmIChlLmxlbmd0aCkge1xuICAgICAgICAgICAgZS50cmlnZ2VyKCdhdXRvdGFiLXByZXZpb3VzJyk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgJC5hdXRvdGFiLnJlbW92ZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHF1ZXJ5T2JqZWN0KGUpID8gJChlKS5hdXRvdGFiKCdyZW1vdmUnKSA6ICQoJzppbnB1dCcpLmF1dG90YWIoJ3JlbW92ZScpO1xuICAgIH07XG5cbiAgICAkLmF1dG90YWIucmVzdG9yZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHF1ZXJ5T2JqZWN0KGUpID8gJChlKS5hdXRvdGFiKCdyZXN0b3JlJykgOiAkKCc6aW5wdXQnKS5hdXRvdGFiKCdyZXN0b3JlJyk7XG4gICAgfTtcblxuICAgICQuYXV0b3RhYi5yZWZyZXNoID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgcXVlcnlPYmplY3QoZSkgPyAkKGUpLmF1dG90YWIoJ3JlZnJlc2gnKSA6ICQoJzppbnB1dCcpLmF1dG90YWIoJ3JlZnJlc2gnKTtcbiAgICB9O1xuXG4gICAgJC5mbi5hdXRvdGFiID0gZnVuY3Rpb24gKG1ldGhvZCwgb3B0aW9ucykge1xuICAgICAgICBpZiAoIXRoaXMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFJlbW92ZSBoaWRkZW4gZmllbGRzIHNpbmNlIHRhYmJpbmcgYmFja3dhcmRzIGlzIHN1cHBvcnRlZCBvbiBkaWZmZXJlbnQgZm9ybSBlbGVtZW50c1xuICAgICAgICB2YXIgZmlsdGVyZWQgPSAkLmdyZXAodGhpcywgZnVuY3Rpb24gKGUsIGkpIHtcbiAgICAgICAgICAgIHJldHVybiBlLnR5cGUgIT0gJ2hpZGRlbic7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIEFwcGx5IGZpbHRlciBvcHRpb25zXG4gICAgICAgIGlmIChtZXRob2QgPT0gJ2ZpbHRlcicpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zID0geyBmb3JtYXQ6IG9wdGlvbnMgfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IGZpbHRlcmVkLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRlZmF1bHRzID0gZ2V0U2V0dGluZ3MoZmlsdGVyZWRbaV0pLFxuICAgICAgICAgICAgICAgICAgICBuZXdPcHRpb25zID0gb3B0aW9ucztcblxuICAgICAgICAgICAgICAgIC8vIFJldGFpbiB0aGUgZXN0YWJsaXNoZWQgdGFyZ2V0L3ByZXZpb3VzIHZhbHVlcyBhcyB0aGlzIGFyZWEgaXMgZm9yIGZpbHRlcmluZyBvbmx5XG4gICAgICAgICAgICAgICAgbmV3T3B0aW9ucy50YXJnZXQgPSBkZWZhdWx0cy50YXJnZXQ7XG4gICAgICAgICAgICAgICAgbmV3T3B0aW9ucy5wcmV2aW91cyA9IGRlZmF1bHRzLnByZXZpb3VzO1xuXG4gICAgICAgICAgICAgICAgJC5leHRlbmQoZGVmYXVsdHMsIG5ld09wdGlvbnMpO1xuXG4gICAgICAgICAgICAgICAgaWYgKCFkZWZhdWx0cy5sb2FkZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdHMuZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBhdXRvdGFiQmluZChmaWx0ZXJlZFtpXSwgbmV3T3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzZXRTZXR0aW5ncyhmaWx0ZXJlZFtpXSwgZGVmYXVsdHMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBEaXNhYmxlIGF1dG8gdGFiIGFuZCBmaWx0ZXJpbmdcbiAgICAgICAgZWxzZSBpZiAobWV0aG9kID09ICdyZW1vdmUnIHx8IG1ldGhvZCA9PSAnZGVzdHJveScgfHwgbWV0aG9kID09ICdkaXNhYmxlJykge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IGZpbHRlcmVkLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRlZmF1bHRzID0gZ2V0U2V0dGluZ3MoZmlsdGVyZWRbaV0pO1xuXG4gICAgICAgICAgICAgICAgZGVmYXVsdHMuZGlzYWJsZWQgPSB0cnVlO1xuXG4gICAgICAgICAgICAgICAgc2V0U2V0dGluZ3MoZmlsdGVyZWRbaV0sIGRlZmF1bHRzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBSZS1lbmFibGUgYXV0byB0YWIgYW5kIGZpbHRlcmluZ1xuICAgICAgICBlbHNlIGlmIChtZXRob2QgPT0gJ3Jlc3RvcmUnIHx8IG1ldGhvZCA9PSAnZW5hYmxlJykge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IGZpbHRlcmVkLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRlZmF1bHRzID0gZ2V0U2V0dGluZ3MoZmlsdGVyZWRbaV0pO1xuXG4gICAgICAgICAgICAgICAgZGVmYXVsdHMuZGlzYWJsZWQgPSBmYWxzZTtcblxuICAgICAgICAgICAgICAgIHNldFNldHRpbmdzKGZpbHRlcmVkW2ldLCBkZWZhdWx0cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gUmVmcmVzaCB0YXJnZXQvcHJldmlvdXMgZWxlbWVudHNcbiAgICAgICAgZWxzZSBpZiAobWV0aG9kID09ICdyZWZyZXNoJykge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IGZpbHRlcmVkLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRlZmF1bHRzID0gZ2V0U2V0dGluZ3MoZmlsdGVyZWRbaV0pLFxuICAgICAgICAgICAgICAgICAgICBuID0gaSArIDEsXG4gICAgICAgICAgICAgICAgICAgIHAgPSBpIC0gMSxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0VGFyZ2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGkgPiAwICYmIG4gPCBsZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0cy50YXJnZXQgPSBmaWx0ZXJlZFtuXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdHMudGFyZ2V0ID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRzLnRhcmdldCA9IGZpbHRlcmVkW25dO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSAgIFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RQcmV2aW91cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpID4gMCAmJiBuIDwgbGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdHMucHJldmlvdXMgPSBmaWx0ZXJlZFtwXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdHMucHJldmlvdXMgPSBmaWx0ZXJlZFtwXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRzLnByZXZpb3VzID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgIC8vIE5vdGhpbmcgd2FzIHNwZWNpZmllZCBmb3IgdGhlIHRhcmdldCBlbGVtZW50LCBzbyBhdXRvbWF0aWNhbGx5IHNldCBpdFxuICAgICAgICAgICAgICAgIGlmIChkZWZhdWx0cy50YXJnZXQgPT09IG51bGwgfHwgZGVmYXVsdHMudGFyZ2V0LnNlbGVjdG9yID09PSAnJykge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RUYXJnZXQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGRlZmF1bHRzLnRhcmdldCA9PT0gJ3N0cmluZycgfHwgZGVmYXVsdHMudGFyZ2V0LnNlbGVjdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHRzLnRhcmdldCA9ICQodHlwZW9mIGRlZmF1bHRzLnRhcmdldCA9PT0gJ3N0cmluZycgPyBkZWZhdWx0cy50YXJnZXQgOiBkZWZhdWx0cy50YXJnZXQuc2VsZWN0b3IpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChkZWZhdWx0cy50YXJnZXQubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RUYXJnZXQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIE5vdGhpbmcgd2FzIHNwZWNpZmllZCBmb3IgdGhlIHByZXZpb3VzIGVsZW1lbnQsIHNvIGF1dG9tYXRpY2FsbHkgc2V0IGl0XG4gICAgICAgICAgICAgICAgaWYgKGRlZmF1bHRzLnByZXZpb3VzID09PSBudWxsIHx8IGRlZmF1bHRzLnByZXZpb3VzLnNlbGVjdG9yID09PSAnJykge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RQcmV2aW91cygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgZGVmYXVsdHMucHJldmlvdXMgPT09ICdzdHJpbmcnIHx8IGRlZmF1bHRzLnByZXZpb3VzLnNlbGVjdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHRzLnByZXZpb3VzID0gJCh0eXBlb2YgZGVmYXVsdHMucHJldmlvdXMgPT09ICdzdHJpbmcnID8gZGVmYXVsdHMucHJldmlvdXMgOiBkZWZhdWx0cy5wcmV2aW91cy5zZWxlY3Rvcik7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGRlZmF1bHRzLnByZXZpb3VzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0UHJldmlvdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmICghZGVmYXVsdHMubG9hZGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGF1dG90YWJCaW5kKGZpbHRlcmVkW2ldLCBkZWZhdWx0cyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAocXVlcnlPYmplY3QoZGVmYXVsdHMudGFyZ2V0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdHMudGFyZ2V0ID0gJChkZWZhdWx0cy50YXJnZXQpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHF1ZXJ5T2JqZWN0KGRlZmF1bHRzLnByZXZpb3VzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdHMucHJldmlvdXMgPSAkKGRlZmF1bHRzLnByZXZpb3VzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHNldFNldHRpbmdzKGZpbHRlcmVkW2ldLCBkZWZhdWx0cyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKG1ldGhvZCA9PT0gbnVsbCB8fCB0eXBlb2YgbWV0aG9kID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBtZXRob2QgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiBtZXRob2QgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zID0geyBmb3JtYXQ6IG1ldGhvZCB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIG1ldGhvZCA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zID0gbWV0aG9kO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBCaW5kIGtleSBldmVudHMgdG8gZWxlbWVudChzKSBwYXNzZWRcbiAgICAgICAgICAgIGlmIChmaWx0ZXJlZC5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IGZpbHRlcmVkLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuID0gaSArIDEsXG4gICAgICAgICAgICAgICAgICAgICAgICBwID0gaSAtIDEsXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdPcHRpb25zID0gb3B0aW9ucztcblxuICAgICAgICAgICAgICAgICAgICBpZiAoaSA+IDAgJiYgbiA8IGxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3T3B0aW9ucy50YXJnZXQgPSBmaWx0ZXJlZFtuXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld09wdGlvbnMucHJldmlvdXMgPSBmaWx0ZXJlZFtwXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChpID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3T3B0aW9ucy50YXJnZXQgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3T3B0aW9ucy5wcmV2aW91cyA9IGZpbHRlcmVkW3BdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3T3B0aW9ucy50YXJnZXQgPSBmaWx0ZXJlZFtuXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld09wdGlvbnMucHJldmlvdXMgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgYXV0b3RhYkJpbmQoZmlsdGVyZWRbaV0sIG5ld09wdGlvbnMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGF1dG90YWJCaW5kKGZpbHRlcmVkWzBdLCBvcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICB2YXIgZmlsdGVyVmFsdWUgPSBmdW5jdGlvbiAoZSwgdmFsdWUsIGRlZmF1bHRzKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZGVmYXVsdHMuZm9ybWF0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICByZXR1cm4gZGVmYXVsdHMuZm9ybWF0KHZhbHVlLCBlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBwYXR0ZXJuID0gbnVsbDtcblxuICAgICAgICBzd2l0Y2ggKGRlZmF1bHRzLmZvcm1hdCkge1xuICAgICAgICAgICAgY2FzZSAndGV4dCc6XG4gICAgICAgICAgICAgICAgcGF0dGVybiA9IG5ldyBSZWdFeHAoJ1swLTldKycsICdnJyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgJ2FscGhhJzpcbiAgICAgICAgICAgICAgICBwYXR0ZXJuID0gbmV3IFJlZ0V4cCgnW15hLXpBLVpdKycsICdnJyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgJ251bWJlcic6XG4gICAgICAgICAgICBjYXNlICdudW1lcmljJzpcbiAgICAgICAgICAgICAgICBwYXR0ZXJuID0gbmV3IFJlZ0V4cCgnW14wLTldKycsICdnJyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgJ2FscGhhbnVtZXJpYyc6XG4gICAgICAgICAgICAgICAgcGF0dGVybiA9IG5ldyBSZWdFeHAoJ1teMC05YS16QS1aXSsnLCAnZycpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlICdoZXgnOlxuICAgICAgICAgICAgY2FzZSAnaGV4YWRlY2ltYWwnOlxuICAgICAgICAgICAgICAgIHBhdHRlcm4gPSBuZXcgUmVnRXhwKCdbXjAtOUEtRmEtZl0rJywgJ2cnKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAnY3VzdG9tJzpcbiAgICAgICAgICAgICAgICBwYXR0ZXJuID0gbmV3IFJlZ0V4cChkZWZhdWx0cy5wYXR0ZXJuLCAnZycpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlICdhbGwnOlxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwYXR0ZXJuICE9PSBudWxsKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UocGF0dGVybiwgJycpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRlZmF1bHRzLm5vc3BhY2UpIHtcbiAgICAgICAgICAgIHBhdHRlcm4gPSBuZXcgUmVnRXhwKCdbIF0rJywgJ2cnKTtcbiAgICAgICAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZShwYXR0ZXJuLCAnJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZGVmYXVsdHMudXBwZXJjYXNlKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZGVmYXVsdHMubG93ZXJjYXNlKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfTtcblxuICAgIHZhciBhdXRvdGFiQmluZCA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBkZWZhdWx0cyA9IGdldFNldHRpbmdzKGVsZW1lbnQpO1xuXG4gICAgICAgIGlmIChkZWZhdWx0cy5kaXNhYmxlZCkge1xuICAgICAgICAgICAgZGVmYXVsdHMuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIGRlZmF1bHRzLnRhcmdldCA9IG51bGw7XG4gICAgICAgICAgICBkZWZhdWx0cy5wcmV2aW91cyA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICAkLmV4dGVuZChkZWZhdWx0cywgb3B0aW9ucyk7XG5cbiAgICAgICAgLy8gU2V0cyB0YXJnZXRzIHRvIGVsZW1lbnQgYmFzZWQgb24gdGhlIG5hbWUgb3IgSUQgcGFzc2VkIGlmIHRoZXkgYXJlIG5vdCBjdXJyZW50bHkgb2JqZWN0c1xuICAgICAgICBpZiAocXVlcnlPYmplY3QoZGVmYXVsdHMudGFyZ2V0KSkge1xuICAgICAgICAgICAgZGVmYXVsdHMudGFyZ2V0ID0gJChkZWZhdWx0cy50YXJnZXQpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHF1ZXJ5T2JqZWN0KGRlZmF1bHRzLnByZXZpb3VzKSkge1xuICAgICAgICAgICAgZGVmYXVsdHMucHJldmlvdXMgPSAkKGRlZmF1bHRzLnByZXZpb3VzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBvbGRNYXhsZW5ndGggPSBlbGVtZW50Lm1heExlbmd0aDtcblxuICAgICAgICBpZiAodHlwZW9mIGVsZW1lbnQubWF4TGVuZ3RoID09PSAndW5kZWZpbmVkJyAmJiBlbGVtZW50LnR5cGUgPT0gJ3RleHRhcmVhJykge1xuICAgICAgICAgICAgb2xkTWF4bGVuZ3RoID0gZWxlbWVudC5tYXhMZW5ndGggPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgnbWF4bGVuZ3RoJyk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBkZWZhdWx0cy5tYXhsZW5ndGggaGFzIG5vdCBjaGFuZ2VkIGFuZCBtYXhsZW5ndGggd2FzIHNwZWNpZmllZFxuICAgICAgICBpZiAoZGVmYXVsdHMubWF4bGVuZ3RoID09IDIxNDc0ODM2NDcgJiYgb2xkTWF4bGVuZ3RoICE9IDIxNDc0ODM2NDcgJiYgb2xkTWF4bGVuZ3RoICE9IC0xKSB7XG4gICAgICAgICAgICBkZWZhdWx0cy5tYXhsZW5ndGggPSBvbGRNYXhsZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZGVmYXVsdHMubWF4bGVuZ3RoIG92ZXJyaWRlcyBtYXhsZW5ndGhcbiAgICAgICAgZWxzZSBpZiAoZGVmYXVsdHMubWF4bGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgZWxlbWVudC5tYXhMZW5ndGggPSBkZWZhdWx0cy5tYXhsZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZGVmYXVsdHMubWF4bGVuZ3RoIGFuZCBtYXhsZW5ndGggaGF2ZSBub3QgYmVlbiBzcGVjaWZpZWRcbiAgICAgICAgLy8gQSB0YXJnZXQgY2Fubm90IGJlIHVzZWQgc2luY2UgdGhlcmUgaXMgbm8gZGVmaW5lZCBtYXhsZW5ndGhcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBkZWZhdWx0cy50YXJnZXQgPSBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFkZWZhdWx0cy5sb2FkZWQpIHtcbiAgICAgICAgICAgIGRlZmF1bHRzLmxvYWRlZCA9IHRydWU7XG4gICAgICAgICAgICBzZXRTZXR0aW5ncyhlbGVtZW50LCBkZWZhdWx0cyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZXRTZXR0aW5ncyhlbGVtZW50LCBkZWZhdWx0cyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBBZGQgYSBjaGFuZ2UgZXZlbnQgdG8gc2VsZWN0IGxpc3RzIG9ubHkgc28gdGhhdCB3ZSBjYW4gYXV0byB0YWIgd2hlbiBhIHZhbHVlIGlzIHNlbGVjdGVkXG4gICAgICAgIGlmIChlbGVtZW50LnR5cGUgPT0gJ3NlbGVjdC1vbmUnKSB7XG4gICAgICAgICAgICAkKGVsZW1lbnQpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIHZhciBkZWZhdWx0cyA9IGdldFNldHRpbmdzKHRoaXMpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGRlZmF1bHRzLnRhYk9uU2VsZWN0KSB7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcykudHJpZ2dlcignYXV0b3RhYi1uZXh0Jyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBUaGUgMW1zIHRpbWVvdXRzIGFsbG93IGZvciBrZXlwcmVzcyBldmVudHMgdG8gY29tcGxldGUgaW4gY2FzZSBhXG4gICAgICAgIC8vIGN1c3RvbSBmdW5jdGlvbiBvciBleHRlcmlvciBtZXRob2QgY2FsbHMgZm9yIGEgbWFudWFsIGF1dG8gdGFiXG4gICAgICAgICQoZWxlbWVudCkub24oJ2F1dG90YWItbmV4dCcsIGZ1bmN0aW9uIChldmVudCwgZGVmYXVsdHMpIHtcbiAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICghZGVmYXVsdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdHMgPSBnZXRTZXR0aW5ncyhzZWxmKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0ID0gZGVmYXVsdHMudGFyZ2V0O1xuXG4gICAgICAgICAgICAgICAgaWYgKCFkZWZhdWx0cy5kaXNhYmxlZCAmJiB0YXJnZXQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFVzaW5nIGZvY3VzIG9uIGlPUyBkZXZpY2VzIGlzIGEgcGFpbiwgc28gdXNlIHRoZSBicm93c2VyJ3MgbmV4dC9wcmV2aW91cyBidXR0b25zIHRvIHByb2NlZWRcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFzZXR0aW5ncy5pT1MpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gRmllbGQgaXMgZGlzYWJsZWQvcmVhZG9ubHksIHNvIHRhYiB0byBuZXh0IGVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YXJnZXQucHJvcCgnZGlzYWJsZWQnKSB8fCB0YXJnZXQucHJvcCgncmVhZG9ubHknKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldC50cmlnZ2VyKCdhdXRvdGFiLW5leHQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFsbG93cyB0aGUgdXNlciB0byBuYXZpZ2F0ZSBiZXR3ZWVuIGVhY2ggY2hhcmF0ZXIgd2l0aCBhcnJvdyBrZXlzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRlZmF1bHRzLmFycm93S2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldC5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LmZvY3VzKCkuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5mb2N1c0NoYW5nZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCAxKTtcbiAgICAgICAgfSkub24oJ2F1dG90YWItcHJldmlvdXMnLCBmdW5jdGlvbiAoZXZlbnQsIGRlZmF1bHRzKSB7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWRlZmF1bHRzKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHRzID0gZ2V0U2V0dGluZ3Moc2VsZik7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdmFyIHByZXZpb3VzID0gZGVmYXVsdHMucHJldmlvdXM7XG5cbiAgICAgICAgICAgICAgICBpZiAoIWRlZmF1bHRzLmRpc2FibGVkICYmIHByZXZpb3VzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBwcmV2aW91cy52YWwoKTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBGaWVsZCBpcyBkaXNhYmxlZC9yZWFkb25seSwgc28gdGFiIHRvIHByZXZpb3VzIGVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgaWYgKHByZXZpb3VzLnByb3AoJ2Rpc2FibGVkJykgfHwgcHJldmlvdXMucHJvcCgncmVhZG9ubHknKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXMudHJpZ2dlcignYXV0b3RhYi1wcmV2aW91cycpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHZhbHVlLmxlbmd0aCAmJiBwcmV2aW91cy5kYXRhKCdhdXRvdGFiLWVkaXRhYmxlJykgJiYgIWRlZmF1bHRzLmFycm93S2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2V0dGluZ3MuaWUxMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpb3VzLnZhbCh2YWx1ZS5zdWJzdHJpbmcoMCwgdmFsdWUubGVuZ3RoIC0gMSkpLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2aW91cy5mb2N1cygpLnZhbCh2YWx1ZS5zdWJzdHJpbmcoMCwgdmFsdWUubGVuZ3RoIC0gMSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRTZXR0aW5ncyhwcmV2aW91cywgeyBjaGFuZ2VkOiB0cnVlIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRlZmF1bHRzLmFycm93S2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0U2V0dGluZ3ModGhpcywgeyBhcnJvd0tleTogZmFsc2UgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZXR0aW5ncy5pZTExKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXMudmFsKHZhbHVlKS5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXMuZm9jdXMoKS52YWwodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3MuZm9jdXNDaGFuZ2UgPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIDEpO1xuICAgICAgICB9KS5vbignZm9jdXMnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzZXRTZXR0aW5ncyh0aGlzLCB7IG9yaWdpbmFsVmFsdWU6IHRoaXMudmFsdWUgfSk7XG4gICAgICAgIH0pLm9uKCdibHVyJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGRlZmF1bHRzID0gZ2V0U2V0dGluZ3ModGhpcyk7XG5cbiAgICAgICAgICAgIGlmIChkZWZhdWx0cy5jaGFuZ2VkICYmIHRoaXMudmFsdWUgIT0gZGVmYXVsdHMub3JpZ2luYWxWYWx1ZSkge1xuICAgICAgICAgICAgICAgIHNldFNldHRpbmdzKHRoaXMsIHsgY2hhbmdlZDogZmFsc2UgfSk7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS5jaGFuZ2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkub24oJ2tleWRvd24uYXV0b3RhYicsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICB2YXIgZGVmYXVsdHMgPSBnZXRTZXR0aW5ncyh0aGlzKTtcblxuICAgICAgICAgICAgaWYgKCFkZWZhdWx0cyB8fCBkZWZhdWx0cy5kaXNhYmxlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgc2VsZWN0aW9uID0gZ2V0U2VsZWN0aW9uKHRoaXMpLFxuICAgICAgICAgICAgICAgIGtleUNvZGUgPSBlLndoaWNoIHx8IGUuY2hhckNvZGU7XG5cbiAgICAgICAgICAgIC8vIEdvIHRvIHRoZSBwcmV2aW91cyBlbGVtZW50IHdoZW4gYmFja3NwYWNlXG4gICAgICAgICAgICAvLyBpcyBwcmVzc2VkIGluIGFuIGVtcHR5IGlucHV0IGZpZWxkXG4gICAgICAgICAgICBpZiAoa2V5Q29kZSA9PSA4KSB7XG4gICAgICAgICAgICAgICAgZGVmYXVsdHMuYXJyb3dLZXkgPSBmYWxzZTtcblxuICAgICAgICAgICAgICAgIC8vIFByZXZlbnQgdGhlIGJyb3dzZXIgZnJvbSBvZiBuYXZpZ2F0aW5nIHRvIHRoZSBwcmV2aW91cyBwYWdlXG4gICAgICAgICAgICAgICAgaWYgKCFkZWZhdWx0cy5lZGl0YWJsZSkge1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnRyaWdnZXIoJ2F1dG90YWItcHJldmlvdXMnLCBkZWZhdWx0cyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBzZXRTZXR0aW5ncyh0aGlzLCB7IGNoYW5nZWQ6ICh0aGlzLnZhbHVlICE9PSBkZWZhdWx0cy5vcmlnaW5hbFZhbHVlKSB9KTtcblxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnRyaWdnZXIoJ2F1dG90YWItcHJldmlvdXMnLCBkZWZhdWx0cyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChrZXlDb2RlID09IDkgJiYgc2V0dGluZ3MuZm9jdXNDaGFuZ2UgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAvLyBUYWIgYmFja3dhcmRzXG4gICAgICAgICAgICAgICAgaWYgKGUuc2hpZnRLZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3MuZm9jdXNDaGFuZ2UgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKChuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIHNldHRpbmdzLmZvY3VzQ2hhbmdlLmdldFRpbWUoKSkgPCBzZXR0aW5ncy50YWJQYXVzZSkge1xuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5mb2N1c0NoYW5nZSA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLnR5cGUgIT09ICdyYW5nZScgJiYgdGhpcy50eXBlICE9PSAnc2VsZWN0LW9uZScgJiYgdGhpcy50eXBlICE9PSAnc2VsZWN0LW11bHRpcGxlJykge1xuICAgICAgICAgICAgICAgIGlmICgodGhpcy50eXBlICE9PSAndGVsJyAmJiB0aGlzLnR5cGUgIT09ICdudW1iZXInKSB8fCAoKHRoaXMudHlwZSA9PT0gJ3RlbCcgfHwgdGhpcy50eXBlID09PSAnbnVtYmVyJykgJiYgdGhpcy52YWx1ZS5sZW5ndGggPT0gMCkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGtleUNvZGUgPT0gMzcgJiYgKCFkZWZhdWx0cy5lZGl0YWJsZSB8fCBzZWxlY3Rpb24uc3RhcnQgPT0gMCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRzLmFycm93S2V5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykudHJpZ2dlcignYXV0b3RhYi1wcmV2aW91cycsIGRlZmF1bHRzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChrZXlDb2RlID09IDM5ICYmICghZGVmYXVsdHMuZWRpdGFibGUgfHwgIWRlZmF1bHRzLmZpbHRlcmFibGUgfHwgc2VsZWN0aW9uLmVuZCA9PSB0aGlzLnZhbHVlLmxlbmd0aCB8fCB0aGlzLnZhbHVlLmxlbmd0aCA9PSAwKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdHMuYXJyb3dLZXkgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS50cmlnZ2VyKCdhdXRvdGFiLW5leHQnLCBkZWZhdWx0cyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pLm9uKCdrZXlwcmVzcy5hdXRvdGFiJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHZhciBkZWZhdWx0cyA9IGdldFNldHRpbmdzKHRoaXMpLFxuICAgICAgICAgICAgICAgIGtleUNvZGUgPSBlLndoaWNoIHx8IGUua2V5Q29kZTtcblxuICAgICAgICAgICAgLy8gZS5jaGFyQ29kZSA9PSAwIGluZGljYXRlcyBhIHNwZWNpYWwga2V5IGhhcyBiZWVuIHByZXNzZWQsIHdoaWNoIG9ubHkgRmlyZWZveCB0cmlnZ2Vyc1xuICAgICAgICAgICAgaWYgKCFkZWZhdWx0cyB8fCBkZWZhdWx0cy5kaXNhYmxlZCB8fCAoc2V0dGluZ3MuZmlyZWZveCAmJiBlLmNoYXJDb2RlID09PSAwKSB8fCBlLmN0cmxLZXkgfHwgZS5hbHRLZXkgfHwga2V5Q29kZSA9PSAxMyB8fCB0aGlzLmRpc2FibGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBrZXlDaGFyID0gU3RyaW5nLmZyb21DaGFyQ29kZShrZXlDb2RlKTtcblxuICAgICAgICAgICAgaWYgKHRoaXMudHlwZSAhPSAndGV4dCcgJiYgdGhpcy50eXBlICE9ICdwYXNzd29yZCcgJiYgdGhpcy50eXBlICE9ICd0ZXh0YXJlYScpIHtcbiAgICAgICAgICAgICAgICAvLyB0aGlzLnZhbHVlLmxlbmd0aCBpcyB0aGUgbGVuZ3RoIGJlZm9yZSB0aGUga2V5cHJlc3MgZXZlbnQgd2FzIHRyaWdnZWRcbiAgICAgICAgICAgICAgICBpZiAoKHRoaXMudmFsdWUubGVuZ3RoICsgMSkgPj0gZGVmYXVsdHMubWF4bGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHRzLmFycm93S2V5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcykudHJpZ2dlcignYXV0b3RhYi1uZXh0JywgZGVmYXVsdHMpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiAhKHRoaXMudmFsdWUubGVuZ3RoID09IGRlZmF1bHRzLm1heGxlbmd0aCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIFByZXZlbnRzIGF1dG8gdGFiYmluZyB3aGVuIGRlZmF1bHRzLnRyaWdnZXIgaXMgcHJlc3NlZFxuICAgICAgICAgICAgaWYgKGRlZmF1bHRzLnRyaWdnZXIgIT09IG51bGwgJiYgZGVmYXVsdHMudHJpZ2dlci5pbmRleE9mKGtleUNoYXIpID49IDApIHtcbiAgICAgICAgICAgICAgICBpZiAoc2V0dGluZ3MuZm9jdXNDaGFuZ2UgIT09IG51bGwgJiYgKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gc2V0dGluZ3MuZm9jdXNDaGFuZ2UuZ2V0VGltZSgpKSA8IHNldHRpbmdzLnRhYlBhdXNlKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldHRpbmdzLmZvY3VzQ2hhbmdlID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHRzLmFycm93S2V5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcykudHJpZ2dlcignYXV0b3RhYi1uZXh0JywgZGVmYXVsdHMpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc2V0dGluZ3MuZm9jdXNDaGFuZ2UgPSBudWxsO1xuXG4gICAgICAgICAgICB2YXIgaGFzVmFsdWUgPSBkb2N1bWVudC5zZWxlY3Rpb24gJiYgZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlID8gdHJ1ZSA6IChrZXlDb2RlID4gMCk7XG5cbiAgICAgICAgICAgIGtleUNoYXIgPSBmaWx0ZXJWYWx1ZSh0aGlzLCBrZXlDaGFyLCBkZWZhdWx0cyk7XG5cbiAgICAgICAgICAgIGlmIChoYXNWYWx1ZSAmJiAoa2V5Q2hhciA9PT0gbnVsbCB8fCBrZXlDaGFyID09PSAnJykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIE1hbnksIG1hbnkgdGhhbmtzIHRvIFRpbSBEb3duIGZvciB0aGlzIHNvbHV0aW9uOiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8zOTIzMzIwLzk0NjU2XG4gICAgICAgICAgICBpZiAoaGFzVmFsdWUgJiYgKHRoaXMudmFsdWUubGVuZ3RoIDw9IHRoaXMubWF4TGVuZ3RoKSkge1xuICAgICAgICAgICAgICAgIHZhciBzZWxlY3Rpb24gPSBnZXRTZWxlY3Rpb24odGhpcyk7XG5cbiAgICAgICAgICAgICAgICAvLyBUZXh0IGlzIGZ1bGx5IHNlbGVjdGVkLCBzbyBpdCBuZWVkcyB0byBiZSByZXBsYWNlZFxuICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rpb24uc3RhcnQgPT09IDAgJiYgc2VsZWN0aW9uLmVuZCA9PSB0aGlzLnZhbHVlLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnZhbHVlID0ga2V5Q2hhcjtcbiAgICAgICAgICAgICAgICAgICAgc2V0U2V0dGluZ3ModGhpcywgeyBjaGFuZ2VkOiAodGhpcy52YWx1ZSAhPSBkZWZhdWx0cy5vcmlnaW5hbFZhbHVlKSB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnZhbHVlLmxlbmd0aCA9PSB0aGlzLm1heExlbmd0aCAmJiBzZWxlY3Rpb24uc3RhcnQgPT09IHNlbGVjdGlvbi5lbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRzLmFycm93S2V5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnRyaWdnZXIoJ2F1dG90YWItbmV4dCcsIGRlZmF1bHRzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnZhbHVlLnNsaWNlKDAsIHNlbGVjdGlvbi5zdGFydCkgKyBrZXlDaGFyICsgdGhpcy52YWx1ZS5zbGljZShzZWxlY3Rpb24uZW5kKTtcbiAgICAgICAgICAgICAgICAgICAgc2V0U2V0dGluZ3ModGhpcywgeyBjaGFuZ2VkOiAodGhpcy52YWx1ZSAhPSBkZWZhdWx0cy5vcmlnaW5hbFZhbHVlKSB9KTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBQcmV2ZW50cyB0aGUgY3Vyc29yIHBvc2l0aW9uIGZyb20gYmVpbmcgc2V0IHRvIHRoZSBlbmQgb2YgdGhlIHRleHQgYm94XG4gICAgICAgICAgICAgICAgLy8gVGhpcyBpcyBjYWxsZWQgZXZlbiBpZiB0aGUgdGV4dCBpcyBmdWxseSBzZWxlY3RlZCBhbmQgcmVwbGFjZWQgZHVlIHRvIGFuIHVuZXhwZWN0ZWQgYmVoYXZpb3IgaW4gSUU2IGFuZCB1cCAoIzMyKVxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnZhbHVlLmxlbmd0aCAhPSBkZWZhdWx0cy5tYXhsZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uLnN0YXJ0Kys7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGVjdGlvbi5zZWxlY3Rpb25UeXBlID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uU3RhcnQgPSB0aGlzLnNlbGVjdGlvbkVuZCA9IHNlbGVjdGlvbi5zdGFydDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChzZWxlY3Rpb24uc2VsZWN0aW9uVHlwZSA9PSAyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLmNyZWF0ZVRleHRSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5tb3ZlRW5kKCdjaGFyYWN0ZXInLCBzZWxlY3Rpb24uc3RhcnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UubW92ZVN0YXJ0KCdjaGFyYWN0ZXInLCBzZWxlY3Rpb24uc3RhcnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgaWYgKHRoaXMudmFsdWUubGVuZ3RoID09IGRlZmF1bHRzLm1heGxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGRlZmF1bHRzLmFycm93S2V5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS50cmlnZ2VyKCdhdXRvdGFiLW5leHQnLCBkZWZhdWx0cyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSkub24oJ2Ryb3AgcGFzdGUnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgdmFyIGRlZmF1bHRzID0gZ2V0U2V0dGluZ3ModGhpcyk7XG5cbiAgICAgICAgICAgIGlmICghZGVmYXVsdHMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5tYXhMZW5ndGggPSAyMTQ3NDgzNjQ3O1xuXG4gICAgICAgICAgICAoZnVuY3Rpb24gKGUsIG9yaWdpbkRlZmF1bHRzKSB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBsYXN0SW5kZXggPSAtMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhpZGRlbklucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgICAgICAgICAgICAgaGlkZGVuSW5wdXQudHlwZSA9ICdoaWRkZW4nO1xuICAgICAgICAgICAgICAgICAgICBoaWRkZW5JbnB1dC52YWx1ZSA9IGUudmFsdWUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgaGlkZGVuSW5wdXQub3JpZ2luYWxWYWx1ZSA9IGUudmFsdWU7XG5cbiAgICAgICAgICAgICAgICAgICAgZS52YWx1ZSA9IGZpbHRlclZhbHVlKGUsIGUudmFsdWUsIG9yaWdpbkRlZmF1bHRzKS5zdWJzdHIoMCwgb3JpZ2luRGVmYXVsdHMubWF4bGVuZ3RoKTtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgaGFuZGxlUGFzdGUgPSBmdW5jdGlvbiAoZSwgcHJldmlvdXNWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGVmYXVsdHMgPSBnZXRTZXR0aW5ncyhlKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCQoZSkucHJvcCgnZGlzYWJsZWQnKSB8fCAkKGUpLnByb3AoJ3JlYWRvbmx5JykgfHwgIWRlZmF1bHRzLmVkaXRhYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChlKS50cmlnZ2VyKCdhdXRvdGFiLW5leHQnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc2V0dGluZ3MuaU9TKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZVBhc3RlKGRlZmF1bHRzLnRhcmdldFswXSwgcHJldmlvdXNWYWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNvdW50ID0gcHJldmlvdXNWYWx1ZS5sZW5ndGg7IGkgPCBjb3VudDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdEluZGV4ID0gaGlkZGVuSW5wdXQudmFsdWUuaW5kZXhPZihwcmV2aW91c1ZhbHVlLmNoYXJBdChpKS50b0xvd2VyQ2FzZSgpLCBsYXN0SW5kZXgpICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRyaW1tZWRWYWx1ZSA9IGhpZGRlbklucHV0Lm9yaWdpbmFsVmFsdWUuc3Vic3RyKGxhc3RJbmRleCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyZWRWYWx1ZSA9IGZpbHRlclZhbHVlKGUsIHRyaW1tZWRWYWx1ZSwgZGVmYXVsdHMpLnN1YnN0cigwLCBkZWZhdWx0cy5tYXhsZW5ndGgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWZpbHRlcmVkVmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGUudmFsdWUgPSBmaWx0ZXJlZFZhbHVlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmlsdGVyZWRWYWx1ZS5sZW5ndGggPT0gZGVmYXVsdHMubWF4bGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdHMuYXJyb3dLZXkgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKGUpLnRyaWdnZXIoJ2F1dG90YWItbmV4dCcsIGRlZmF1bHRzKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEZpcmVmb3ggY2F1c2VzIGFsbCBidXQgdGhlIGZpcnN0IGFuZCBsYXN0IGVsZW1lbnRzIHRvIHJldGFpbiBhIHNlbGVjdCBhbGwgc3RhdGUsIHNvIGluIG9yZGVyIHRvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZWZmZWN0aXZlbHkgc3VwcG9ydCBhcnJvdyBrZXlzLCB0aGUgc3RhcnRpbmcgcG9pbnQgb2YgdGhlIHNlbGVjdGlvbiBpcyB0byB0aGUgbGFzdCBwb3NzaWJsZSBjdXJzb3JcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2V0dGluZ3MuZmlyZWZveCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUuc2VsZWN0aW9uU3RhcnQgPSBlLnZhbHVlLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzZXR0aW5ncy5pT1MpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlUGFzdGUoZGVmYXVsdHMudGFyZ2V0WzBdLCBmaWx0ZXJlZFZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoZS52YWx1ZS5sZW5ndGggPT0gb3JpZ2luRGVmYXVsdHMubWF4bGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0cy5hcnJvd0tleSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgJChlKS50cmlnZ2VyKCdhdXRvdGFiLW5leHQnLCBkZWZhdWx0cyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc2V0dGluZ3MuaU9TKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlUGFzdGUob3JpZ2luRGVmYXVsdHMudGFyZ2V0WzBdLCBlLnZhbHVlLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgZS5tYXhMZW5ndGggPSBvcmlnaW5EZWZhdWx0cy5tYXhsZW5ndGg7XG4gICAgICAgICAgICAgICAgfSwgMSk7XG4gICAgICAgICAgICB9KSh0aGlzLCBkZWZhdWx0cyk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBEZXByZWNhdGVkLCBoZXJlIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuICAgICQuZm4uYXV0b3RhYl9tYWdpYyA9IGZ1bmN0aW9uIChmb2N1cykge1xuICAgICAgICByZXR1cm4gJCh0aGlzKS5hdXRvdGFiKCk7XG4gICAgfTtcbiAgICAkLmZuLmF1dG90YWJfZmlsdGVyID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGRlZmF1bHRzID0ge307XG5cbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJyB8fCB0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgZGVmYXVsdHMuZm9ybWF0ID0gb3B0aW9ucztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICQuZXh0ZW5kKGRlZmF1bHRzLCBvcHRpb25zKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAkKHRoaXMpLmF1dG90YWIoJ2ZpbHRlcicsIGRlZmF1bHRzKTtcbiAgICB9O1xuXG59KShqUXVlcnkpOyIsIi8qKiBcbiAqIGlzLmpzIC0gdjAuMi4xXG4gKiBDaGVjayB5b3VyIGRhdGEgYWdhaW5zdCByZWd1bGFyIGV4cHJlc3Npb25zIG9yIGtub3duIGtleXdvcmRzLlxuICogaHR0cDovL2dpdGh1Yi5jb20vcnRob3IvaXNqc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbiAqIENvcHlyaWdodCAoYykgMjAxMyBSYWduYXIgw57Ds3IgVmFsZ2VpcnNzb24gKHJ0aG9yKVxuICogaHR0cDovL3J0aG9yLmlzXG4gKi9cbihmdW5jdGlvbigkKSB7XG4vLyBXaGF0IGRvZXMgdGhlIGlzIHBsdWdpbiBkbz9cbiQuaXMgPSAkLmZuLmlzID0gZnVuY3Rpb24oKSB7XG5cdC8vIElmIG5vdGhpbmcgaXMgdGhlcmUgLSB0aGVuIHJldHVybiB0aGF0LlxuXHRpZiAoIHRoaXMubGVuZ3RoID09PSAwICkgcmV0dXJuIHRoaXM7XG5cblx0Ly8gRGVjbGFyZSB2YXJpYWJsZXNcblx0dmFyIGRlZXAgPSBmYWxzZSxcblx0XHRleHByZXNzaW9uLFxuXHRcdGNoZWNrLFxuXHRcdHZhbHVlO1xuXG5cdC8vIElmIHBsdWdpbiBpcyBydW4gb24gdGhlIHJvb3QgalF1ZXJ5IG9iamVjdFxuXHQvLyBTZXQgdXAgYXBwcm9wcmlhdGUgdmFyaWFibGVzXG5cdGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG5cdFx0dmFsdWUgPSBhcmd1bWVudHNbMF07XG5cdFx0ZXhwcmVzc2lvbiA9IGFyZ3VtZW50c1sxXTtcblxuXHQvLyBFbHNlIGlmIHRoZSBwbHVnaW4gaXMgcnVuIG9uIGFuIERPTSBlbGVtZW50XG5cdC8vIFNldCB1cCB0aGUgY29ycmVjdCBleHByZXNzaW9uIGFuZCB2YWx1ZSBiYXNlZCBvblxuXHQvLyBub2RlIHR5cGUuXG5cdH0gZWxzZSB7XG5cdFx0dmFyIG5vZGVOYW1lID0gdGhpc1swXS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdGV4cHJlc3Npb24gPSBhcmd1bWVudHNbMF07XG5cblx0XHR2YWx1ZSA9IG5vZGVOYW1lID09PSAnaW5wdXQnID9cblx0XHRcdHRoaXMudmFsKCkgOlxuXHRcdFx0bm9kZU5hbWUgPT09ICdwJyB8fCBub2RlTmFtZSA9PT0gJ2gxJyB8fCBub2RlTmFtZSA9PT0gJ2gyJyB8fCBub2RlTmFtZSA9PT0gJ2gzJyB8fCBub2RlTmFtZSA9PT0gJ2g0JyB8fCBub2RlTmFtZSA9PT0gJ2g1JyB8fCBub2RlTmFtZSA9PT0gJ2g2JyB8fCBub2RlTmFtZSA9PT0gJ2EnIHx8IG5vZGVOYW1lID09PSAnbGknIHx8IG5vZGVOYW1lID09PSAnYmxvY2txdW90ZScgfHwgbm9kZU5hbWUgPT09ICdwcmUnIHx8ICBub2RlTmFtZSA9PT0gJ2NvZGUnIHx8IG5vZGVOYW1lID09PSAnYicgfHwgIG5vZGVOYW1lID09PSAnc3Ryb25nJyB8fCAgbm9kZU5hbWUgPT09ICdlbScgfHwgbm9kZU5hbWUgPT09ICdpJyB8fCBub2RlTmFtZSA9PT0gJ2RpdicgfHwgbm9kZU5hbWUgPT09ICdidXR0b24nIHx8IG5vZGVOYW1lID09PSAndGV4dGFyZWEnIHx8IG5vZGVOYW1lID09PSAnc3BhbicgP1xuXHRcdFx0dGhpcy5odG1sKCkgOlxuXHRcdFx0dGhpcy5zZWxlY3Rvcjtcblx0fVxuXG5cdC8vIElmIGV4cHJlc3Npb24gaXMgZGVlcFxuXHRpZiAoXG5cdFx0dHlwZW9mIGV4cHJlc3Npb24gPT09ICdzdHJpbmcnICYmXG5cdFx0ZXhwcmVzc2lvbi5pbmRleE9mKCc6JykgIT09IC0xXG5cdCkge1xuXHRcdC8vIFNldCBhcHByb3JpYXRlIHZhcmlhYmxlc1xuXHRcdGV4cHJlc3Npb24gPSBleHByZXNzaW9uLm1hdGNoKCAvKFxcdyspKD86XFw6KShcXHcrKS8gKTtcblx0XHRkZWVwID0gZXhwcmVzc2lvblsyXTtcblx0XHRleHByZXNzaW9uID0gZXhwcmVzc2lvblsxXTtcblx0fVxuXG5cdC8vIEFsbCByZWdleGVzIHRoYXQgY2FuIGJlIHRlc3RlZCBhZ2FpbnN0LlxuXHRjaGVjayA9IHtcblx0XHRjYzoge1xuXHRcdFx0J2FueSc6IC9eWzAtOV17MTUsMTZ9JC8sXG5cdFx0XHQnQW1lcmljYW5FeHByZXNzJzogL14oMzQpfCgzNylcXGR7MTR9JC8sXG5cdFx0XHQnRGlzY292ZXInOiAvXjYwMTFcXGR7MTJ9JC8sXG5cdFx0XHQnTWFzdGVyQ2FyZCc6IC9eNVsxLTVdXFxkezE0fSQvLFxuXHRcdFx0J1Zpc2EnOiAvXjRcXGR7MTV9JC9cblx0XHR9LFxuXHRcdGRhdGV0aW1lOiAvXihbMC0yXVswLTldezN9KVxcLShbMC0xXVswLTldKVxcLShbMC0zXVswLTldKVQoWzAtNV1bMC05XSlcXDooWzAtNV1bMC05XSlcXDooWzAtNV1bMC05XSkoWnwoW1xcLVxcK10oWzAtMV1bMC05XSlcXDowMCkpJC8sXG5cdFx0ZW1haWw6IC9eKChbXjw+KClbXFxdXFxcXC4sOzpcXHNAXFxcIl0rKFxcLltePD4oKVtcXF1cXFxcLiw7Olxcc0BcXFwiXSspKil8KFxcXCIuK1xcXCIpKUAoKFxcW1swLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXF0pfCgoW2EtekEtWlxcLTAtOV0rXFwuKStbYS16QS1aXXsyLH0pKSQvLFxuXHRcdGlzYm46IC9eKD86KD89LnsxN30kKTk3Wzg5XVsgLV0oPzpbMC05XStbIC1dKXsyfVswLTldK1sgLV1bMC05XXw5N1s4OV1bMC05XXsxMH18KD89LnsxM30kKSg/OlswLTldK1sgLV0pezJ9WzAtOV0rWyAtXVswLTlYeF18WzAtOV17OX1bMC05WHhdKSQvLFxuXHRcdGxhdGxuZzogLy0/XFxkezEsM31cXC5cXGQrLyxcblx0XHRwaG9uZToge1xuXHRcdFx0J2FyJzogL14oPzpcXCt8WzBdezJ9KT8oNTQpPyg6P1tcXHMtXSkqXFxkezR9KDo/W1xccy1dKSpcXGR7NH0kLyxcblx0XHRcdCdhdSc6IC9eKD86XFwrfDApPyg/OjYxKT9cXHM/WzItNDc4XSg/OlsgLV0/WzAtOV0pezh9JC8sXG5cdFx0XHQnZnInOiAvXig/OjB8XFwoP1xcKzMzXFwpP1xccz98MDAzM1xccz8pWzEtNzldKD86W1xcLlxcLVxcc10/XFxkXFxkKXs0fSQvLFxuXHRcdFx0J2lzJzogL14oPzpcXCt8WzBdezJ9KT8oMzU0KT8oOj9bXFxzLV0pKlxcZHszfSg6P1tcXHMtXSkqXFxkezR9JC8sXG5cdFx0XHQndWsnOiAvXig/OlxcK3wwNDQpPyg/OlxccyspP1xcKD8oXFxkezEsNX18XFxkezR9XFxzKlxcZHsxLDJ9KVxcKT9cXHMrfC0oXFxkezEsNH0oXFxzK3wtKT9cXGR7MSw0fXwoXFxkezZ9KSlcXGR7Nn0kLyxcblx0XHRcdCd1cyc6IC9eKFxcZHszfSkoOj9bXFxzXFwtXSkqKFxcZHszfSkoOj9bXFxzXFwtXSkqKFxcZHs0fSkkL1xuXHRcdH0sXG5cdFx0emlwOiB7XG5cdFx0XHQnYXInOiAvXlxcZHs0fSQvLFxuXHRcdFx0J2F1JzogL15cXGR7NH0kLyxcblx0XHRcdCdhdCc6IC9eXFxkezR9JC8sXG5cdFx0XHQnYmUnOiAvXlxcZHs0fSQvLFxuXHRcdFx0J2JnJzogL15cXGR7NH0kLyxcblx0XHRcdCdicic6IC9eXFxkezV9W1xcLV0/XFxkezN9JC8sXG5cdFx0XHQnY2EnOiAvXltBLVphLXpdXFxkW0EtWmEtel0gXFxkW0EtWmEtel1cXGQkLyxcblx0XHRcdCdjeSc6IC9eXFxkezR9JC8sXG5cdFx0XHQnY3onOiAvXlxcZHszfSBcXGR7Mn0kLyxcblx0XHRcdCdkayc6IC9eXFxkezMsNH0kLyxcblx0XHRcdCdkZSc6IC9eXFxkezV9JC8sXG5cdFx0XHQnZWUnOiAvXlxcZHs1fSQvLFxuXHRcdFx0J2VzJzogL14oKDBbMS05XXw1WzAtMl0pfFsxLTRdXFxkKVxcZHszfSQvLFxuXHRcdFx0J2ZpJzogL15cXGR7NX0kLyxcblx0XHRcdCdmcic6IC9eXFxkezV9JC8sXG5cdFx0XHQnZ2InOiAvXltBLVphLXpdezEsMn1bMC05UnJdWzAtOUEtWmEtel0/IFxcZFtBQkQtSEpMTlAtVVctWmFiZC1oamxucC11dy16XXsyfSQvLFxuXHRcdFx0J2dyJzogL15cXGR7M30gXFxkezJ9JC8sXG5cdFx0XHQnaHUnOiAvXlxcZHs0fSQvLFxuXHRcdFx0J2hyJzogL15cXGR7NX0kLyxcblx0XHRcdCdpcyc6IC9eXFxkezN9JC8sXG5cdFx0XHQnaXQnOiAvXlxcZHs1fSQvLFxuXHRcdFx0J2pwJzogL15cXGR7M30tXFxkezR9JC8sXG5cdFx0XHQnbHQnOiAvXihMVC0pP1xcZHs1fSQvLFxuXHRcdFx0J2x1JzogL14oTFxccyooLXzigJR84oCTKSlcXHMqP1tcXGRdezR9JC8sXG5cdFx0XHQnbHYnOiAvXkxWLVxcZHs0fSQvLFxuXHRcdFx0J210JzogL15bQS1aYS16XXszfSBcXGR7NH0vLFxuXHRcdFx0J25sJzogL15bMS05XVxcZHszfVxccz9bYS16QS1aXXsyfSQvLFxuXHRcdFx0J25vJzogL15cXGR7NH0kLyxcblx0XHRcdCdwbCc6IC9eXFxkezJ9XFwtXFxkezN9JC8sXG5cdFx0XHQncHQnOiAvXlxcZHs0fSQvLFxuXHRcdFx0J3JvJzogL15cXGR7Nn0kLyxcblx0XHRcdCdzZSc6IC9eXFxkezN9XFxzP1xcZHsyfSQvLFxuXHRcdFx0J3NpJzogL15cXGR7NH0kLyxcblx0XHRcdCdzayc6IC9eKFNLLSk/XFxkezN9IFxcZHsyfSQvLFxuXHRcdFx0J3RyJzogL15cXGR7NX0kLyxcblx0XHRcdCd1YSc6IC9eXFxkezV9JC8sXG5cdFx0XHQndXMnOiAvXihcXGR7NX0oW1xcLV1cXGR7NH0pPykkL1xuXHRcdH1cblx0fTtcblxuXHQvLyBGdW5jdGlvbiBvYmplY3Rcblx0Y2hlY2suZm4gPSB7XG5cdFx0ZXZlbjogZnVuY3Rpb24gKCBudW0gKSB7XG5cdFx0XHRpZiAoIGlzTmFOKCBudW0gKSApIG51bSA9IG51bS5wYXJzZUludCggbnVtLCAxMCApO1xuXHRcdFx0cmV0dXJuIGlzTmFOKCBudW0gKSA/IGZhbHNlIDogbnVtID09PSAwIHx8ICggbnVtICUgMiApID09PSAwO1xuXHRcdH0sXG5cdFx0ZnVuY3Rpb246IGZ1bmN0aW9uICggdmFsICkge1xuXHRcdFx0cmV0dXJuIHR5cGVvZiB2YWwgPT09ICdmdW5jdGlvbic7XG5cdFx0fSxcblx0XHRsdWhuOiBmdW5jdGlvbiAoIG51bSApIHtcblx0XHRcdC8vIFN0cmluZ2lmeSB0aGUgbnVtXG5cdFx0XHQvLyBDcmVhdGUgYW4gYXJyYXkgYW5kIHJldmVyc2UgaXRcblx0XHRcdG51bSA9IChudW0gKyAnJykuc3BsaXQoJycpLnJldmVyc2UoKTtcblxuXHRcdFx0Ly8gRGVmaW5lIHZhcmlhYmxlcyBmb3IgbGF0ZXIgdXNlXG5cdFx0XHR2YXIgc3VtID0gMCwgaSwgZGlnaXQ7XG5cblx0XHRcdGZvciggaSA9IDA7IGkgPCBudW0ubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0Ly8gQXNzaWduIG51bWJlciB0byBkaWdpdCBhbmQgbXVsdGlwbHkgYnkgMiBldmVyeSBvZGQgbnVtXG5cdFx0XHRcdGRpZ2l0ID0gcGFyc2VJbnQobnVtWyBpIF0sIDEwKSAqICgoaSArIDEpICUgMiA/IDEgOiAyKTtcblxuXHRcdFx0XHQvLyBBZGQgdG8gdGhlIHN1bSBidXQgcmVkdWNlIGJ5IDkgaWYgZGlnaXQgPiA5XG5cdFx0XHRcdHN1bSArPSBkaWdpdCA+IDkgPyBkaWdpdCAtIDkgOiBkaWdpdDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmV0dXJuIGJvb2xlYW5cblx0XHRcdHJldHVybiAoc3VtICUgMTApID09PSAwO1xuXHRcdH0sXG5cdFx0b2RkOiBmdW5jdGlvbiAoIG51bSApIHtcblx0XHRcdHJldHVybiAhdGhpcy5ldmVuKCBudW0gKTtcblx0XHR9LFxuXHRcdG9rOiBmdW5jdGlvbiAoIHZhbCwgZXhwcmVzc2lvbiApIHtcblx0XHRcdGlmICggdHlwZW9mIHZhbCA9PT0gJ3N0cmluZycgKSB7XG5cdFx0XHRcdHJldHVybiBleHByZXNzaW9uLnRlc3QoIHZhbC50cmltKCkgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiAhIXZhbDtcblx0XHRcdH1cblx0XHR9LFxuXHRcdHJlZ2V4cDogZnVuY3Rpb24gKCB2YWwgKSB7XG5cdFx0XHRyZXR1cm4gdmFsID8gKHR5cGVvZiB2YWwgPT09ICdvYmplY3QnICYmIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgUmVnRXhwXScpIDogZmFsc2U7XG5cdFx0fVxuXHR9O1xuXG5cdC8vIFJldHVybiBib29sZWFuIGJhc2VkIG9uIGV4cHJlc3Npb24gdHlwZVxuIFx0cmV0dXJuIGNoZWNrLmZuLnJlZ2V4cChleHByZXNzaW9uKSA/XG5cdFx0XHRcdGNoZWNrLmZuLm9rKHZhbHVlLCBleHByZXNzaW9uKSA6XG5cdFx0XHRjaGVjay5oYXNPd25Qcm9wZXJ0eShleHByZXNzaW9uKSA/XG5cdFx0XHRcdGNoZWNrLmZuLm9rKHZhbHVlLCBkZWVwID8gY2hlY2tbZXhwcmVzc2lvbl1bZGVlcF0gOiBjaGVja1tleHByZXNzaW9uXSkgOlxuXHRcdFx0Y2hlY2suZm4uaGFzT3duUHJvcGVydHkoIGV4cHJlc3Npb24gKSA/XG5cdFx0XHRcdCggY2hlY2suZm5bIGV4cHJlc3Npb24gXSggdmFsdWUgKSA/IHRydWUgOiBmYWxzZSApIDpcblx0XHRcdGNoZWNrLmZuLmZ1bmN0aW9uKCBleHByZXNzaW9uICkgP1xuXHRcdFx0XHQoIGV4cHJlc3Npb24oIHZhbHVlICkgPyB0cnVlIDogZmFsc2UgKSA6XG5cdFx0XHRmYWxzZTtcblxufTtcblxufSkoalF1ZXJ5KTsiLCIvKipcbiAqIFN3aXBlciAzLjAuNlxuICogTW9zdCBtb2Rlcm4gbW9iaWxlIHRvdWNoIHNsaWRlciBhbmQgZnJhbWV3b3JrIHdpdGggaGFyZHdhcmUgYWNjZWxlcmF0ZWQgdHJhbnNpdGlvbnNcbiAqIFxuICogaHR0cDovL3d3dy5pZGFuZ2Vyby51cy9zd2lwZXIvXG4gKiBcbiAqIENvcHlyaWdodCAyMDE1LCBWbGFkaW1pciBLaGFybGFtcGlkaVxuICogVGhlIGlEYW5nZXJvLnVzXG4gKiBodHRwOi8vd3d3LmlkYW5nZXJvLnVzL1xuICogXG4gKiBMaWNlbnNlZCB1bmRlciBNSVRcbiAqIFxuICogUmVsZWFzZWQgb246IE1hcmNoIDI3LCAyMDE1XG4gKi9cbiFmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGUoZSl7ZS5mbi5zd2lwZXI9ZnVuY3Rpb24oYSl7dmFyIHQ7cmV0dXJuIGUodGhpcykuZWFjaChmdW5jdGlvbigpe3ZhciBlPW5ldyBTd2lwZXIodGhpcyxhKTt0fHwodD1lKX0pLHR9fXdpbmRvdy5Td2lwZXI9ZnVuY3Rpb24oZSxhKXtmdW5jdGlvbiB0KCl7cmV0dXJuXCJob3Jpem9udGFsXCI9PT1mLnBhcmFtcy5kaXJlY3Rpb259ZnVuY3Rpb24gcygpe2YuYXV0b3BsYXlUaW1lb3V0SWQ9c2V0VGltZW91dChmdW5jdGlvbigpe2YucGFyYW1zLmxvb3A/KGYuZml4TG9vcCgpLGYuX3NsaWRlTmV4dCgpKTpmLmlzRW5kP2EuYXV0b3BsYXlTdG9wT25MYXN0P2Yuc3RvcEF1dG9wbGF5KCk6Zi5fc2xpZGVUbygwKTpmLl9zbGlkZU5leHQoKX0sZi5wYXJhbXMuYXV0b3BsYXkpfWZ1bmN0aW9uIHIoZSxhKXt2YXIgdD1oKGUudGFyZ2V0KTtpZighdC5pcyhhKSlpZihcInN0cmluZ1wiPT10eXBlb2YgYSl0PXQucGFyZW50cyhhKTtlbHNlIGlmKGEubm9kZVR5cGUpe3ZhciBzO3JldHVybiB0LnBhcmVudHMoKS5lYWNoKGZ1bmN0aW9uKGUsdCl7dD09PWEmJihzPWEpfSkscz9hOnZvaWQgMH1yZXR1cm4gMD09PXQubGVuZ3RoP3ZvaWQgMDp0WzBdfWZ1bmN0aW9uIGkoZSxhKXthPWF8fHt9O3ZhciB0PXdpbmRvdy5NdXRhdGlvbk9ic2VydmVyfHx3aW5kb3cuV2Via2l0TXV0YXRpb25PYnNlcnZlcixzPW5ldyB0KGZ1bmN0aW9uKGUpe2UuZm9yRWFjaChmdW5jdGlvbihlKXtmLm9uUmVzaXplKCksZi5lbWl0KFwib25PYnNlcnZlclVwZGF0ZVwiLGYsZSl9KX0pO3Mub2JzZXJ2ZShlLHthdHRyaWJ1dGVzOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBhLmF0dHJpYnV0ZXM/ITA6YS5hdHRyaWJ1dGVzLGNoaWxkTGlzdDpcInVuZGVmaW5lZFwiPT10eXBlb2YgYS5jaGlsZExpc3Q/ITA6YS5jaGlsZExpc3QsY2hhcmFjdGVyRGF0YTpcInVuZGVmaW5lZFwiPT10eXBlb2YgYS5jaGFyYWN0ZXJEYXRhPyEwOmEuY2hhcmFjdGVyRGF0YX0pLGYub2JzZXJ2ZXJzLnB1c2gocyl9ZnVuY3Rpb24gbihlKXtlLm9yaWdpbmFsRXZlbnQmJihlPWUub3JpZ2luYWxFdmVudCk7dmFyIGE9ZS5rZXlDb2RlfHxlLmNoYXJDb2RlO2lmKCEoZS5zaGlmdEtleXx8ZS5hbHRLZXl8fGUuY3RybEtleXx8ZS5tZXRhS2V5fHxkb2N1bWVudC5hY3RpdmVFbGVtZW50JiZkb2N1bWVudC5hY3RpdmVFbGVtZW50Lm5vZGVOYW1lJiYoXCJpbnB1dFwiPT09ZG9jdW1lbnQuYWN0aXZlRWxlbWVudC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpfHxcInRleHRhcmVhXCI9PT1kb2N1bWVudC5hY3RpdmVFbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpKSl7aWYoMzc9PT1hfHwzOT09PWF8fDM4PT09YXx8NDA9PT1hKXt2YXIgcz0hMTtpZihmLmNvbnRhaW5lci5wYXJlbnRzKFwiLnN3aXBlci1zbGlkZVwiKS5sZW5ndGg+MCYmMD09PWYuY29udGFpbmVyLnBhcmVudHMoXCIuc3dpcGVyLXNsaWRlLWFjdGl2ZVwiKS5sZW5ndGgpcmV0dXJuO2Zvcih2YXIgcj17bGVmdDp3aW5kb3cucGFnZVhPZmZzZXQsdG9wOndpbmRvdy5wYWdlWU9mZnNldH0saT13aW5kb3cuaW5uZXJXaWR0aCxuPXdpbmRvdy5pbm5lckhlaWdodCxvPWYuY29udGFpbmVyLm9mZnNldCgpLGw9W1tvLmxlZnQsby50b3BdLFtvLmxlZnQrZi53aWR0aCxvLnRvcF0sW28ubGVmdCxvLnRvcCtmLmhlaWdodF0sW28ubGVmdCtmLndpZHRoLG8udG9wK2YuaGVpZ2h0XV0scD0wO3A8bC5sZW5ndGg7cCsrKXt2YXIgZD1sW3BdO2RbMF0+PXIubGVmdCYmZFswXTw9ci5sZWZ0K2kmJmRbMV0+PXIudG9wJiZkWzFdPD1yLnRvcCtuJiYocz0hMCl9aWYoIXMpcmV0dXJufXQoKT8oKDM3PT09YXx8Mzk9PT1hKSYmKGUucHJldmVudERlZmF1bHQ/ZS5wcmV2ZW50RGVmYXVsdCgpOmUucmV0dXJuVmFsdWU9ITEpLDM5PT09YSYmZi5zbGlkZU5leHQoKSwzNz09PWEmJmYuc2xpZGVQcmV2KCkpOigoMzg9PT1hfHw0MD09PWEpJiYoZS5wcmV2ZW50RGVmYXVsdD9lLnByZXZlbnREZWZhdWx0KCk6ZS5yZXR1cm5WYWx1ZT0hMSksNDA9PT1hJiZmLnNsaWRlTmV4dCgpLDM4PT09YSYmZi5zbGlkZVByZXYoKSl9fWZ1bmN0aW9uIG8oZSl7ZS5vcmlnaW5hbEV2ZW50JiYoZT1lLm9yaWdpbmFsRXZlbnQpO3ZhciBhPWYuX3doZWVsRXZlbnQscz0wO2lmKGUuZGV0YWlsKXM9LWUuZGV0YWlsO2Vsc2UgaWYoXCJtb3VzZXdoZWVsXCI9PT1hKWlmKGYucGFyYW1zLm1vdXNld2hlZWxGb3JjZVRvQXhpcylpZih0KCkpe2lmKCEoTWF0aC5hYnMoZS53aGVlbERlbHRhWCk+TWF0aC5hYnMoZS53aGVlbERlbHRhWSkpKXJldHVybjtzPWUud2hlZWxEZWx0YVh9ZWxzZXtpZighKE1hdGguYWJzKGUud2hlZWxEZWx0YVkpPk1hdGguYWJzKGUud2hlZWxEZWx0YVgpKSlyZXR1cm47cz1lLndoZWVsRGVsdGFZfWVsc2Ugcz1lLndoZWVsRGVsdGE7ZWxzZSBpZihcIkRPTU1vdXNlU2Nyb2xsXCI9PT1hKXM9LWUuZGV0YWlsO2Vsc2UgaWYoXCJ3aGVlbFwiPT09YSlpZihmLnBhcmFtcy5tb3VzZXdoZWVsRm9yY2VUb0F4aXMpaWYodCgpKXtpZighKE1hdGguYWJzKGUuZGVsdGFYKT5NYXRoLmFicyhlLmRlbHRhWSkpKXJldHVybjtzPS1lLmRlbHRhWH1lbHNle2lmKCEoTWF0aC5hYnMoZS5kZWx0YVkpPk1hdGguYWJzKGUuZGVsdGFYKSkpcmV0dXJuO3M9LWUuZGVsdGFZfWVsc2Ugcz1NYXRoLmFicyhlLmRlbHRhWCk+TWF0aC5hYnMoZS5kZWx0YVkpPy1lLmRlbHRhWDotZS5kZWx0YVk7aWYoZi5wYXJhbXMuZnJlZU1vZGUpe3ZhciByPWYuZ2V0V3JhcHBlclRyYW5zbGF0ZSgpK3M7aWYocj4wJiYocj0wKSxyPGYubWF4VHJhbnNsYXRlKCkmJihyPWYubWF4VHJhbnNsYXRlKCkpLGYuc2V0V3JhcHBlclRyYW5zaXRpb24oMCksZi5zZXRXcmFwcGVyVHJhbnNsYXRlKHIpLGYudXBkYXRlUHJvZ3Jlc3MoKSxmLnVwZGF0ZUFjdGl2ZUluZGV4KCksMD09PXJ8fHI9PT1mLm1heFRyYW5zbGF0ZSgpKXJldHVybn1lbHNlKG5ldyBEYXRlKS5nZXRUaW1lKCktZi5fbGFzdFdoZWVsU2Nyb2xsVGltZT42MCYmKDA+cz9mLnNsaWRlTmV4dCgpOmYuc2xpZGVQcmV2KCkpLGYuX2xhc3RXaGVlbFNjcm9sbFRpbWU9KG5ldyBEYXRlKS5nZXRUaW1lKCk7cmV0dXJuIGYucGFyYW1zLmF1dG9wbGF5JiZmLnN0b3BBdXRvcGxheSgpLGUucHJldmVudERlZmF1bHQ/ZS5wcmV2ZW50RGVmYXVsdCgpOmUucmV0dXJuVmFsdWU9ITEsITF9ZnVuY3Rpb24gbChlLGEpe2U9aChlKTt2YXIgcyxyLGk7cz1lLmF0dHIoXCJkYXRhLXN3aXBlci1wYXJhbGxheFwiKXx8XCIwXCIscj1lLmF0dHIoXCJkYXRhLXN3aXBlci1wYXJhbGxheC14XCIpLGk9ZS5hdHRyKFwiZGF0YS1zd2lwZXItcGFyYWxsYXgteVwiKSxyfHxpPyhyPXJ8fFwiMFwiLGk9aXx8XCIwXCIpOnQoKT8ocj1zLGk9XCIwXCIpOihpPXMscj1cIjBcIikscj1yLmluZGV4T2YoXCIlXCIpPj0wP3BhcnNlSW50KHIsMTApKmErXCIlXCI6ciphK1wicHhcIixpPWkuaW5kZXhPZihcIiVcIik+PTA/cGFyc2VJbnQoaSwxMCkqYStcIiVcIjppKmErXCJweFwiLGUudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoXCIrcitcIiwgXCIraStcIiwwcHgpXCIpfWZ1bmN0aW9uIHAoZSl7cmV0dXJuIDAhPT1lLmluZGV4T2YoXCJvblwiKSYmKGU9ZVswXSE9PWVbMF0udG9VcHBlckNhc2UoKT9cIm9uXCIrZVswXS50b1VwcGVyQ2FzZSgpK2Uuc3Vic3RyaW5nKDEpOlwib25cIitlKSxlfWlmKCEodGhpcyBpbnN0YW5jZW9mIFN3aXBlcikpcmV0dXJuIG5ldyBTd2lwZXIoZSxhKTt2YXIgZD17ZGlyZWN0aW9uOlwiaG9yaXpvbnRhbFwiLHRvdWNoRXZlbnRzVGFyZ2V0OlwiY29udGFpbmVyXCIsaW5pdGlhbFNsaWRlOjAsc3BlZWQ6MzAwLGF1dG9wbGF5OiExLGF1dG9wbGF5RGlzYWJsZU9uSW50ZXJhY3Rpb246ITAsZnJlZU1vZGU6ITEsZnJlZU1vZGVNb21lbnR1bTohMCxmcmVlTW9kZU1vbWVudHVtUmF0aW86MSxmcmVlTW9kZU1vbWVudHVtQm91bmNlOiEwLGZyZWVNb2RlTW9tZW50dW1Cb3VuY2VSYXRpbzoxLHNldFdyYXBwZXJTaXplOiExLHZpcnR1YWxUcmFuc2xhdGU6ITEsZWZmZWN0Olwic2xpZGVcIixjb3ZlcmZsb3c6e3JvdGF0ZTo1MCxzdHJldGNoOjAsZGVwdGg6MTAwLG1vZGlmaWVyOjEsc2xpZGVTaGFkb3dzOiEwfSxjdWJlOntzbGlkZVNoYWRvd3M6ITAsc2hhZG93OiEwLHNoYWRvd09mZnNldDoyMCxzaGFkb3dTY2FsZTouOTR9LGZhZGU6e2Nyb3NzRmFkZTohMX0scGFyYWxsYXg6ITEsc2Nyb2xsYmFyOm51bGwsc2Nyb2xsYmFySGlkZTohMCxrZXlib2FyZENvbnRyb2w6ITEsbW91c2V3aGVlbENvbnRyb2w6ITEsbW91c2V3aGVlbEZvcmNlVG9BeGlzOiExLGhhc2huYXY6ITEsc3BhY2VCZXR3ZWVuOjAsc2xpZGVzUGVyVmlldzoxLHNsaWRlc1BlckNvbHVtbjoxLHNsaWRlc1BlckNvbHVtbkZpbGw6XCJjb2x1bW5cIixzbGlkZXNQZXJHcm91cDoxLGNlbnRlcmVkU2xpZGVzOiExLHRvdWNoUmF0aW86MSx0b3VjaEFuZ2xlOjQ1LHNpbXVsYXRlVG91Y2g6ITAsc2hvcnRTd2lwZXM6ITAsbG9uZ1N3aXBlczohMCxsb25nU3dpcGVzUmF0aW86LjUsbG9uZ1N3aXBlc01zOjMwMCxmb2xsb3dGaW5nZXI6ITAsb25seUV4dGVybmFsOiExLHRocmVzaG9sZDowLHRvdWNoTW92ZVN0b3BQcm9wYWdhdGlvbjohMCxwYWdpbmF0aW9uOm51bGwscGFnaW5hdGlvbkNsaWNrYWJsZTohMSxwYWdpbmF0aW9uSGlkZTohMSxwYWdpbmF0aW9uQnVsbGV0UmVuZGVyOm51bGwscmVzaXN0YW5jZTohMCxyZXNpc3RhbmNlUmF0aW86Ljg1LG5leHRCdXR0b246bnVsbCxwcmV2QnV0dG9uOm51bGwsd2F0Y2hTbGlkZXNQcm9ncmVzczohMSx3YXRjaFNsaWRlc1Zpc2liaWxpdHk6ITEsZ3JhYkN1cnNvcjohMSxwcmV2ZW50Q2xpY2tzOiEwLHByZXZlbnRDbGlja3NQcm9wYWdhdGlvbjohMCxzbGlkZVRvQ2xpY2tlZFNsaWRlOiExLGxhenlMb2FkaW5nOiExLGxhenlMb2FkaW5nSW5QcmV2TmV4dDohMSxsYXp5TG9hZGluZ09uVHJhbnNpdGlvblN0YXJ0OiExLHByZWxvYWRJbWFnZXM6ITAsdXBkYXRlT25JbWFnZXNSZWFkeTohMCxsb29wOiExLGxvb3BBZGRpdGlvbmFsU2xpZGVzOjAsbG9vcGVkU2xpZGVzOm51bGwsY29udHJvbDp2b2lkIDAsY29udHJvbEludmVyc2U6ITEsYWxsb3dTd2lwZVRvUHJldjohMCxhbGxvd1N3aXBlVG9OZXh0OiEwLHN3aXBlSGFuZGxlcjpudWxsLG5vU3dpcGluZzohMCxub1N3aXBpbmdDbGFzczpcInN3aXBlci1uby1zd2lwaW5nXCIsc2xpZGVDbGFzczpcInN3aXBlci1zbGlkZVwiLHNsaWRlQWN0aXZlQ2xhc3M6XCJzd2lwZXItc2xpZGUtYWN0aXZlXCIsc2xpZGVWaXNpYmxlQ2xhc3M6XCJzd2lwZXItc2xpZGUtdmlzaWJsZVwiLHNsaWRlRHVwbGljYXRlQ2xhc3M6XCJzd2lwZXItc2xpZGUtZHVwbGljYXRlXCIsc2xpZGVOZXh0Q2xhc3M6XCJzd2lwZXItc2xpZGUtbmV4dFwiLHNsaWRlUHJldkNsYXNzOlwic3dpcGVyLXNsaWRlLXByZXZcIix3cmFwcGVyQ2xhc3M6XCJzd2lwZXItd3JhcHBlclwiLGJ1bGxldENsYXNzOlwic3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0XCIsYnVsbGV0QWN0aXZlQ2xhc3M6XCJzd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlXCIsYnV0dG9uRGlzYWJsZWRDbGFzczpcInN3aXBlci1idXR0b24tZGlzYWJsZWRcIixwYWdpbmF0aW9uSGlkZGVuQ2xhc3M6XCJzd2lwZXItcGFnaW5hdGlvbi1oaWRkZW5cIixvYnNlcnZlcjohMSxvYnNlcnZlUGFyZW50czohMSxhMTF5OiExLHByZXZTbGlkZU1lc3NhZ2U6XCJQcmV2aW91cyBzbGlkZVwiLG5leHRTbGlkZU1lc3NhZ2U6XCJOZXh0IHNsaWRlXCIsZmlyc3RTbGlkZU1lc3NhZ2U6XCJUaGlzIGlzIHRoZSBmaXJzdCBzbGlkZVwiLGxhc3RTbGlkZU1lc3NhZ2U6XCJUaGlzIGlzIHRoZSBsYXN0IHNsaWRlXCIscnVuQ2FsbGJhY2tzT25Jbml0OiEwfSx1PWEmJmEudmlydHVhbFRyYW5zbGF0ZTthPWF8fHt9O2Zvcih2YXIgYyBpbiBkKWlmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBhW2NdKWFbY109ZFtjXTtlbHNlIGlmKFwib2JqZWN0XCI9PXR5cGVvZiBhW2NdKWZvcih2YXIgbSBpbiBkW2NdKVwidW5kZWZpbmVkXCI9PXR5cGVvZiBhW2NdW21dJiYoYVtjXVttXT1kW2NdW21dKTt2YXIgZj10aGlzO2YucGFyYW1zPWEsZi5jbGFzc05hbWVzPVtdO3ZhciBoO2lmKGg9XCJ1bmRlZmluZWRcIj09dHlwZW9mIERvbTc/d2luZG93LkRvbTd8fHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeTpEb203LGgmJihmLiQ9aCxmLmNvbnRhaW5lcj1oKGUpLDAhPT1mLmNvbnRhaW5lci5sZW5ndGgpKXtpZihmLmNvbnRhaW5lci5sZW5ndGg+MSlyZXR1cm4gdm9pZCBmLmNvbnRhaW5lci5lYWNoKGZ1bmN0aW9uKCl7bmV3IFN3aXBlcih0aGlzLGEpfSk7Zi5jb250YWluZXJbMF0uc3dpcGVyPWYsZi5jb250YWluZXIuZGF0YShcInN3aXBlclwiLGYpLGYuY2xhc3NOYW1lcy5wdXNoKFwic3dpcGVyLWNvbnRhaW5lci1cIitmLnBhcmFtcy5kaXJlY3Rpb24pLGYucGFyYW1zLmZyZWVNb2RlJiZmLmNsYXNzTmFtZXMucHVzaChcInN3aXBlci1jb250YWluZXItZnJlZS1tb2RlXCIpLGYuc3VwcG9ydC5mbGV4Ym94fHwoZi5jbGFzc05hbWVzLnB1c2goXCJzd2lwZXItY29udGFpbmVyLW5vLWZsZXhib3hcIiksZi5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uPTEpLChmLnBhcmFtcy5wYXJhbGxheHx8Zi5wYXJhbXMud2F0Y2hTbGlkZXNWaXNpYmlsaXR5KSYmKGYucGFyYW1zLndhdGNoU2xpZGVzUHJvZ3Jlc3M9ITApLFtcImN1YmVcIixcImNvdmVyZmxvd1wiXS5pbmRleE9mKGYucGFyYW1zLmVmZmVjdCk+PTAmJihmLnN1cHBvcnQudHJhbnNmb3JtczNkPyhmLnBhcmFtcy53YXRjaFNsaWRlc1Byb2dyZXNzPSEwLGYuY2xhc3NOYW1lcy5wdXNoKFwic3dpcGVyLWNvbnRhaW5lci0zZFwiKSk6Zi5wYXJhbXMuZWZmZWN0PVwic2xpZGVcIiksXCJzbGlkZVwiIT09Zi5wYXJhbXMuZWZmZWN0JiZmLmNsYXNzTmFtZXMucHVzaChcInN3aXBlci1jb250YWluZXItXCIrZi5wYXJhbXMuZWZmZWN0KSxcImN1YmVcIj09PWYucGFyYW1zLmVmZmVjdCYmKGYucGFyYW1zLnJlc2lzdGFuY2VSYXRpbz0wLGYucGFyYW1zLnNsaWRlc1BlclZpZXc9MSxmLnBhcmFtcy5zbGlkZXNQZXJDb2x1bW49MSxmLnBhcmFtcy5zbGlkZXNQZXJHcm91cD0xLGYucGFyYW1zLmNlbnRlcmVkU2xpZGVzPSExLGYucGFyYW1zLnNwYWNlQmV0d2Vlbj0wLGYucGFyYW1zLnZpcnR1YWxUcmFuc2xhdGU9ITAsZi5wYXJhbXMuc2V0V3JhcHBlclNpemU9ITEpLFwiZmFkZVwiPT09Zi5wYXJhbXMuZWZmZWN0JiYoZi5wYXJhbXMuc2xpZGVzUGVyVmlldz0xLGYucGFyYW1zLnNsaWRlc1BlckNvbHVtbj0xLGYucGFyYW1zLnNsaWRlc1Blckdyb3VwPTEsZi5wYXJhbXMud2F0Y2hTbGlkZXNQcm9ncmVzcz0hMCxmLnBhcmFtcy5zcGFjZUJldHdlZW49MCxcInVuZGVmaW5lZFwiPT10eXBlb2YgdSYmKGYucGFyYW1zLnZpcnR1YWxUcmFuc2xhdGU9ITApKSxmLnBhcmFtcy5ncmFiQ3Vyc29yJiZmLnN1cHBvcnQudG91Y2gmJihmLnBhcmFtcy5ncmFiQ3Vyc29yPSExKSxmLndyYXBwZXI9Zi5jb250YWluZXIuY2hpbGRyZW4oXCIuXCIrZi5wYXJhbXMud3JhcHBlckNsYXNzKSxmLnBhcmFtcy5wYWdpbmF0aW9uJiYoZi5wYWdpbmF0aW9uQ29udGFpbmVyPWgoZi5wYXJhbXMucGFnaW5hdGlvbiksZi5wYXJhbXMucGFnaW5hdGlvbkNsaWNrYWJsZSYmZi5wYWdpbmF0aW9uQ29udGFpbmVyLmFkZENsYXNzKFwic3dpcGVyLXBhZ2luYXRpb24tY2xpY2thYmxlXCIpKSxmLnJ0bD10KCkmJihcInJ0bFwiPT09Zi5jb250YWluZXJbMF0uZGlyLnRvTG93ZXJDYXNlKCl8fFwicnRsXCI9PT1mLmNvbnRhaW5lci5jc3MoXCJkaXJlY3Rpb25cIikpLGYucnRsJiZmLmNsYXNzTmFtZXMucHVzaChcInN3aXBlci1jb250YWluZXItcnRsXCIpLGYucnRsJiYoZi53cm9uZ1JUTD1cIi13ZWJraXQtYm94XCI9PT1mLndyYXBwZXIuY3NzKFwiZGlzcGxheVwiKSksZi5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uPjEmJmYuY2xhc3NOYW1lcy5wdXNoKFwic3dpcGVyLWNvbnRhaW5lci1tdWx0aXJvd1wiKSxmLmRldmljZS5hbmRyb2lkJiZmLmNsYXNzTmFtZXMucHVzaChcInN3aXBlci1jb250YWluZXItYW5kcm9pZFwiKSxmLmNvbnRhaW5lci5hZGRDbGFzcyhmLmNsYXNzTmFtZXMuam9pbihcIiBcIikpLGYudHJhbnNsYXRlPTAsZi5wcm9ncmVzcz0wLGYudmVsb2NpdHk9MCxmLmxvY2tTd2lwZVRvTmV4dD1mdW5jdGlvbigpe2YucGFyYW1zLmFsbG93U3dpcGVUb05leHQ9ITF9LGYubG9ja1N3aXBlVG9QcmV2PWZ1bmN0aW9uKCl7Zi5wYXJhbXMuYWxsb3dTd2lwZVRvUHJldj0hMX0sZi5sb2NrU3dpcGVzPWZ1bmN0aW9uKCl7Zi5wYXJhbXMuYWxsb3dTd2lwZVRvTmV4dD1mLnBhcmFtcy5hbGxvd1N3aXBlVG9QcmV2PSExfSxmLnVubG9ja1N3aXBlVG9OZXh0PWZ1bmN0aW9uKCl7Zi5wYXJhbXMuYWxsb3dTd2lwZVRvTmV4dD0hMH0sZi51bmxvY2tTd2lwZVRvUHJldj1mdW5jdGlvbigpe2YucGFyYW1zLmFsbG93U3dpcGVUb1ByZXY9ITB9LGYudW5sb2NrU3dpcGVzPWZ1bmN0aW9uKCl7Zi5wYXJhbXMuYWxsb3dTd2lwZVRvTmV4dD1mLnBhcmFtcy5hbGxvd1N3aXBlVG9QcmV2PSEwfSxmLnBhcmFtcy5ncmFiQ3Vyc29yJiYoZi5jb250YWluZXJbMF0uc3R5bGUuY3Vyc29yPVwibW92ZVwiLGYuY29udGFpbmVyWzBdLnN0eWxlLmN1cnNvcj1cIi13ZWJraXQtZ3JhYlwiLGYuY29udGFpbmVyWzBdLnN0eWxlLmN1cnNvcj1cIi1tb3otZ3JhYlwiLGYuY29udGFpbmVyWzBdLnN0eWxlLmN1cnNvcj1cImdyYWJcIiksZi5pbWFnZXNUb0xvYWQ9W10sZi5pbWFnZXNMb2FkZWQ9MCxmLmxvYWRJbWFnZT1mdW5jdGlvbihlLGEsdCxzKXtmdW5jdGlvbiByKCl7cyYmcygpfXZhciBpO2UuY29tcGxldGUmJnQ/cigpOmE/KGk9bmV3IEltYWdlLGkub25sb2FkPXIsaS5vbmVycm9yPXIsaS5zcmM9YSk6cigpfSxmLnByZWxvYWRJbWFnZXM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGYmJm51bGwhPT1mJiYodm9pZCAwIT09Zi5pbWFnZXNMb2FkZWQmJmYuaW1hZ2VzTG9hZGVkKyssZi5pbWFnZXNMb2FkZWQ9PT1mLmltYWdlc1RvTG9hZC5sZW5ndGgmJihmLnBhcmFtcy51cGRhdGVPbkltYWdlc1JlYWR5JiZmLnVwZGF0ZSgpLGYuZW1pdChcIm9uSW1hZ2VzUmVhZHlcIixmKSkpfWYuaW1hZ2VzVG9Mb2FkPWYuY29udGFpbmVyLmZpbmQoXCJpbWdcIik7Zm9yKHZhciBhPTA7YTxmLmltYWdlc1RvTG9hZC5sZW5ndGg7YSsrKWYubG9hZEltYWdlKGYuaW1hZ2VzVG9Mb2FkW2FdLGYuaW1hZ2VzVG9Mb2FkW2FdLmN1cnJlbnRTcmN8fGYuaW1hZ2VzVG9Mb2FkW2FdLmdldEF0dHJpYnV0ZShcInNyY1wiKSwhMCxlKX0sZi5hdXRvcGxheVRpbWVvdXRJZD12b2lkIDAsZi5hdXRvcGxheWluZz0hMSxmLmF1dG9wbGF5UGF1c2VkPSExLGYuc3RhcnRBdXRvcGxheT1mdW5jdGlvbigpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBmLmF1dG9wbGF5VGltZW91dElkPyExOmYucGFyYW1zLmF1dG9wbGF5P2YuYXV0b3BsYXlpbmc/ITE6KGYuYXV0b3BsYXlpbmc9ITAsZi5lbWl0KFwib25BdXRvcGxheVN0YXJ0XCIsZiksdm9pZCBzKCkpOiExfSxmLnN0b3BBdXRvcGxheT1mdW5jdGlvbigpe2YuYXV0b3BsYXlUaW1lb3V0SWQmJihmLmF1dG9wbGF5VGltZW91dElkJiZjbGVhclRpbWVvdXQoZi5hdXRvcGxheVRpbWVvdXRJZCksZi5hdXRvcGxheWluZz0hMSxmLmF1dG9wbGF5VGltZW91dElkPXZvaWQgMCxmLmVtaXQoXCJvbkF1dG9wbGF5U3RvcFwiLGYpKX0sZi5wYXVzZUF1dG9wbGF5PWZ1bmN0aW9uKGUpe2YuYXV0b3BsYXlQYXVzZWR8fChmLmF1dG9wbGF5VGltZW91dElkJiZjbGVhclRpbWVvdXQoZi5hdXRvcGxheVRpbWVvdXRJZCksZi5hdXRvcGxheVBhdXNlZD0hMCwwPT09ZT8oZi5hdXRvcGxheVBhdXNlZD0hMSxzKCkpOmYud3JhcHBlci50cmFuc2l0aW9uRW5kKGZ1bmN0aW9uKCl7Zi5hdXRvcGxheVBhdXNlZD0hMSxmLmF1dG9wbGF5aW5nP3MoKTpmLnN0b3BBdXRvcGxheSgpfSkpfSxmLm1pblRyYW5zbGF0ZT1mdW5jdGlvbigpe3JldHVybi1mLnNuYXBHcmlkWzBdfSxmLm1heFRyYW5zbGF0ZT1mdW5jdGlvbigpe3JldHVybi1mLnNuYXBHcmlkW2Yuc25hcEdyaWQubGVuZ3RoLTFdfSxmLnVwZGF0ZUNvbnRhaW5lclNpemU9ZnVuY3Rpb24oKXtmLndpZHRoPWYuY29udGFpbmVyWzBdLmNsaWVudFdpZHRoLGYuaGVpZ2h0PWYuY29udGFpbmVyWzBdLmNsaWVudEhlaWdodCxmLnNpemU9dCgpP2Yud2lkdGg6Zi5oZWlnaHR9LGYudXBkYXRlU2xpZGVzU2l6ZT1mdW5jdGlvbigpe2Yuc2xpZGVzPWYud3JhcHBlci5jaGlsZHJlbihcIi5cIitmLnBhcmFtcy5zbGlkZUNsYXNzKSxmLnNuYXBHcmlkPVtdLGYuc2xpZGVzR3JpZD1bXSxmLnNsaWRlc1NpemVzR3JpZD1bXTt2YXIgZSxhPWYucGFyYW1zLnNwYWNlQmV0d2VlbixzPTAscj0wLGk9MDtcInN0cmluZ1wiPT10eXBlb2YgYSYmYS5pbmRleE9mKFwiJVwiKT49MCYmKGE9cGFyc2VGbG9hdChhLnJlcGxhY2UoXCIlXCIsXCJcIikpLzEwMCpmLnNpemUpLGYudmlydHVhbFNpemU9LWEsZi5zbGlkZXMuY3NzKGYucnRsP3ttYXJnaW5MZWZ0OlwiXCIsbWFyZ2luVG9wOlwiXCJ9OnttYXJnaW5SaWdodDpcIlwiLG1hcmdpbkJvdHRvbTpcIlwifSk7dmFyIG47Zi5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uPjEmJihuPU1hdGguZmxvb3IoZi5zbGlkZXMubGVuZ3RoL2YucGFyYW1zLnNsaWRlc1BlckNvbHVtbik9PT1mLnNsaWRlcy5sZW5ndGgvZi5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uP2Yuc2xpZGVzLmxlbmd0aDpNYXRoLmNlaWwoZi5zbGlkZXMubGVuZ3RoL2YucGFyYW1zLnNsaWRlc1BlckNvbHVtbikqZi5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uKTt2YXIgbztmb3IoZT0wO2U8Zi5zbGlkZXMubGVuZ3RoO2UrKyl7bz0wO3ZhciBsPWYuc2xpZGVzLmVxKGUpO2lmKGYucGFyYW1zLnNsaWRlc1BlckNvbHVtbj4xKXt2YXIgcCxkLHUsYyxtPWYucGFyYW1zLnNsaWRlc1BlckNvbHVtbjtcImNvbHVtblwiPT09Zi5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uRmlsbD8oZD1NYXRoLmZsb29yKGUvbSksdT1lLWQqbSxwPWQrdSpuL20sbC5jc3Moe1wiLXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cFwiOnAsXCItbW96LWJveC1vcmRpbmFsLWdyb3VwXCI6cCxcIi1tcy1mbGV4LW9yZGVyXCI6cCxcIi13ZWJraXQtb3JkZXJcIjpwLG9yZGVyOnB9KSk6KGM9bi9tLHU9TWF0aC5mbG9vcihlL2MpLGQ9ZS11KmMpLGwuY3NzKHtcIm1hcmdpbi10b3BcIjowIT09dSYmZi5wYXJhbXMuc3BhY2VCZXR3ZWVuJiZmLnBhcmFtcy5zcGFjZUJldHdlZW4rXCJweFwifSkuYXR0cihcImRhdGEtc3dpcGVyLWNvbHVtblwiLGQpLmF0dHIoXCJkYXRhLXN3aXBlci1yb3dcIix1KX1cIm5vbmVcIiE9PWwuY3NzKFwiZGlzcGxheVwiKSYmKFwiYXV0b1wiPT09Zi5wYXJhbXMuc2xpZGVzUGVyVmlldz9vPXQoKT9sLm91dGVyV2lkdGgoITApOmwub3V0ZXJIZWlnaHQoITApOihvPShmLnNpemUtKGYucGFyYW1zLnNsaWRlc1BlclZpZXctMSkqYSkvZi5wYXJhbXMuc2xpZGVzUGVyVmlldyx0KCk/Zi5zbGlkZXNbZV0uc3R5bGUud2lkdGg9bytcInB4XCI6Zi5zbGlkZXNbZV0uc3R5bGUuaGVpZ2h0PW8rXCJweFwiKSxmLnNsaWRlc1tlXS5zd2lwZXJTbGlkZVNpemU9byxmLnNsaWRlc1NpemVzR3JpZC5wdXNoKG8pLGYucGFyYW1zLmNlbnRlcmVkU2xpZGVzPyhzPXMrby8yK3IvMithLDA9PT1lJiYocz1zLWYuc2l6ZS8yLWEpLE1hdGguYWJzKHMpPC4wMDEmJihzPTApLGklZi5wYXJhbXMuc2xpZGVzUGVyR3JvdXA9PT0wJiZmLnNuYXBHcmlkLnB1c2gocyksZi5zbGlkZXNHcmlkLnB1c2gocykpOihpJWYucGFyYW1zLnNsaWRlc1Blckdyb3VwPT09MCYmZi5zbmFwR3JpZC5wdXNoKHMpLGYuc2xpZGVzR3JpZC5wdXNoKHMpLHM9cytvK2EpLGYudmlydHVhbFNpemUrPW8rYSxyPW8saSsrKX1mLnZpcnR1YWxTaXplPU1hdGgubWF4KGYudmlydHVhbFNpemUsZi5zaXplKTt2YXIgaDtpZihmLnJ0bCYmZi53cm9uZ1JUTCYmKFwic2xpZGVcIj09PWYucGFyYW1zLmVmZmVjdHx8XCJjb3ZlcmZsb3dcIj09PWYucGFyYW1zLmVmZmVjdCkmJmYud3JhcHBlci5jc3Moe3dpZHRoOmYudmlydHVhbFNpemUrZi5wYXJhbXMuc3BhY2VCZXR3ZWVuK1wicHhcIn0pLCghZi5zdXBwb3J0LmZsZXhib3h8fGYucGFyYW1zLnNldFdyYXBwZXJTaXplKSYmZi53cmFwcGVyLmNzcyh0KCk/e3dpZHRoOmYudmlydHVhbFNpemUrZi5wYXJhbXMuc3BhY2VCZXR3ZWVuK1wicHhcIn06e2hlaWdodDpmLnZpcnR1YWxTaXplK2YucGFyYW1zLnNwYWNlQmV0d2VlbitcInB4XCJ9KSxmLnBhcmFtcy5zbGlkZXNQZXJDb2x1bW4+MSYmKGYudmlydHVhbFNpemU9KG8rZi5wYXJhbXMuc3BhY2VCZXR3ZWVuKSpuLGYudmlydHVhbFNpemU9TWF0aC5jZWlsKGYudmlydHVhbFNpemUvZi5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uKS1mLnBhcmFtcy5zcGFjZUJldHdlZW4sZi53cmFwcGVyLmNzcyh7d2lkdGg6Zi52aXJ0dWFsU2l6ZStmLnBhcmFtcy5zcGFjZUJldHdlZW4rXCJweFwifSksZi5wYXJhbXMuY2VudGVyZWRTbGlkZXMpKXtmb3IoaD1bXSxlPTA7ZTxmLnNuYXBHcmlkLmxlbmd0aDtlKyspZi5zbmFwR3JpZFtlXTxmLnZpcnR1YWxTaXplK2Yuc25hcEdyaWRbMF0mJmgucHVzaChmLnNuYXBHcmlkW2VdKTtmLnNuYXBHcmlkPWh9aWYoIWYucGFyYW1zLmNlbnRlcmVkU2xpZGVzKXtmb3IoaD1bXSxlPTA7ZTxmLnNuYXBHcmlkLmxlbmd0aDtlKyspZi5zbmFwR3JpZFtlXTw9Zi52aXJ0dWFsU2l6ZS1mLnNpemUmJmgucHVzaChmLnNuYXBHcmlkW2VdKTtmLnNuYXBHcmlkPWgsTWF0aC5mbG9vcihmLnZpcnR1YWxTaXplLWYuc2l6ZSk+TWF0aC5mbG9vcihmLnNuYXBHcmlkW2Yuc25hcEdyaWQubGVuZ3RoLTFdKSYmZi5zbmFwR3JpZC5wdXNoKGYudmlydHVhbFNpemUtZi5zaXplKX0wPT09Zi5zbmFwR3JpZC5sZW5ndGgmJihmLnNuYXBHcmlkPVswXSksMCE9PWYucGFyYW1zLnNwYWNlQmV0d2VlbiYmZi5zbGlkZXMuY3NzKHQoKT9mLnJ0bD97bWFyZ2luTGVmdDphK1wicHhcIn06e21hcmdpblJpZ2h0OmErXCJweFwifTp7bWFyZ2luQm90dG9tOmErXCJweFwifSksZi5wYXJhbXMud2F0Y2hTbGlkZXNQcm9ncmVzcyYmZi51cGRhdGVTbGlkZXNPZmZzZXQoKX0sZi51cGRhdGVTbGlkZXNPZmZzZXQ9ZnVuY3Rpb24oKXtmb3IodmFyIGU9MDtlPGYuc2xpZGVzLmxlbmd0aDtlKyspZi5zbGlkZXNbZV0uc3dpcGVyU2xpZGVPZmZzZXQ9dCgpP2Yuc2xpZGVzW2VdLm9mZnNldExlZnQ6Zi5zbGlkZXNbZV0ub2Zmc2V0VG9wfSxmLnVwZGF0ZVNsaWRlc1Byb2dyZXNzPWZ1bmN0aW9uKGUpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBlJiYoZT1mLnRyYW5zbGF0ZXx8MCksMCE9PWYuc2xpZGVzLmxlbmd0aCl7XCJ1bmRlZmluZWRcIj09dHlwZW9mIGYuc2xpZGVzWzBdLnN3aXBlclNsaWRlT2Zmc2V0JiZmLnVwZGF0ZVNsaWRlc09mZnNldCgpO3ZhciBhPWYucGFyYW1zLmNlbnRlcmVkU2xpZGVzPy1lK2Yuc2l6ZS8yOi1lO2YucnRsJiYoYT1mLnBhcmFtcy5jZW50ZXJlZFNsaWRlcz9lLWYuc2l6ZS8yOmUpO3tmLmNvbnRhaW5lclswXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSx0KCk/XCJsZWZ0XCI6XCJ0b3BcIix0KCk/XCJyaWdodFwiOlwiYm90dG9tXCJ9Zi5zbGlkZXMucmVtb3ZlQ2xhc3MoZi5wYXJhbXMuc2xpZGVWaXNpYmxlQ2xhc3MpO2Zvcih2YXIgcz0wO3M8Zi5zbGlkZXMubGVuZ3RoO3MrKyl7dmFyIHI9Zi5zbGlkZXNbc10saT1mLnBhcmFtcy5jZW50ZXJlZFNsaWRlcz09PSEwP3Iuc3dpcGVyU2xpZGVTaXplLzI6MCxuPShhLXIuc3dpcGVyU2xpZGVPZmZzZXQtaSkvKHIuc3dpcGVyU2xpZGVTaXplK2YucGFyYW1zLnNwYWNlQmV0d2Vlbik7aWYoZi5wYXJhbXMud2F0Y2hTbGlkZXNWaXNpYmlsaXR5KXt2YXIgbz0tKGEtci5zd2lwZXJTbGlkZU9mZnNldC1pKSxsPW8rZi5zbGlkZXNTaXplc0dyaWRbc10scD1vPj0wJiZvPGYuc2l6ZXx8bD4wJiZsPD1mLnNpemV8fDA+PW8mJmw+PWYuc2l6ZTtwJiZmLnNsaWRlcy5lcShzKS5hZGRDbGFzcyhmLnBhcmFtcy5zbGlkZVZpc2libGVDbGFzcyl9ci5wcm9ncmVzcz1mLnJ0bD8tbjpufX19LGYudXBkYXRlUHJvZ3Jlc3M9ZnVuY3Rpb24oZSl7XCJ1bmRlZmluZWRcIj09dHlwZW9mIGUmJihlPWYudHJhbnNsYXRlfHwwKTt2YXIgYT1mLm1heFRyYW5zbGF0ZSgpLWYubWluVHJhbnNsYXRlKCk7MD09PWE/KGYucHJvZ3Jlc3M9MCxmLmlzQmVnaW5uaW5nPWYuaXNFbmQ9ITApOihmLnByb2dyZXNzPShlLWYubWluVHJhbnNsYXRlKCkpL2EsZi5pc0JlZ2lubmluZz1mLnByb2dyZXNzPD0wLGYuaXNFbmQ9Zi5wcm9ncmVzcz49MSksZi5pc0JlZ2lubmluZyYmZi5lbWl0KFwib25SZWFjaEJlZ2lubmluZ1wiLGYpLGYuaXNFbmQmJmYuZW1pdChcIm9uUmVhY2hFbmRcIixmKSxmLnBhcmFtcy53YXRjaFNsaWRlc1Byb2dyZXNzJiZmLnVwZGF0ZVNsaWRlc1Byb2dyZXNzKGUpLGYuZW1pdChcIm9uUHJvZ3Jlc3NcIixmLGYucHJvZ3Jlc3MpfSxmLnVwZGF0ZUFjdGl2ZUluZGV4PWZ1bmN0aW9uKCl7dmFyIGUsYSx0LHM9Zi5ydGw/Zi50cmFuc2xhdGU6LWYudHJhbnNsYXRlO2ZvcihhPTA7YTxmLnNsaWRlc0dyaWQubGVuZ3RoO2ErKylcInVuZGVmaW5lZFwiIT10eXBlb2YgZi5zbGlkZXNHcmlkW2ErMV0/cz49Zi5zbGlkZXNHcmlkW2FdJiZzPGYuc2xpZGVzR3JpZFthKzFdLShmLnNsaWRlc0dyaWRbYSsxXS1mLnNsaWRlc0dyaWRbYV0pLzI/ZT1hOnM+PWYuc2xpZGVzR3JpZFthXSYmczxmLnNsaWRlc0dyaWRbYSsxXSYmKGU9YSsxKTpzPj1mLnNsaWRlc0dyaWRbYV0mJihlPWEpOygwPmV8fFwidW5kZWZpbmVkXCI9PXR5cGVvZiBlKSYmKGU9MCksdD1NYXRoLmZsb29yKGUvZi5wYXJhbXMuc2xpZGVzUGVyR3JvdXApLHQ+PWYuc25hcEdyaWQubGVuZ3RoJiYodD1mLnNuYXBHcmlkLmxlbmd0aC0xKSxlIT09Zi5hY3RpdmVJbmRleCYmKGYuc25hcEluZGV4PXQsZi5wcmV2aW91c0luZGV4PWYuYWN0aXZlSW5kZXgsZi5hY3RpdmVJbmRleD1lLGYudXBkYXRlQ2xhc3NlcygpKX0sZi51cGRhdGVDbGFzc2VzPWZ1bmN0aW9uKCl7Zi5zbGlkZXMucmVtb3ZlQ2xhc3MoZi5wYXJhbXMuc2xpZGVBY3RpdmVDbGFzcytcIiBcIitmLnBhcmFtcy5zbGlkZU5leHRDbGFzcytcIiBcIitmLnBhcmFtcy5zbGlkZVByZXZDbGFzcyk7dmFyIGU9Zi5zbGlkZXMuZXEoZi5hY3RpdmVJbmRleCk7aWYoZS5hZGRDbGFzcyhmLnBhcmFtcy5zbGlkZUFjdGl2ZUNsYXNzKSxlLm5leHQoXCIuXCIrZi5wYXJhbXMuc2xpZGVDbGFzcykuYWRkQ2xhc3MoZi5wYXJhbXMuc2xpZGVOZXh0Q2xhc3MpLGUucHJldihcIi5cIitmLnBhcmFtcy5zbGlkZUNsYXNzKS5hZGRDbGFzcyhmLnBhcmFtcy5zbGlkZVByZXZDbGFzcyksZi5idWxsZXRzJiZmLmJ1bGxldHMubGVuZ3RoPjApe2YuYnVsbGV0cy5yZW1vdmVDbGFzcyhmLnBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyk7dmFyIGE7Zi5wYXJhbXMubG9vcD8oYT1NYXRoLmNlaWwoZi5hY3RpdmVJbmRleC1mLmxvb3BlZFNsaWRlcykvZi5wYXJhbXMuc2xpZGVzUGVyR3JvdXAsYT5mLnNsaWRlcy5sZW5ndGgtMS0yKmYubG9vcGVkU2xpZGVzJiYoYS09Zi5zbGlkZXMubGVuZ3RoLTIqZi5sb29wZWRTbGlkZXMpLGE+Zi5idWxsZXRzLmxlbmd0aC0xJiYoYS09Zi5idWxsZXRzLmxlbmd0aCkpOmE9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGYuc25hcEluZGV4P2Yuc25hcEluZGV4OmYuYWN0aXZlSW5kZXh8fDAsZi5wYWdpbmF0aW9uQ29udGFpbmVyLmxlbmd0aD4xP2YuYnVsbGV0cy5lYWNoKGZ1bmN0aW9uKCl7aCh0aGlzKS5pbmRleCgpPT09YSYmaCh0aGlzKS5hZGRDbGFzcyhmLnBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyl9KTpmLmJ1bGxldHMuZXEoYSkuYWRkQ2xhc3MoZi5wYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MpfWYucGFyYW1zLmxvb3B8fChmLnBhcmFtcy5wcmV2QnV0dG9uJiYoZi5pc0JlZ2lubmluZz8oaChmLnBhcmFtcy5wcmV2QnV0dG9uKS5hZGRDbGFzcyhmLnBhcmFtcy5idXR0b25EaXNhYmxlZENsYXNzKSxmLnBhcmFtcy5hMTF5JiZmLmExMXkmJmYuYTExeS5kaXNhYmxlKGgoZi5wYXJhbXMucHJldkJ1dHRvbikpKTooaChmLnBhcmFtcy5wcmV2QnV0dG9uKS5yZW1vdmVDbGFzcyhmLnBhcmFtcy5idXR0b25EaXNhYmxlZENsYXNzKSxmLnBhcmFtcy5hMTF5JiZmLmExMXkmJmYuYTExeS5lbmFibGUoaChmLnBhcmFtcy5wcmV2QnV0dG9uKSkpKSxmLnBhcmFtcy5uZXh0QnV0dG9uJiYoZi5pc0VuZD8oaChmLnBhcmFtcy5uZXh0QnV0dG9uKS5hZGRDbGFzcyhmLnBhcmFtcy5idXR0b25EaXNhYmxlZENsYXNzKSxmLnBhcmFtcy5hMTF5JiZmLmExMXkmJmYuYTExeS5kaXNhYmxlKGgoZi5wYXJhbXMubmV4dEJ1dHRvbikpKTooaChmLnBhcmFtcy5uZXh0QnV0dG9uKS5yZW1vdmVDbGFzcyhmLnBhcmFtcy5idXR0b25EaXNhYmxlZENsYXNzKSxmLnBhcmFtcy5hMTF5JiZmLmExMXkmJmYuYTExeS5lbmFibGUoaChmLnBhcmFtcy5uZXh0QnV0dG9uKSkpKSl9LGYudXBkYXRlUGFnaW5hdGlvbj1mdW5jdGlvbigpe2lmKGYucGFyYW1zLnBhZ2luYXRpb24mJmYucGFnaW5hdGlvbkNvbnRhaW5lciYmZi5wYWdpbmF0aW9uQ29udGFpbmVyLmxlbmd0aD4wKXtmb3IodmFyIGU9XCJcIixhPWYucGFyYW1zLmxvb3A/TWF0aC5jZWlsKChmLnNsaWRlcy5sZW5ndGgtMipmLmxvb3BlZFNsaWRlcykvZi5wYXJhbXMuc2xpZGVzUGVyR3JvdXApOmYuc25hcEdyaWQubGVuZ3RoLHQ9MDthPnQ7dCsrKWUrPWYucGFyYW1zLnBhZ2luYXRpb25CdWxsZXRSZW5kZXI/Zi5wYXJhbXMucGFnaW5hdGlvbkJ1bGxldFJlbmRlcih0LGYucGFyYW1zLmJ1bGxldENsYXNzKTonPHNwYW4gY2xhc3M9XCInK2YucGFyYW1zLmJ1bGxldENsYXNzKydcIj48L3NwYW4+JztmLnBhZ2luYXRpb25Db250YWluZXIuaHRtbChlKSxmLmJ1bGxldHM9Zi5wYWdpbmF0aW9uQ29udGFpbmVyLmZpbmQoXCIuXCIrZi5wYXJhbXMuYnVsbGV0Q2xhc3MpfX0sZi51cGRhdGU9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gYSgpe3M9TWF0aC5taW4oTWF0aC5tYXgoZi50cmFuc2xhdGUsZi5tYXhUcmFuc2xhdGUoKSksZi5taW5UcmFuc2xhdGUoKSksZi5zZXRXcmFwcGVyVHJhbnNsYXRlKHMpLGYudXBkYXRlQWN0aXZlSW5kZXgoKSxmLnVwZGF0ZUNsYXNzZXMoKX1pZihmLnVwZGF0ZUNvbnRhaW5lclNpemUoKSxmLnVwZGF0ZVNsaWRlc1NpemUoKSxmLnVwZGF0ZVByb2dyZXNzKCksZi51cGRhdGVQYWdpbmF0aW9uKCksZi51cGRhdGVDbGFzc2VzKCksZi5wYXJhbXMuc2Nyb2xsYmFyJiZmLnNjcm9sbGJhciYmZi5zY3JvbGxiYXIuc2V0KCksZSl7dmFyIHQscztmLnBhcmFtcy5mcmVlTW9kZT9hKCk6KHQ9XCJhdXRvXCI9PT1mLnBhcmFtcy5zbGlkZXNQZXJWaWV3JiZmLmlzRW5kJiYhZi5wYXJhbXMuY2VudGVyZWRTbGlkZXM/Zi5zbGlkZVRvKGYuc2xpZGVzLmxlbmd0aC0xLDAsITEsITApOmYuc2xpZGVUbyhmLmFjdGl2ZUluZGV4LDAsITEsITApLHR8fGEoKSl9fSxmLm9uUmVzaXplPWZ1bmN0aW9uKCl7aWYoZi51cGRhdGVDb250YWluZXJTaXplKCksZi51cGRhdGVTbGlkZXNTaXplKCksZi51cGRhdGVQcm9ncmVzcygpLChcImF1dG9cIj09PWYucGFyYW1zLnNsaWRlc1BlclZpZXd8fGYucGFyYW1zLmZyZWVNb2RlKSYmZi51cGRhdGVQYWdpbmF0aW9uKCksZi5wYXJhbXMuc2Nyb2xsYmFyJiZmLnNjcm9sbGJhciYmZi5zY3JvbGxiYXIuc2V0KCksZi5wYXJhbXMuZnJlZU1vZGUpe3ZhciBlPU1hdGgubWluKE1hdGgubWF4KGYudHJhbnNsYXRlLGYubWF4VHJhbnNsYXRlKCkpLGYubWluVHJhbnNsYXRlKCkpO2Yuc2V0V3JhcHBlclRyYW5zbGF0ZShlKSxmLnVwZGF0ZUFjdGl2ZUluZGV4KCksZi51cGRhdGVDbGFzc2VzKCl9ZWxzZSBmLnVwZGF0ZUNsYXNzZXMoKSxcImF1dG9cIj09PWYucGFyYW1zLnNsaWRlc1BlclZpZXcmJmYuaXNFbmQmJiFmLnBhcmFtcy5jZW50ZXJlZFNsaWRlcz9mLnNsaWRlVG8oZi5zbGlkZXMubGVuZ3RoLTEsMCwhMSwhMCk6Zi5zbGlkZVRvKGYuYWN0aXZlSW5kZXgsMCwhMSwhMCl9O3ZhciB2PVtcIm1vdXNlZG93blwiLFwibW91c2Vtb3ZlXCIsXCJtb3VzZXVwXCJdO3dpbmRvdy5uYXZpZ2F0b3IucG9pbnRlckVuYWJsZWQ/dj1bXCJwb2ludGVyZG93blwiLFwicG9pbnRlcm1vdmVcIixcInBvaW50ZXJ1cFwiXTp3aW5kb3cubmF2aWdhdG9yLm1zUG9pbnRlckVuYWJsZWQmJih2PVtcIk1TUG9pbnRlckRvd25cIixcIk1TUG9pbnRlck1vdmVcIixcIk1TUG9pbnRlclVwXCJdKSxmLnRvdWNoRXZlbnRzPXtzdGFydDpmLnN1cHBvcnQudG91Y2h8fCFmLnBhcmFtcy5zaW11bGF0ZVRvdWNoP1widG91Y2hzdGFydFwiOnZbMF0sbW92ZTpmLnN1cHBvcnQudG91Y2h8fCFmLnBhcmFtcy5zaW11bGF0ZVRvdWNoP1widG91Y2htb3ZlXCI6dlsxXSxlbmQ6Zi5zdXBwb3J0LnRvdWNofHwhZi5wYXJhbXMuc2ltdWxhdGVUb3VjaD9cInRvdWNoZW5kXCI6dlsyXX0sKHdpbmRvdy5uYXZpZ2F0b3IucG9pbnRlckVuYWJsZWR8fHdpbmRvdy5uYXZpZ2F0b3IubXNQb2ludGVyRW5hYmxlZCkmJihcImNvbnRhaW5lclwiPT09Zi5wYXJhbXMudG91Y2hFdmVudHNUYXJnZXQ/Zi5jb250YWluZXI6Zi53cmFwcGVyKS5hZGRDbGFzcyhcInN3aXBlci13cDgtXCIrZi5wYXJhbXMuZGlyZWN0aW9uKSxmLmluaXRFdmVudHM9ZnVuY3Rpb24oZSl7dmFyIHQ9ZT9cIm9mZlwiOlwib25cIixzPWU/XCJyZW1vdmVFdmVudExpc3RlbmVyXCI6XCJhZGRFdmVudExpc3RlbmVyXCIscj1cImNvbnRhaW5lclwiPT09Zi5wYXJhbXMudG91Y2hFdmVudHNUYXJnZXQ/Zi5jb250YWluZXJbMF06Zi53cmFwcGVyWzBdLGk9Zi5zdXBwb3J0LnRvdWNoP3I6ZG9jdW1lbnQsbj1mLnBhcmFtcy5uZXN0ZWQ/ITA6ITE7Zi5icm93c2VyLmllPyhyW3NdKGYudG91Y2hFdmVudHMuc3RhcnQsZi5vblRvdWNoU3RhcnQsITEpLGlbc10oZi50b3VjaEV2ZW50cy5tb3ZlLGYub25Ub3VjaE1vdmUsbiksaVtzXShmLnRvdWNoRXZlbnRzLmVuZCxmLm9uVG91Y2hFbmQsITEpKTooZi5zdXBwb3J0LnRvdWNoJiYocltzXShmLnRvdWNoRXZlbnRzLnN0YXJ0LGYub25Ub3VjaFN0YXJ0LCExKSxyW3NdKGYudG91Y2hFdmVudHMubW92ZSxmLm9uVG91Y2hNb3ZlLG4pLHJbc10oZi50b3VjaEV2ZW50cy5lbmQsZi5vblRvdWNoRW5kLCExKSksIWEuc2ltdWxhdGVUb3VjaHx8Zi5kZXZpY2UuaW9zfHxmLmRldmljZS5hbmRyb2lkfHwocltzXShcIm1vdXNlZG93blwiLGYub25Ub3VjaFN0YXJ0LCExKSxpW3NdKFwibW91c2Vtb3ZlXCIsZi5vblRvdWNoTW92ZSxuKSxpW3NdKFwibW91c2V1cFwiLGYub25Ub3VjaEVuZCwhMSkpKSx3aW5kb3dbc10oXCJyZXNpemVcIixmLm9uUmVzaXplKSxmLnBhcmFtcy5uZXh0QnV0dG9uJiYoaChmLnBhcmFtcy5uZXh0QnV0dG9uKVt0XShcImNsaWNrXCIsZi5vbkNsaWNrTmV4dCksZi5wYXJhbXMuYTExeSYmZi5hMTF5JiZoKGYucGFyYW1zLm5leHRCdXR0b24pW3RdKFwia2V5ZG93blwiLGYuYTExeS5vbkVudGVyS2V5KSksZi5wYXJhbXMucHJldkJ1dHRvbiYmKGgoZi5wYXJhbXMucHJldkJ1dHRvbilbdF0oXCJjbGlja1wiLGYub25DbGlja1ByZXYpLGYucGFyYW1zLmExMXkmJmYuYTExeSYmaChmLnBhcmFtcy5wcmV2QnV0dG9uKVt0XShcImtleWRvd25cIixmLmExMXkub25FbnRlcktleSkpLGYucGFyYW1zLnBhZ2luYXRpb24mJmYucGFyYW1zLnBhZ2luYXRpb25DbGlja2FibGUmJmgoZi5wYWdpbmF0aW9uQ29udGFpbmVyKVt0XShcImNsaWNrXCIsXCIuXCIrZi5wYXJhbXMuYnVsbGV0Q2xhc3MsZi5vbkNsaWNrSW5kZXgpLChmLnBhcmFtcy5wcmV2ZW50Q2xpY2tzfHxmLnBhcmFtcy5wcmV2ZW50Q2xpY2tzUHJvcGFnYXRpb24pJiZyW3NdKFwiY2xpY2tcIixmLnByZXZlbnRDbGlja3MsITApfSxmLmF0dGFjaEV2ZW50cz1mdW5jdGlvbigpe2YuaW5pdEV2ZW50cygpfSxmLmRldGFjaEV2ZW50cz1mdW5jdGlvbigpe2YuaW5pdEV2ZW50cyghMCl9LGYuYWxsb3dDbGljaz0hMCxmLnByZXZlbnRDbGlja3M9ZnVuY3Rpb24oZSl7Zi5hbGxvd0NsaWNrfHwoZi5wYXJhbXMucHJldmVudENsaWNrcyYmZS5wcmV2ZW50RGVmYXVsdCgpLGYucGFyYW1zLnByZXZlbnRDbGlja3NQcm9wYWdhdGlvbiYmKGUuc3RvcFByb3BhZ2F0aW9uKCksZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSkpfSxmLm9uQ2xpY2tOZXh0PWZ1bmN0aW9uKGUpe2UucHJldmVudERlZmF1bHQoKSxmLnNsaWRlTmV4dCgpfSxmLm9uQ2xpY2tQcmV2PWZ1bmN0aW9uKGUpe2UucHJldmVudERlZmF1bHQoKSxmLnNsaWRlUHJldigpfSxmLm9uQ2xpY2tJbmRleD1mdW5jdGlvbihlKXtlLnByZXZlbnREZWZhdWx0KCk7dmFyIGE9aCh0aGlzKS5pbmRleCgpKmYucGFyYW1zLnNsaWRlc1Blckdyb3VwO2YucGFyYW1zLmxvb3AmJihhKz1mLmxvb3BlZFNsaWRlcyksZi5zbGlkZVRvKGEpfSxmLnVwZGF0ZUNsaWNrZWRTbGlkZT1mdW5jdGlvbihlKXt2YXIgYT1yKGUsXCIuXCIrZi5wYXJhbXMuc2xpZGVDbGFzcyk7aWYoIWEpcmV0dXJuIGYuY2xpY2tlZFNsaWRlPXZvaWQgMCx2b2lkKGYuY2xpY2tlZEluZGV4PXZvaWQgMCk7aWYoZi5jbGlja2VkU2xpZGU9YSxmLmNsaWNrZWRJbmRleD1oKGEpLmluZGV4KCksZi5wYXJhbXMuc2xpZGVUb0NsaWNrZWRTbGlkZSYmdm9pZCAwIT09Zi5jbGlja2VkSW5kZXgmJmYuY2xpY2tlZEluZGV4IT09Zi5hY3RpdmVJbmRleCl7dmFyIHQscz1mLmNsaWNrZWRJbmRleDtpZihmLnBhcmFtcy5sb29wKWlmKHQ9aChmLmNsaWNrZWRTbGlkZSkuYXR0cihcImRhdGEtc3dpcGVyLXNsaWRlLWluZGV4XCIpLHM+Zi5zbGlkZXMubGVuZ3RoLWYucGFyYW1zLnNsaWRlc1BlclZpZXcpZi5maXhMb29wKCkscz1mLndyYXBwZXIuY2hpbGRyZW4oXCIuXCIrZi5wYXJhbXMuc2xpZGVDbGFzcysnW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJyt0KydcIl0nKS5lcSgwKS5pbmRleCgpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtmLnNsaWRlVG8ocyl9LDApO2Vsc2UgaWYoczxmLnBhcmFtcy5zbGlkZXNQZXJWaWV3LTEpe2YuZml4TG9vcCgpO3ZhciBpPWYud3JhcHBlci5jaGlsZHJlbihcIi5cIitmLnBhcmFtcy5zbGlkZUNsYXNzKydbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCInK3QrJ1wiXScpO3M9aS5lcShpLmxlbmd0aC0xKS5pbmRleCgpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtmLnNsaWRlVG8ocyl9LDApfWVsc2UgZi5zbGlkZVRvKHMpO2Vsc2UgZi5zbGlkZVRvKHMpfX07dmFyIGcsdyxiLHkseCxULFMsQyxNLFA9XCJpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYSwgYnV0dG9uXCIsej1EYXRlLm5vdygpLEk9W107Zi5hbmltYXRpbmc9ITEsZi50b3VjaGVzPXtzdGFydFg6MCxzdGFydFk6MCxjdXJyZW50WDowLGN1cnJlbnRZOjAsZGlmZjowfTt2YXIgRSxrO2lmKGYub25Ub3VjaFN0YXJ0PWZ1bmN0aW9uKGUpe2lmKGUub3JpZ2luYWxFdmVudCYmKGU9ZS5vcmlnaW5hbEV2ZW50KSxFPVwidG91Y2hzdGFydFwiPT09ZS50eXBlLEV8fCEoXCJ3aGljaFwiaW4gZSl8fDMhPT1lLndoaWNoKXtpZihmLnBhcmFtcy5ub1N3aXBpbmcmJnIoZSxcIi5cIitmLnBhcmFtcy5ub1N3aXBpbmdDbGFzcykpcmV0dXJuIHZvaWQoZi5hbGxvd0NsaWNrPSEwKTtpZighZi5wYXJhbXMuc3dpcGVIYW5kbGVyfHxyKGUsZi5wYXJhbXMuc3dpcGVIYW5kbGVyKSl7aWYoZz0hMCx3PSExLHk9dm9pZCAwLGs9dm9pZCAwLGYudG91Y2hlcy5zdGFydFg9Zi50b3VjaGVzLmN1cnJlbnRYPVwidG91Y2hzdGFydFwiPT09ZS50eXBlP2UudGFyZ2V0VG91Y2hlc1swXS5wYWdlWDplLnBhZ2VYLGYudG91Y2hlcy5zdGFydFk9Zi50b3VjaGVzLmN1cnJlbnRZPVwidG91Y2hzdGFydFwiPT09ZS50eXBlP2UudGFyZ2V0VG91Y2hlc1swXS5wYWdlWTplLnBhZ2VZLGI9RGF0ZS5ub3coKSxmLmFsbG93Q2xpY2s9ITAsZi51cGRhdGVDb250YWluZXJTaXplKCksZi5zd2lwZURpcmVjdGlvbj12b2lkIDAsZi5wYXJhbXMudGhyZXNob2xkPjAmJihTPSExKSxcInRvdWNoc3RhcnRcIiE9PWUudHlwZSl7dmFyIGE9ITA7aChlLnRhcmdldCkuaXMoUCkmJihhPSExKSxkb2N1bWVudC5hY3RpdmVFbGVtZW50JiZoKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpLmlzKFApJiZkb2N1bWVudC5hY3RpdmVFbGVtZW50LmJsdXIoKSxhJiZlLnByZXZlbnREZWZhdWx0KCl9Zi5lbWl0KFwib25Ub3VjaFN0YXJ0XCIsZixlKX19fSxmLm9uVG91Y2hNb3ZlPWZ1bmN0aW9uKGUpe2lmKGUub3JpZ2luYWxFdmVudCYmKGU9ZS5vcmlnaW5hbEV2ZW50KSwhKEUmJlwibW91c2Vtb3ZlXCI9PT1lLnR5cGV8fGUucHJldmVudGVkQnlOZXN0ZWRTd2lwZXIpKXtpZihmLnBhcmFtcy5vbmx5RXh0ZXJuYWwpcmV0dXJuIHc9ITAsdm9pZChmLmFsbG93Q2xpY2s9ITEpO2lmKEUmJmRvY3VtZW50LmFjdGl2ZUVsZW1lbnQmJmUudGFyZ2V0PT09ZG9jdW1lbnQuYWN0aXZlRWxlbWVudCYmaChlLnRhcmdldCkuaXMoUCkpcmV0dXJuIHc9ITAsdm9pZChmLmFsbG93Q2xpY2s9ITEpO2lmKGYuZW1pdChcIm9uVG91Y2hNb3ZlXCIsZixlKSwhKGUudGFyZ2V0VG91Y2hlcyYmZS50YXJnZXRUb3VjaGVzLmxlbmd0aD4xKSl7aWYoZi50b3VjaGVzLmN1cnJlbnRYPVwidG91Y2htb3ZlXCI9PT1lLnR5cGU/ZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VYOmUucGFnZVgsZi50b3VjaGVzLmN1cnJlbnRZPVwidG91Y2htb3ZlXCI9PT1lLnR5cGU/ZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VZOmUucGFnZVksXCJ1bmRlZmluZWRcIj09dHlwZW9mIHkpe3ZhciBzPTE4MCpNYXRoLmF0YW4yKE1hdGguYWJzKGYudG91Y2hlcy5jdXJyZW50WS1mLnRvdWNoZXMuc3RhcnRZKSxNYXRoLmFicyhmLnRvdWNoZXMuY3VycmVudFgtZi50b3VjaGVzLnN0YXJ0WCkpL01hdGguUEk7eT10KCk/cz5mLnBhcmFtcy50b3VjaEFuZ2xlOjkwLXM+Zi5wYXJhbXMudG91Y2hBbmdsZX1pZih5JiZmLmVtaXQoXCJvblRvdWNoTW92ZU9wcG9zaXRlXCIsZixlKSxcInVuZGVmaW5lZFwiPT10eXBlb2YgayYmZi5icm93c2VyLmllVG91Y2gmJihmLnRvdWNoZXMuY3VycmVudFghPT1mLnRvdWNoZXMuc3RhcnRYfHxmLnRvdWNoZXMuY3VycmVudFkhPT1mLnRvdWNoZXMuc3RhcnRZKSYmKGs9ITApLGcpe2lmKHkpcmV0dXJuIHZvaWQoZz0hMSk7aWYoa3x8IWYuYnJvd3Nlci5pZVRvdWNoKXtmLmFsbG93Q2xpY2s9ITEsZi5lbWl0KFwib25TbGlkZXJNb3ZlXCIsZixlKSxlLnByZXZlbnREZWZhdWx0KCksZi5wYXJhbXMudG91Y2hNb3ZlU3RvcFByb3BhZ2F0aW9uJiYhZi5wYXJhbXMubmVzdGVkJiZlLnN0b3BQcm9wYWdhdGlvbigpLHd8fChhLmxvb3AmJmYuZml4TG9vcCgpLFQ9Zi5nZXRXcmFwcGVyVHJhbnNsYXRlKCksZi5zZXRXcmFwcGVyVHJhbnNpdGlvbigwKSxmLmFuaW1hdGluZyYmZi53cmFwcGVyLnRyaWdnZXIoXCJ3ZWJraXRUcmFuc2l0aW9uRW5kIHRyYW5zaXRpb25lbmQgb1RyYW5zaXRpb25FbmQgTVNUcmFuc2l0aW9uRW5kIG1zVHJhbnNpdGlvbkVuZFwiKSxmLnBhcmFtcy5hdXRvcGxheSYmZi5hdXRvcGxheWluZyYmKGYucGFyYW1zLmF1dG9wbGF5RGlzYWJsZU9uSW50ZXJhY3Rpb24/Zi5zdG9wQXV0b3BsYXkoKTpmLnBhdXNlQXV0b3BsYXkoKSksTT0hMSxmLnBhcmFtcy5ncmFiQ3Vyc29yJiYoZi5jb250YWluZXJbMF0uc3R5bGUuY3Vyc29yPVwibW92ZVwiLGYuY29udGFpbmVyWzBdLnN0eWxlLmN1cnNvcj1cIi13ZWJraXQtZ3JhYmJpbmdcIixmLmNvbnRhaW5lclswXS5zdHlsZS5jdXJzb3I9XCItbW96LWdyYWJiaW5cIixmLmNvbnRhaW5lclswXS5zdHlsZS5jdXJzb3I9XCJncmFiYmluZ1wiKSksdz0hMDt2YXIgcj1mLnRvdWNoZXMuZGlmZj10KCk/Zi50b3VjaGVzLmN1cnJlbnRYLWYudG91Y2hlcy5zdGFydFg6Zi50b3VjaGVzLmN1cnJlbnRZLWYudG91Y2hlcy5zdGFydFk7cio9Zi5wYXJhbXMudG91Y2hSYXRpbyxmLnJ0bCYmKHI9LXIpLGYuc3dpcGVEaXJlY3Rpb249cj4wP1wicHJldlwiOlwibmV4dFwiLHg9citUO3ZhciBpPSEwO2lmKHI+MCYmeD5mLm1pblRyYW5zbGF0ZSgpPyhpPSExLGYucGFyYW1zLnJlc2lzdGFuY2UmJih4PWYubWluVHJhbnNsYXRlKCktMStNYXRoLnBvdygtZi5taW5UcmFuc2xhdGUoKStUK3IsZi5wYXJhbXMucmVzaXN0YW5jZVJhdGlvKSkpOjA+ciYmeDxmLm1heFRyYW5zbGF0ZSgpJiYoaT0hMSxmLnBhcmFtcy5yZXNpc3RhbmNlJiYoeD1mLm1heFRyYW5zbGF0ZSgpKzEtTWF0aC5wb3coZi5tYXhUcmFuc2xhdGUoKS1ULXIsZi5wYXJhbXMucmVzaXN0YW5jZVJhdGlvKSkpLGkmJihlLnByZXZlbnRlZEJ5TmVzdGVkU3dpcGVyPSEwKSwhZi5wYXJhbXMuYWxsb3dTd2lwZVRvTmV4dCYmXCJuZXh0XCI9PT1mLnN3aXBlRGlyZWN0aW9uJiZUPngmJih4PVQpLCFmLnBhcmFtcy5hbGxvd1N3aXBlVG9QcmV2JiZcInByZXZcIj09PWYuc3dpcGVEaXJlY3Rpb24mJng+VCYmKHg9VCksZi5wYXJhbXMuZm9sbG93RmluZ2VyKXtpZihmLnBhcmFtcy50aHJlc2hvbGQ+MCl7aWYoIShNYXRoLmFicyhyKT5mLnBhcmFtcy50aHJlc2hvbGR8fFMpKXJldHVybiB2b2lkKHg9VCk7aWYoIVMpcmV0dXJuIFM9ITAsZi50b3VjaGVzLnN0YXJ0WD1mLnRvdWNoZXMuY3VycmVudFgsZi50b3VjaGVzLnN0YXJ0WT1mLnRvdWNoZXMuY3VycmVudFkseD1ULHZvaWQoZi50b3VjaGVzLmRpZmY9dCgpP2YudG91Y2hlcy5jdXJyZW50WC1mLnRvdWNoZXMuc3RhcnRYOmYudG91Y2hlcy5jdXJyZW50WS1mLnRvdWNoZXMuc3RhcnRZKX0oZi5wYXJhbXMuZnJlZU1vZGV8fGYucGFyYW1zLndhdGNoU2xpZGVzUHJvZ3Jlc3MpJiZmLnVwZGF0ZUFjdGl2ZUluZGV4KCksZi5wYXJhbXMuZnJlZU1vZGUmJigwPT09SS5sZW5ndGgmJkkucHVzaCh7cG9zaXRpb246Zi50b3VjaGVzW3QoKT9cInN0YXJ0WFwiOlwic3RhcnRZXCJdLHRpbWU6Yn0pLEkucHVzaCh7cG9zaXRpb246Zi50b3VjaGVzW3QoKT9cImN1cnJlbnRYXCI6XCJjdXJyZW50WVwiXSx0aW1lOihuZXcgRGF0ZSkuZ2V0VGltZSgpfSkpLGYudXBkYXRlUHJvZ3Jlc3MoeCksZi5zZXRXcmFwcGVyVHJhbnNsYXRlKHgpfX19fX19LGYub25Ub3VjaEVuZD1mdW5jdGlvbihlKXtpZihlLm9yaWdpbmFsRXZlbnQmJihlPWUub3JpZ2luYWxFdmVudCksZi5lbWl0KFwib25Ub3VjaEVuZFwiLGYsZSksZyl7Zi5wYXJhbXMuZ3JhYkN1cnNvciYmdyYmZyYmKGYuY29udGFpbmVyWzBdLnN0eWxlLmN1cnNvcj1cIm1vdmVcIixmLmNvbnRhaW5lclswXS5zdHlsZS5jdXJzb3I9XCItd2Via2l0LWdyYWJcIixmLmNvbnRhaW5lclswXS5zdHlsZS5jdXJzb3I9XCItbW96LWdyYWJcIixmLmNvbnRhaW5lclswXS5zdHlsZS5jdXJzb3I9XCJncmFiXCIpO3ZhciBhPURhdGUubm93KCksdD1hLWI7aWYoZi5hbGxvd0NsaWNrJiYoZi51cGRhdGVDbGlja2VkU2xpZGUoZSksZi5lbWl0KFwib25UYXBcIixmLGUpLDMwMD50JiZhLXo+MzAwJiYoQyYmY2xlYXJUaW1lb3V0KEMpLEM9c2V0VGltZW91dChmdW5jdGlvbigpe2YmJihmLnBhcmFtcy5wYWdpbmF0aW9uSGlkZSYmZi5wYWdpbmF0aW9uQ29udGFpbmVyLmxlbmd0aD4wJiYhaChlLnRhcmdldCkuaGFzQ2xhc3MoZi5wYXJhbXMuYnVsbGV0Q2xhc3MpJiZmLnBhZ2luYXRpb25Db250YWluZXIudG9nZ2xlQ2xhc3MoZi5wYXJhbXMucGFnaW5hdGlvbkhpZGRlbkNsYXNzKSxmLmVtaXQoXCJvbkNsaWNrXCIsZixlKSl9LDMwMCkpLDMwMD50JiYzMDA+YS16JiYoQyYmY2xlYXJUaW1lb3V0KEMpLGYuZW1pdChcIm9uRG91YmxlVGFwXCIsZixlKSkpLHo9RGF0ZS5ub3coKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZiYmZi5hbGxvd0NsaWNrJiYoZi5hbGxvd0NsaWNrPSEwKX0sMCksIWd8fCF3fHwhZi5zd2lwZURpcmVjdGlvbnx8MD09PWYudG91Y2hlcy5kaWZmfHx4PT09VClyZXR1cm4gdm9pZChnPXc9ITEpO2c9dz0hMTt2YXIgcztpZihzPWYucGFyYW1zLmZvbGxvd0Zpbmdlcj9mLnJ0bD9mLnRyYW5zbGF0ZTotZi50cmFuc2xhdGU6LXgsZi5wYXJhbXMuZnJlZU1vZGUpe2lmKHM8LWYubWluVHJhbnNsYXRlKCkpcmV0dXJuIHZvaWQgZi5zbGlkZVRvKGYuYWN0aXZlSW5kZXgpO2lmKHM+LWYubWF4VHJhbnNsYXRlKCkpcmV0dXJuIHZvaWQgZi5zbGlkZVRvKGYuc2xpZGVzLmxlbmd0aC0xKTtpZihmLnBhcmFtcy5mcmVlTW9kZU1vbWVudHVtKXtpZihJLmxlbmd0aD4xKXt2YXIgcj1JLnBvcCgpLGk9SS5wb3AoKSxuPXIucG9zaXRpb24taS5wb3NpdGlvbixvPXIudGltZS1pLnRpbWU7Zi52ZWxvY2l0eT1uL28sZi52ZWxvY2l0eT1mLnZlbG9jaXR5LzIsTWF0aC5hYnMoZi52ZWxvY2l0eSk8LjAyJiYoZi52ZWxvY2l0eT0wKSwobz4xNTB8fChuZXcgRGF0ZSkuZ2V0VGltZSgpLXIudGltZT4zMDApJiYoZi52ZWxvY2l0eT0wKX1lbHNlIGYudmVsb2NpdHk9MDtJLmxlbmd0aD0wO3ZhciBsPTFlMypmLnBhcmFtcy5mcmVlTW9kZU1vbWVudHVtUmF0aW8scD1mLnZlbG9jaXR5KmwsZD1mLnRyYW5zbGF0ZStwO2YucnRsJiYoZD0tZCk7dmFyIHUsYz0hMSxtPTIwKk1hdGguYWJzKGYudmVsb2NpdHkpKmYucGFyYW1zLmZyZWVNb2RlTW9tZW50dW1Cb3VuY2VSYXRpbztkPGYubWF4VHJhbnNsYXRlKCkmJihmLnBhcmFtcy5mcmVlTW9kZU1vbWVudHVtQm91bmNlPyhkK2YubWF4VHJhbnNsYXRlKCk8LW0mJihkPWYubWF4VHJhbnNsYXRlKCktbSksdT1mLm1heFRyYW5zbGF0ZSgpLGM9ITAsTT0hMCk6ZD1mLm1heFRyYW5zbGF0ZSgpKSxkPmYubWluVHJhbnNsYXRlKCkmJihmLnBhcmFtcy5mcmVlTW9kZU1vbWVudHVtQm91bmNlPyhkLWYubWluVHJhbnNsYXRlKCk+bSYmKGQ9Zi5taW5UcmFuc2xhdGUoKSttKSx1PWYubWluVHJhbnNsYXRlKCksYz0hMCxNPSEwKTpkPWYubWluVHJhbnNsYXRlKCkpLDAhPT1mLnZlbG9jaXR5JiYobD1NYXRoLmFicyhmLnJ0bD8oLWQtZi50cmFuc2xhdGUpL2YudmVsb2NpdHk6KGQtZi50cmFuc2xhdGUpL2YudmVsb2NpdHkpKSxmLnBhcmFtcy5mcmVlTW9kZU1vbWVudHVtQm91bmNlJiZjPyhmLnVwZGF0ZVByb2dyZXNzKHUpLGYuc2V0V3JhcHBlclRyYW5zaXRpb24obCksZi5zZXRXcmFwcGVyVHJhbnNsYXRlKGQpLGYub25UcmFuc2l0aW9uU3RhcnQoKSxmLmFuaW1hdGluZz0hMCxmLndyYXBwZXIudHJhbnNpdGlvbkVuZChmdW5jdGlvbigpe00mJihmLmVtaXQoXCJvbk1vbWVudHVtQm91bmNlXCIsZiksZi5zZXRXcmFwcGVyVHJhbnNpdGlvbihmLnBhcmFtcy5zcGVlZCksZi5zZXRXcmFwcGVyVHJhbnNsYXRlKHUpLGYud3JhcHBlci50cmFuc2l0aW9uRW5kKGZ1bmN0aW9uKCl7Zi5vblRyYW5zaXRpb25FbmQoKX0pKX0pKTpmLnZlbG9jaXR5PyhmLnVwZGF0ZVByb2dyZXNzKGQpLGYuc2V0V3JhcHBlclRyYW5zaXRpb24obCksZi5zZXRXcmFwcGVyVHJhbnNsYXRlKGQpLGYub25UcmFuc2l0aW9uU3RhcnQoKSxmLmFuaW1hdGluZ3x8KGYuYW5pbWF0aW5nPSEwLGYud3JhcHBlci50cmFuc2l0aW9uRW5kKGZ1bmN0aW9uKCl7Zi5vblRyYW5zaXRpb25FbmQoKX0pKSk6Zi51cGRhdGVQcm9ncmVzcyhkKSxmLnVwZGF0ZUFjdGl2ZUluZGV4KCl9cmV0dXJuIHZvaWQoKCFmLnBhcmFtcy5mcmVlTW9kZU1vbWVudHVtfHx0Pj1mLnBhcmFtcy5sb25nU3dpcGVzTXMpJiYoZi51cGRhdGVQcm9ncmVzcygpLGYudXBkYXRlQWN0aXZlSW5kZXgoKSkpfXZhciB2LHk9MCxTPWYuc2xpZGVzU2l6ZXNHcmlkWzBdO2Zvcih2PTA7djxmLnNsaWRlc0dyaWQubGVuZ3RoO3YrPWYucGFyYW1zLnNsaWRlc1Blckdyb3VwKVwidW5kZWZpbmVkXCIhPXR5cGVvZiBmLnNsaWRlc0dyaWRbditmLnBhcmFtcy5zbGlkZXNQZXJHcm91cF0/cz49Zi5zbGlkZXNHcmlkW3ZdJiZzPGYuc2xpZGVzR3JpZFt2K2YucGFyYW1zLnNsaWRlc1Blckdyb3VwXSYmKHk9dixTPWYuc2xpZGVzR3JpZFt2K2YucGFyYW1zLnNsaWRlc1Blckdyb3VwXS1mLnNsaWRlc0dyaWRbdl0pOnM+PWYuc2xpZGVzR3JpZFt2XSYmKHk9dixTPWYuc2xpZGVzR3JpZFtmLnNsaWRlc0dyaWQubGVuZ3RoLTFdLWYuc2xpZGVzR3JpZFtmLnNsaWRlc0dyaWQubGVuZ3RoLTJdKTt2YXIgUD0ocy1mLnNsaWRlc0dyaWRbeV0pL1M7aWYodD5mLnBhcmFtcy5sb25nU3dpcGVzTXMpe2lmKCFmLnBhcmFtcy5sb25nU3dpcGVzKXJldHVybiB2b2lkIGYuc2xpZGVUbyhmLmFjdGl2ZUluZGV4KTtcIm5leHRcIj09PWYuc3dpcGVEaXJlY3Rpb24mJmYuc2xpZGVUbyhQPj1mLnBhcmFtcy5sb25nU3dpcGVzUmF0aW8/eStmLnBhcmFtcy5zbGlkZXNQZXJHcm91cDp5KSxcInByZXZcIj09PWYuc3dpcGVEaXJlY3Rpb24mJmYuc2xpZGVUbyhQPjEtZi5wYXJhbXMubG9uZ1N3aXBlc1JhdGlvP3krZi5wYXJhbXMuc2xpZGVzUGVyR3JvdXA6eSl9ZWxzZXtpZighZi5wYXJhbXMuc2hvcnRTd2lwZXMpcmV0dXJuIHZvaWQgZi5zbGlkZVRvKGYuYWN0aXZlSW5kZXgpO1wibmV4dFwiPT09Zi5zd2lwZURpcmVjdGlvbiYmZi5zbGlkZVRvKHkrZi5wYXJhbXMuc2xpZGVzUGVyR3JvdXApLFwicHJldlwiPT09Zi5zd2lwZURpcmVjdGlvbiYmZi5zbGlkZVRvKHkpfX19LGYuX3NsaWRlVG89ZnVuY3Rpb24oZSxhKXtyZXR1cm4gZi5zbGlkZVRvKGUsYSwhMCwhMCl9LGYuc2xpZGVUbz1mdW5jdGlvbihlLGEscyxyKXtcInVuZGVmaW5lZFwiPT10eXBlb2YgcyYmKHM9ITApLFwidW5kZWZpbmVkXCI9PXR5cGVvZiBlJiYoZT0wKSwwPmUmJihlPTApLGYuc25hcEluZGV4PU1hdGguZmxvb3IoZS9mLnBhcmFtcy5zbGlkZXNQZXJHcm91cCksZi5zbmFwSW5kZXg+PWYuc25hcEdyaWQubGVuZ3RoJiYoZi5zbmFwSW5kZXg9Zi5zbmFwR3JpZC5sZW5ndGgtMSk7dmFyIGk9LWYuc25hcEdyaWRbZi5zbmFwSW5kZXhdO2YucGFyYW1zLmF1dG9wbGF5JiZmLmF1dG9wbGF5aW5nJiYocnx8IWYucGFyYW1zLmF1dG9wbGF5RGlzYWJsZU9uSW50ZXJhY3Rpb24/Zi5wYXVzZUF1dG9wbGF5KGEpOmYuc3RvcEF1dG9wbGF5KCkpLGYudXBkYXRlUHJvZ3Jlc3MoaSk7Zm9yKHZhciBuPTA7bjxmLnNsaWRlc0dyaWQubGVuZ3RoO24rKyktaT49Zi5zbGlkZXNHcmlkW25dJiYoZT1uKTtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgYSYmKGE9Zi5wYXJhbXMuc3BlZWQpLGYucHJldmlvdXNJbmRleD1mLmFjdGl2ZUluZGV4fHwwLGYuYWN0aXZlSW5kZXg9ZSxpPT09Zi50cmFuc2xhdGUpcmV0dXJuIGYudXBkYXRlQ2xhc3NlcygpLCExO2Yub25UcmFuc2l0aW9uU3RhcnQocyk7dCgpP2k6MCx0KCk/MDppO3JldHVybiAwPT09YT8oZi5zZXRXcmFwcGVyVHJhbnNpdGlvbigwKSxmLnNldFdyYXBwZXJUcmFuc2xhdGUoaSksZi5vblRyYW5zaXRpb25FbmQocykpOihmLnNldFdyYXBwZXJUcmFuc2l0aW9uKGEpLGYuc2V0V3JhcHBlclRyYW5zbGF0ZShpKSxmLmFuaW1hdGluZ3x8KGYuYW5pbWF0aW5nPSEwLGYud3JhcHBlci50cmFuc2l0aW9uRW5kKGZ1bmN0aW9uKCl7Zi5vblRyYW5zaXRpb25FbmQocyl9KSkpLGYudXBkYXRlQ2xhc3NlcygpLCEwfSxmLm9uVHJhbnNpdGlvblN0YXJ0PWZ1bmN0aW9uKGUpe1widW5kZWZpbmVkXCI9PXR5cGVvZiBlJiYoZT0hMCksZi5sYXp5JiZmLmxhenkub25UcmFuc2l0aW9uU3RhcnQoKSxlJiYoZi5lbWl0KFwib25UcmFuc2l0aW9uU3RhcnRcIixmKSxmLmFjdGl2ZUluZGV4IT09Zi5wcmV2aW91c0luZGV4JiZmLmVtaXQoXCJvblNsaWRlQ2hhbmdlU3RhcnRcIixmKSl9LGYub25UcmFuc2l0aW9uRW5kPWZ1bmN0aW9uKGUpe2YuYW5pbWF0aW5nPSExLGYuc2V0V3JhcHBlclRyYW5zaXRpb24oMCksXCJ1bmRlZmluZWRcIj09dHlwZW9mIGUmJihlPSEwKSxmLmxhenkmJmYubGF6eS5vblRyYW5zaXRpb25FbmQoKSxlJiYoZi5lbWl0KFwib25UcmFuc2l0aW9uRW5kXCIsZiksZi5hY3RpdmVJbmRleCE9PWYucHJldmlvdXNJbmRleCYmZi5lbWl0KFwib25TbGlkZUNoYW5nZUVuZFwiLGYpKSxmLnBhcmFtcy5oYXNobmF2JiZmLmhhc2huYXYmJmYuaGFzaG5hdi5zZXRIYXNoKCl9LGYuc2xpZGVOZXh0PWZ1bmN0aW9uKGUsYSx0KXtpZihmLnBhcmFtcy5sb29wKXtpZihmLmFuaW1hdGluZylyZXR1cm4hMTtmLmZpeExvb3AoKTt7Zi5jb250YWluZXJbMF0uY2xpZW50TGVmdH1yZXR1cm4gZi5zbGlkZVRvKGYuYWN0aXZlSW5kZXgrZi5wYXJhbXMuc2xpZGVzUGVyR3JvdXAsYSxlLHQpfXJldHVybiBmLnNsaWRlVG8oZi5hY3RpdmVJbmRleCtmLnBhcmFtcy5zbGlkZXNQZXJHcm91cCxhLGUsdCl9LGYuX3NsaWRlTmV4dD1mdW5jdGlvbihlKXtyZXR1cm4gZi5zbGlkZU5leHQoITAsZSwhMCl9LGYuc2xpZGVQcmV2PWZ1bmN0aW9uKGUsYSx0KXtpZihmLnBhcmFtcy5sb29wKXtpZihmLmFuaW1hdGluZylyZXR1cm4hMTtmLmZpeExvb3AoKTt7Zi5jb250YWluZXJbMF0uY2xpZW50TGVmdH1yZXR1cm4gZi5zbGlkZVRvKGYuYWN0aXZlSW5kZXgtMSxhLGUsdCl9cmV0dXJuIGYuc2xpZGVUbyhmLmFjdGl2ZUluZGV4LTEsYSxlLHQpfSxmLl9zbGlkZVByZXY9ZnVuY3Rpb24oZSl7cmV0dXJuIGYuc2xpZGVQcmV2KCEwLGUsITApfSxmLnNsaWRlUmVzZXQ9ZnVuY3Rpb24oZSxhKXtyZXR1cm4gZi5zbGlkZVRvKGYuYWN0aXZlSW5kZXgsYSxlKX0sZi5zZXRXcmFwcGVyVHJhbnNpdGlvbj1mdW5jdGlvbihlLGEpe2Yud3JhcHBlci50cmFuc2l0aW9uKGUpLFwic2xpZGVcIiE9PWYucGFyYW1zLmVmZmVjdCYmZi5lZmZlY3RzW2YucGFyYW1zLmVmZmVjdF0mJmYuZWZmZWN0c1tmLnBhcmFtcy5lZmZlY3RdLnNldFRyYW5zaXRpb24oZSksZi5wYXJhbXMucGFyYWxsYXgmJmYucGFyYWxsYXgmJmYucGFyYWxsYXguc2V0VHJhbnNpdGlvbihlKSxmLnBhcmFtcy5zY3JvbGxiYXImJmYuc2Nyb2xsYmFyJiZmLnNjcm9sbGJhci5zZXRUcmFuc2l0aW9uKGUpLGYucGFyYW1zLmNvbnRyb2wmJmYuY29udHJvbGxlciYmZi5jb250cm9sbGVyLnNldFRyYW5zaXRpb24oZSxhKSxmLmVtaXQoXCJvblNldFRyYW5zaXRpb25cIixmLGUpfSxmLnNldFdyYXBwZXJUcmFuc2xhdGU9ZnVuY3Rpb24oZSxhLHMpe3ZhciByPTAsaT0wLG49MDt0KCk/cj1mLnJ0bD8tZTplOmk9ZSxmLnBhcmFtcy52aXJ0dWFsVHJhbnNsYXRlfHxmLndyYXBwZXIudHJhbnNmb3JtKGYuc3VwcG9ydC50cmFuc2Zvcm1zM2Q/XCJ0cmFuc2xhdGUzZChcIityK1wicHgsIFwiK2krXCJweCwgXCIrbitcInB4KVwiOlwidHJhbnNsYXRlKFwiK3IrXCJweCwgXCIraStcInB4KVwiKSxmLnRyYW5zbGF0ZT10KCk/cjppLGEmJmYudXBkYXRlQWN0aXZlSW5kZXgoKSxcInNsaWRlXCIhPT1mLnBhcmFtcy5lZmZlY3QmJmYuZWZmZWN0c1tmLnBhcmFtcy5lZmZlY3RdJiZmLmVmZmVjdHNbZi5wYXJhbXMuZWZmZWN0XS5zZXRUcmFuc2xhdGUoZi50cmFuc2xhdGUpLGYucGFyYW1zLnBhcmFsbGF4JiZmLnBhcmFsbGF4JiZmLnBhcmFsbGF4LnNldFRyYW5zbGF0ZShmLnRyYW5zbGF0ZSksZi5wYXJhbXMuc2Nyb2xsYmFyJiZmLnNjcm9sbGJhciYmZi5zY3JvbGxiYXIuc2V0VHJhbnNsYXRlKGYudHJhbnNsYXRlKSxmLnBhcmFtcy5jb250cm9sJiZmLmNvbnRyb2xsZXImJmYuY29udHJvbGxlci5zZXRUcmFuc2xhdGUoZi50cmFuc2xhdGUscyksZi5lbWl0KFwib25TZXRUcmFuc2xhdGVcIixmLGYudHJhbnNsYXRlKX0sZi5nZXRUcmFuc2xhdGU9ZnVuY3Rpb24oZSxhKXt2YXIgdCxzLHIsaTtyZXR1cm5cInVuZGVmaW5lZFwiPT10eXBlb2YgYSYmKGE9XCJ4XCIpLGYucGFyYW1zLnZpcnR1YWxUcmFuc2xhdGU/Zi5ydGw/LWYudHJhbnNsYXRlOmYudHJhbnNsYXRlOihyPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGUsbnVsbCksd2luZG93LldlYktpdENTU01hdHJpeD9pPW5ldyBXZWJLaXRDU1NNYXRyaXgoXCJub25lXCI9PT1yLndlYmtpdFRyYW5zZm9ybT9cIlwiOnIud2Via2l0VHJhbnNmb3JtKTooaT1yLk1velRyYW5zZm9ybXx8ci5PVHJhbnNmb3JtfHxyLk1zVHJhbnNmb3JtfHxyLm1zVHJhbnNmb3JtfHxyLnRyYW5zZm9ybXx8ci5nZXRQcm9wZXJ0eVZhbHVlKFwidHJhbnNmb3JtXCIpLnJlcGxhY2UoXCJ0cmFuc2xhdGUoXCIsXCJtYXRyaXgoMSwgMCwgMCwgMSxcIiksdD1pLnRvU3RyaW5nKCkuc3BsaXQoXCIsXCIpKSxcInhcIj09PWEmJihzPXdpbmRvdy5XZWJLaXRDU1NNYXRyaXg/aS5tNDE6cGFyc2VGbG9hdCgxNj09PXQubGVuZ3RoP3RbMTJdOnRbNF0pKSxcInlcIj09PWEmJihzPXdpbmRvdy5XZWJLaXRDU1NNYXRyaXg/aS5tNDI6cGFyc2VGbG9hdCgxNj09PXQubGVuZ3RoP3RbMTNdOnRbNV0pKSxmLnJ0bCYmcyYmKHM9LXMpLHN8fDApfSxmLmdldFdyYXBwZXJUcmFuc2xhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuXCJ1bmRlZmluZWRcIj09dHlwZW9mIGUmJihlPXQoKT9cInhcIjpcInlcIiksZi5nZXRUcmFuc2xhdGUoZi53cmFwcGVyWzBdLGUpfSxmLm9ic2VydmVycz1bXSxmLmluaXRPYnNlcnZlcnM9ZnVuY3Rpb24oKXtpZihmLnBhcmFtcy5vYnNlcnZlUGFyZW50cylmb3IodmFyIGU9Zi5jb250YWluZXIucGFyZW50cygpLGE9MDthPGUubGVuZ3RoO2ErKylpKGVbYV0pO2koZi5jb250YWluZXJbMF0se2NoaWxkTGlzdDohMX0pLGkoZi53cmFwcGVyWzBdLHthdHRyaWJ1dGVzOiExfSl9LGYuZGlzY29ubmVjdE9ic2VydmVycz1mdW5jdGlvbigpe2Zvcih2YXIgZT0wO2U8Zi5vYnNlcnZlcnMubGVuZ3RoO2UrKylmLm9ic2VydmVyc1tlXS5kaXNjb25uZWN0KCk7Zi5vYnNlcnZlcnM9W119LGYuY3JlYXRlTG9vcD1mdW5jdGlvbigpe2Yud3JhcHBlci5jaGlsZHJlbihcIi5cIitmLnBhcmFtcy5zbGlkZUNsYXNzK1wiLlwiK2YucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpLnJlbW92ZSgpO1xudmFyIGU9Zi53cmFwcGVyLmNoaWxkcmVuKFwiLlwiK2YucGFyYW1zLnNsaWRlQ2xhc3MpO2YubG9vcGVkU2xpZGVzPXBhcnNlSW50KGYucGFyYW1zLmxvb3BlZFNsaWRlc3x8Zi5wYXJhbXMuc2xpZGVzUGVyVmlldywxMCksZi5sb29wZWRTbGlkZXM9Zi5sb29wZWRTbGlkZXMrZi5wYXJhbXMubG9vcEFkZGl0aW9uYWxTbGlkZXMsZi5sb29wZWRTbGlkZXM+ZS5sZW5ndGgmJihmLmxvb3BlZFNsaWRlcz1lLmxlbmd0aCk7dmFyIGEsdD1bXSxzPVtdO2ZvcihlLmVhY2goZnVuY3Rpb24oYSxyKXt2YXIgaT1oKHRoaXMpO2E8Zi5sb29wZWRTbGlkZXMmJnMucHVzaChyKSxhPGUubGVuZ3RoJiZhPj1lLmxlbmd0aC1mLmxvb3BlZFNsaWRlcyYmdC5wdXNoKHIpLGkuYXR0cihcImRhdGEtc3dpcGVyLXNsaWRlLWluZGV4XCIsYSl9KSxhPTA7YTxzLmxlbmd0aDthKyspZi53cmFwcGVyLmFwcGVuZChoKHNbYV0uY2xvbmVOb2RlKCEwKSkuYWRkQ2xhc3MoZi5wYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcykpO2ZvcihhPXQubGVuZ3RoLTE7YT49MDthLS0pZi53cmFwcGVyLnByZXBlbmQoaCh0W2FdLmNsb25lTm9kZSghMCkpLmFkZENsYXNzKGYucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpKX0sZi5kZXN0cm95TG9vcD1mdW5jdGlvbigpe2Yud3JhcHBlci5jaGlsZHJlbihcIi5cIitmLnBhcmFtcy5zbGlkZUNsYXNzK1wiLlwiK2YucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpLnJlbW92ZSgpLGYuc2xpZGVzLnJlbW92ZUF0dHIoXCJkYXRhLXN3aXBlci1zbGlkZS1pbmRleFwiKX0sZi5maXhMb29wPWZ1bmN0aW9uKCl7dmFyIGU7Zi5hY3RpdmVJbmRleDxmLmxvb3BlZFNsaWRlcz8oZT1mLnNsaWRlcy5sZW5ndGgtMypmLmxvb3BlZFNsaWRlcytmLmFjdGl2ZUluZGV4LGUrPWYubG9vcGVkU2xpZGVzLGYuc2xpZGVUbyhlLDAsITEsITApKTooXCJhdXRvXCI9PT1mLnBhcmFtcy5zbGlkZXNQZXJWaWV3JiZmLmFjdGl2ZUluZGV4Pj0yKmYubG9vcGVkU2xpZGVzfHxmLmFjdGl2ZUluZGV4PmYuc2xpZGVzLmxlbmd0aC0yKmYucGFyYW1zLnNsaWRlc1BlclZpZXcpJiYoZT0tZi5zbGlkZXMubGVuZ3RoK2YuYWN0aXZlSW5kZXgrZi5sb29wZWRTbGlkZXMsZSs9Zi5sb29wZWRTbGlkZXMsZi5zbGlkZVRvKGUsMCwhMSwhMCkpfSxmLmFwcGVuZFNsaWRlPWZ1bmN0aW9uKGUpe2lmKGYucGFyYW1zLmxvb3AmJmYuZGVzdHJveUxvb3AoKSxcIm9iamVjdFwiPT10eXBlb2YgZSYmZS5sZW5ndGgpZm9yKHZhciBhPTA7YTxlLmxlbmd0aDthKyspZVthXSYmZi53cmFwcGVyLmFwcGVuZChlW2FdKTtlbHNlIGYud3JhcHBlci5hcHBlbmQoZSk7Zi5wYXJhbXMubG9vcCYmZi5jcmVhdGVMb29wKCksZi5wYXJhbXMub2JzZXJ2ZXImJmYuc3VwcG9ydC5vYnNlcnZlcnx8Zi51cGRhdGUoITApfSxmLnByZXBlbmRTbGlkZT1mdW5jdGlvbihlKXtmLnBhcmFtcy5sb29wJiZmLmRlc3Ryb3lMb29wKCk7dmFyIGE9Zi5hY3RpdmVJbmRleCsxO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLmxlbmd0aCl7Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0KyspZVt0XSYmZi53cmFwcGVyLnByZXBlbmQoZVt0XSk7YT1mLmFjdGl2ZUluZGV4K2UubGVuZ3RofWVsc2UgZi53cmFwcGVyLnByZXBlbmQoZSk7Zi5wYXJhbXMubG9vcCYmZi5jcmVhdGVMb29wKCksZi5wYXJhbXMub2JzZXJ2ZXImJmYuc3VwcG9ydC5vYnNlcnZlcnx8Zi51cGRhdGUoITApLGYuc2xpZGVUbyhhLDAsITEpfSxmLnJlbW92ZVNsaWRlPWZ1bmN0aW9uKGUpe2YucGFyYW1zLmxvb3AmJmYuZGVzdHJveUxvb3AoKTt2YXIgYSx0PWYuYWN0aXZlSW5kZXg7aWYoXCJvYmplY3RcIj09dHlwZW9mIGUmJmUubGVuZ3RoKXtmb3IodmFyIHM9MDtzPGUubGVuZ3RoO3MrKylhPWVbc10sZi5zbGlkZXNbYV0mJmYuc2xpZGVzLmVxKGEpLnJlbW92ZSgpLHQ+YSYmdC0tO3Q9TWF0aC5tYXgodCwwKX1lbHNlIGE9ZSxmLnNsaWRlc1thXSYmZi5zbGlkZXMuZXEoYSkucmVtb3ZlKCksdD5hJiZ0LS0sdD1NYXRoLm1heCh0LDApO2YucGFyYW1zLm9ic2VydmVyJiZmLnN1cHBvcnQub2JzZXJ2ZXJ8fGYudXBkYXRlKCEwKSxmLnNsaWRlVG8odCwwLCExKX0sZi5yZW1vdmVBbGxTbGlkZXM9ZnVuY3Rpb24oKXtmb3IodmFyIGU9W10sYT0wO2E8Zi5zbGlkZXMubGVuZ3RoO2ErKyllLnB1c2goYSk7Zi5yZW1vdmVTbGlkZShlKX0sZi5lZmZlY3RzPXtmYWRlOntmYWRlSW5kZXg6bnVsbCxzZXRUcmFuc2xhdGU6ZnVuY3Rpb24oKXtmb3IodmFyIGU9MDtlPGYuc2xpZGVzLmxlbmd0aDtlKyspe3ZhciBhPWYuc2xpZGVzLmVxKGUpLHM9YVswXS5zd2lwZXJTbGlkZU9mZnNldCxyPS1zO2YucGFyYW1zLnZpcnR1YWxUcmFuc2xhdGV8fChyLT1mLnRyYW5zbGF0ZSk7dmFyIGk9MDt0KCl8fChpPXIscj0wKTt2YXIgbj1mLnBhcmFtcy5mYWRlLmNyb3NzRmFkZT9NYXRoLm1heCgxLU1hdGguYWJzKGFbMF0ucHJvZ3Jlc3MpLDApOjErTWF0aC5taW4oTWF0aC5tYXgoYVswXS5wcm9ncmVzcywtMSksMCk7bj4wJiYxPm4mJihmLmVmZmVjdHMuZmFkZS5mYWRlSW5kZXg9ZSksYS5jc3Moe29wYWNpdHk6bn0pLnRyYW5zZm9ybShcInRyYW5zbGF0ZTNkKFwiK3IrXCJweCwgXCIraStcInB4LCAwcHgpXCIpfX0sc2V0VHJhbnNpdGlvbjpmdW5jdGlvbihlKXtpZihmLnNsaWRlcy50cmFuc2l0aW9uKGUpLGYucGFyYW1zLnZpcnR1YWxUcmFuc2xhdGUmJjAhPT1lKXt2YXIgYT1udWxsIT09Zi5lZmZlY3RzLmZhZGUuZmFkZUluZGV4P2YuZWZmZWN0cy5mYWRlLmZhZGVJbmRleDpmLmFjdGl2ZUluZGV4O2Yuc2xpZGVzLmVxKGEpLnRyYW5zaXRpb25FbmQoZnVuY3Rpb24oKXtmb3IodmFyIGU9W1wid2Via2l0VHJhbnNpdGlvbkVuZFwiLFwidHJhbnNpdGlvbmVuZFwiLFwib1RyYW5zaXRpb25FbmRcIixcIk1TVHJhbnNpdGlvbkVuZFwiLFwibXNUcmFuc2l0aW9uRW5kXCJdLGE9MDthPGUubGVuZ3RoO2ErKylmLndyYXBwZXIudHJpZ2dlcihlW2FdKX0pfX19LGN1YmU6e3NldFRyYW5zbGF0ZTpmdW5jdGlvbigpe3ZhciBlLGE9MDtmLnBhcmFtcy5jdWJlLnNoYWRvdyYmKHQoKT8oZT1mLndyYXBwZXIuZmluZChcIi5zd2lwZXItY3ViZS1zaGFkb3dcIiksMD09PWUubGVuZ3RoJiYoZT1oKCc8ZGl2IGNsYXNzPVwic3dpcGVyLWN1YmUtc2hhZG93XCI+PC9kaXY+JyksZi53cmFwcGVyLmFwcGVuZChlKSksZS5jc3Moe2hlaWdodDpmLndpZHRoK1wicHhcIn0pKTooZT1mLmNvbnRhaW5lci5maW5kKFwiLnN3aXBlci1jdWJlLXNoYWRvd1wiKSwwPT09ZS5sZW5ndGgmJihlPWgoJzxkaXYgY2xhc3M9XCJzd2lwZXItY3ViZS1zaGFkb3dcIj48L2Rpdj4nKSxmLmNvbnRhaW5lci5hcHBlbmQoZSkpKSk7Zm9yKHZhciBzPTA7czxmLnNsaWRlcy5sZW5ndGg7cysrKXt2YXIgcj1mLnNsaWRlcy5lcShzKSxpPTkwKnMsbj1NYXRoLmZsb29yKGkvMzYwKTtmLnJ0bCYmKGk9LWksbj1NYXRoLmZsb29yKC1pLzM2MCkpO3ZhciBvPU1hdGgubWF4KE1hdGgubWluKHJbMF0ucHJvZ3Jlc3MsMSksLTEpLGw9MCxwPTAsZD0wO3MlND09PTA/KGw9NCotbipmLnNpemUsZD0wKToocy0xKSU0PT09MD8obD0wLGQ9NCotbipmLnNpemUpOihzLTIpJTQ9PT0wPyhsPWYuc2l6ZSs0Km4qZi5zaXplLGQ9Zi5zaXplKToocy0zKSU0PT09MCYmKGw9LWYuc2l6ZSxkPTMqZi5zaXplKzQqZi5zaXplKm4pLGYucnRsJiYobD0tbCksdCgpfHwocD1sLGw9MCk7dmFyIHU9XCJyb3RhdGVYKFwiKyh0KCk/MDotaSkrXCJkZWcpIHJvdGF0ZVkoXCIrKHQoKT9pOjApK1wiZGVnKSB0cmFuc2xhdGUzZChcIitsK1wicHgsIFwiK3ArXCJweCwgXCIrZCtcInB4KVwiO2lmKDE+PW8mJm8+LTEmJihhPTkwKnMrOTAqbyxmLnJ0bCYmKGE9OTAqLXMtOTAqbykpLHIudHJhbnNmb3JtKHUpLGYucGFyYW1zLmN1YmUuc2xpZGVTaGFkb3dzKXt2YXIgYz1yLmZpbmQodCgpP1wiLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdFwiOlwiLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wXCIpLG09ci5maW5kKHQoKT9cIi5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0XCI6XCIuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b21cIik7MD09PWMubGVuZ3RoJiYoYz1oKCc8ZGl2IGNsYXNzPVwic3dpcGVyLXNsaWRlLXNoYWRvdy0nKyh0KCk/XCJsZWZ0XCI6XCJ0b3BcIikrJ1wiPjwvZGl2PicpLHIuYXBwZW5kKGMpKSwwPT09bS5sZW5ndGgmJihtPWgoJzxkaXYgY2xhc3M9XCJzd2lwZXItc2xpZGUtc2hhZG93LScrKHQoKT9cInJpZ2h0XCI6XCJib3R0b21cIikrJ1wiPjwvZGl2PicpLHIuYXBwZW5kKG0pKTt7clswXS5wcm9ncmVzc31jLmxlbmd0aCYmKGNbMF0uc3R5bGUub3BhY2l0eT0tclswXS5wcm9ncmVzcyksbS5sZW5ndGgmJihtWzBdLnN0eWxlLm9wYWNpdHk9clswXS5wcm9ncmVzcyl9fWlmKGYud3JhcHBlci5jc3Moe1wiLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luXCI6XCI1MCUgNTAlIC1cIitmLnNpemUvMitcInB4XCIsXCItbW96LXRyYW5zZm9ybS1vcmlnaW5cIjpcIjUwJSA1MCUgLVwiK2Yuc2l6ZS8yK1wicHhcIixcIi1tcy10cmFuc2Zvcm0tb3JpZ2luXCI6XCI1MCUgNTAlIC1cIitmLnNpemUvMitcInB4XCIsXCJ0cmFuc2Zvcm0tb3JpZ2luXCI6XCI1MCUgNTAlIC1cIitmLnNpemUvMitcInB4XCJ9KSxmLnBhcmFtcy5jdWJlLnNoYWRvdylpZih0KCkpZS50cmFuc2Zvcm0oXCJ0cmFuc2xhdGUzZCgwcHgsIFwiKyhmLndpZHRoLzIrZi5wYXJhbXMuY3ViZS5zaGFkb3dPZmZzZXQpK1wicHgsIFwiKy1mLndpZHRoLzIrXCJweCkgcm90YXRlWCg5MGRlZykgcm90YXRlWigwZGVnKSBzY2FsZShcIitmLnBhcmFtcy5jdWJlLnNoYWRvd1NjYWxlK1wiKVwiKTtlbHNle3ZhciB2PU1hdGguYWJzKGEpLTkwKk1hdGguZmxvb3IoTWF0aC5hYnMoYSkvOTApLGc9MS41LShNYXRoLnNpbigyKnYqTWF0aC5QSS8zNjApLzIrTWF0aC5jb3MoMip2Kk1hdGguUEkvMzYwKS8yKSx3PWYucGFyYW1zLmN1YmUuc2hhZG93U2NhbGUsYj1mLnBhcmFtcy5jdWJlLnNoYWRvd1NjYWxlL2cseT1mLnBhcmFtcy5jdWJlLnNoYWRvd09mZnNldDtlLnRyYW5zZm9ybShcInNjYWxlM2QoXCIrdytcIiwgMSwgXCIrYitcIikgdHJhbnNsYXRlM2QoMHB4LCBcIisoZi5oZWlnaHQvMit5KStcInB4LCBcIistZi5oZWlnaHQvMi9iK1wicHgpIHJvdGF0ZVgoLTkwZGVnKVwiKX12YXIgeD1mLmlzU2FmYXJpfHxmLmlzVWlXZWJWaWV3Py1mLnNpemUvMjowO2Yud3JhcHBlci50cmFuc2Zvcm0oXCJ0cmFuc2xhdGUzZCgwcHgsMCxcIit4K1wicHgpIHJvdGF0ZVgoXCIrKHQoKT8wOmEpK1wiZGVnKSByb3RhdGVZKFwiKyh0KCk/LWE6MCkrXCJkZWcpXCIpfSxzZXRUcmFuc2l0aW9uOmZ1bmN0aW9uKGUpe2Yuc2xpZGVzLnRyYW5zaXRpb24oZSkuZmluZChcIi5zd2lwZXItc2xpZGUtc2hhZG93LXRvcCwgLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHQsIC5zd2lwZXItc2xpZGUtc2hhZG93LWJvdHRvbSwgLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdFwiKS50cmFuc2l0aW9uKGUpLGYucGFyYW1zLmN1YmUuc2hhZG93JiYhdCgpJiZmLmNvbnRhaW5lci5maW5kKFwiLnN3aXBlci1jdWJlLXNoYWRvd1wiKS50cmFuc2l0aW9uKGUpfX0sY292ZXJmbG93OntzZXRUcmFuc2xhdGU6ZnVuY3Rpb24oKXtmb3IodmFyIGU9Zi50cmFuc2xhdGUsYT10KCk/LWUrZi53aWR0aC8yOi1lK2YuaGVpZ2h0LzIscz10KCk/Zi5wYXJhbXMuY292ZXJmbG93LnJvdGF0ZTotZi5wYXJhbXMuY292ZXJmbG93LnJvdGF0ZSxyPWYucGFyYW1zLmNvdmVyZmxvdy5kZXB0aCxpPTAsbj1mLnNsaWRlcy5sZW5ndGg7bj5pO2krKyl7dmFyIG89Zi5zbGlkZXMuZXEoaSksbD1mLnNsaWRlc1NpemVzR3JpZFtpXSxwPW9bMF0uc3dpcGVyU2xpZGVPZmZzZXQsZD0oYS1wLWwvMikvbCpmLnBhcmFtcy5jb3ZlcmZsb3cubW9kaWZpZXIsdT10KCk/cypkOjAsYz10KCk/MDpzKmQsbT0tcipNYXRoLmFicyhkKSx2PXQoKT8wOmYucGFyYW1zLmNvdmVyZmxvdy5zdHJldGNoKmQsZz10KCk/Zi5wYXJhbXMuY292ZXJmbG93LnN0cmV0Y2gqZDowO01hdGguYWJzKGcpPC4wMDEmJihnPTApLE1hdGguYWJzKHYpPC4wMDEmJih2PTApLE1hdGguYWJzKG0pPC4wMDEmJihtPTApLE1hdGguYWJzKHUpPC4wMDEmJih1PTApLE1hdGguYWJzKGMpPC4wMDEmJihjPTApO3ZhciB3PVwidHJhbnNsYXRlM2QoXCIrZytcInB4LFwiK3YrXCJweCxcIittK1wicHgpICByb3RhdGVYKFwiK2MrXCJkZWcpIHJvdGF0ZVkoXCIrdStcImRlZylcIjtpZihvLnRyYW5zZm9ybSh3KSxvWzBdLnN0eWxlLnpJbmRleD0tTWF0aC5hYnMoTWF0aC5yb3VuZChkKSkrMSxmLnBhcmFtcy5jb3ZlcmZsb3cuc2xpZGVTaGFkb3dzKXt2YXIgYj1vLmZpbmQodCgpP1wiLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdFwiOlwiLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wXCIpLHk9by5maW5kKHQoKT9cIi5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0XCI6XCIuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b21cIik7MD09PWIubGVuZ3RoJiYoYj1oKCc8ZGl2IGNsYXNzPVwic3dpcGVyLXNsaWRlLXNoYWRvdy0nKyh0KCk/XCJsZWZ0XCI6XCJ0b3BcIikrJ1wiPjwvZGl2PicpLG8uYXBwZW5kKGIpKSwwPT09eS5sZW5ndGgmJih5PWgoJzxkaXYgY2xhc3M9XCJzd2lwZXItc2xpZGUtc2hhZG93LScrKHQoKT9cInJpZ2h0XCI6XCJib3R0b21cIikrJ1wiPjwvZGl2PicpLG8uYXBwZW5kKHkpKSxiLmxlbmd0aCYmKGJbMF0uc3R5bGUub3BhY2l0eT1kPjA/ZDowKSx5Lmxlbmd0aCYmKHlbMF0uc3R5bGUub3BhY2l0eT0tZD4wPy1kOjApfX1pZihmLmJyb3dzZXIuaWUpe3ZhciB4PWYud3JhcHBlclswXS5zdHlsZTt4LnBlcnNwZWN0aXZlT3JpZ2luPWErXCJweCA1MCVcIn19LHNldFRyYW5zaXRpb246ZnVuY3Rpb24oZSl7Zi5zbGlkZXMudHJhbnNpdGlvbihlKS5maW5kKFwiLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wLCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1yaWdodCwgLnN3aXBlci1zbGlkZS1zaGFkb3ctYm90dG9tLCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0XCIpLnRyYW5zaXRpb24oZSl9fX0sZi5sYXp5PXtpbml0aWFsSW1hZ2VMb2FkZWQ6ITEsbG9hZEltYWdlSW5TbGlkZTpmdW5jdGlvbihlKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgZSYmMCE9PWYuc2xpZGVzLmxlbmd0aCl7dmFyIGE9Zi5zbGlkZXMuZXEoZSksdD1hLmZpbmQoXCJpbWcuc3dpcGVyLWxhenk6bm90KC5zd2lwZXItbGF6eS1sb2FkZWQpOm5vdCguc3dpcGVyLWxhenktbG9hZGluZylcIik7MCE9PXQubGVuZ3RoJiZ0LmVhY2goZnVuY3Rpb24oKXt2YXIgZT1oKHRoaXMpO2UuYWRkQ2xhc3MoXCJzd2lwZXItbGF6eS1sb2FkaW5nXCIpO3ZhciB0PWUuYXR0cihcImRhdGEtc3JjXCIpO2YubG9hZEltYWdlKGVbMF0sdCwhMSxmdW5jdGlvbigpe2UuYXR0cihcInNyY1wiLHQpLGUucmVtb3ZlQXR0cihcImRhdGEtc3JjXCIpLGUuYWRkQ2xhc3MoXCJzd2lwZXItbGF6eS1sb2FkZWRcIikucmVtb3ZlQ2xhc3MoXCJzd2lwZXItbGF6eS1sb2FkaW5nXCIpLGEuZmluZChcIi5zd2lwZXItbGF6eS1wcmVsb2FkZXIsIC5wcmVsb2FkZXJcIikucmVtb3ZlKCksZi5lbWl0KFwib25MYXp5SW1hZ2VSZWFkeVwiLGYsYVswXSxlWzBdKX0pLGYuZW1pdChcIm9uTGF6eUltYWdlTG9hZFwiLGYsYVswXSxlWzBdKX0pfX0sbG9hZDpmdW5jdGlvbigpe2lmKGYucGFyYW1zLndhdGNoU2xpZGVzVmlzaWJpbGl0eSlmLndyYXBwZXIuY2hpbGRyZW4oXCIuXCIrZi5wYXJhbXMuc2xpZGVWaXNpYmxlQ2xhc3MpLmVhY2goZnVuY3Rpb24oKXtmLmxhenkubG9hZEltYWdlSW5TbGlkZShoKHRoaXMpLmluZGV4KCkpfSk7ZWxzZSBpZihmLnBhcmFtcy5zbGlkZXNQZXJWaWV3PjEpZm9yKHZhciBlPWYuYWN0aXZlSW5kZXg7ZTxmLmFjdGl2ZUluZGV4K2YucGFyYW1zLnNsaWRlc1BlclZpZXc7ZSsrKWYuc2xpZGVzW2VdJiZmLmxhenkubG9hZEltYWdlSW5TbGlkZShlKTtlbHNlIGYubGF6eS5sb2FkSW1hZ2VJblNsaWRlKGYuYWN0aXZlSW5kZXgpO2lmKGYucGFyYW1zLmxhenlMb2FkaW5nSW5QcmV2TmV4dCl7dmFyIGE9Zi53cmFwcGVyLmNoaWxkcmVuKFwiLlwiK2YucGFyYW1zLnNsaWRlTmV4dENsYXNzKTthLmxlbmd0aD4wJiZmLmxhenkubG9hZEltYWdlSW5TbGlkZShhLmluZGV4KCkpO3ZhciB0PWYud3JhcHBlci5jaGlsZHJlbihcIi5cIitmLnBhcmFtcy5zbGlkZVByZXZDbGFzcyk7dC5sZW5ndGg+MCYmZi5sYXp5LmxvYWRJbWFnZUluU2xpZGUodC5pbmRleCgpKX19LG9uVHJhbnNpdGlvblN0YXJ0OmZ1bmN0aW9uKCl7Zi5wYXJhbXMubGF6eUxvYWRpbmcmJihmLnBhcmFtcy5sYXp5TG9hZGluZ09uVHJhbnNpdGlvblN0YXJ0fHwhZi5wYXJhbXMubGF6eUxvYWRpbmdPblRyYW5zaXRpb25TdGFydCYmIWYubGF6eS5pbml0aWFsSW1hZ2VMb2FkZWQpJiYoZi5sYXp5LmluaXRpYWxJbWFnZUxvYWRlZD0hMCxmLmxhenkubG9hZCgpKX0sb25UcmFuc2l0aW9uRW5kOmZ1bmN0aW9uKCl7Zi5wYXJhbXMubGF6eUxvYWRpbmcmJiFmLnBhcmFtcy5sYXp5TG9hZGluZ09uVHJhbnNpdGlvblN0YXJ0JiZmLmxhenkubG9hZCgpfX0sZi5zY3JvbGxiYXI9e3NldDpmdW5jdGlvbigpe2lmKGYucGFyYW1zLnNjcm9sbGJhcil7dmFyIGU9Zi5zY3JvbGxiYXI7ZS50cmFjaz1oKGYucGFyYW1zLnNjcm9sbGJhciksZS5kcmFnPWUudHJhY2suZmluZChcIi5zd2lwZXItc2Nyb2xsYmFyLWRyYWdcIiksMD09PWUuZHJhZy5sZW5ndGgmJihlLmRyYWc9aCgnPGRpdiBjbGFzcz1cInN3aXBlci1zY3JvbGxiYXItZHJhZ1wiPjwvZGl2PicpLGUudHJhY2suYXBwZW5kKGUuZHJhZykpLGUuZHJhZ1swXS5zdHlsZS53aWR0aD1cIlwiLGUuZHJhZ1swXS5zdHlsZS5oZWlnaHQ9XCJcIixlLnRyYWNrU2l6ZT10KCk/ZS50cmFja1swXS5vZmZzZXRXaWR0aDplLnRyYWNrWzBdLm9mZnNldEhlaWdodCxlLmRpdmlkZXI9Zi5zaXplL2YudmlydHVhbFNpemUsZS5tb3ZlRGl2aWRlcj1lLmRpdmlkZXIqKGUudHJhY2tTaXplL2Yuc2l6ZSksZS5kcmFnU2l6ZT1lLnRyYWNrU2l6ZSplLmRpdmlkZXIsdCgpP2UuZHJhZ1swXS5zdHlsZS53aWR0aD1lLmRyYWdTaXplK1wicHhcIjplLmRyYWdbMF0uc3R5bGUuaGVpZ2h0PWUuZHJhZ1NpemUrXCJweFwiLGUudHJhY2tbMF0uc3R5bGUuZGlzcGxheT1lLmRpdmlkZXI+PTE/XCJub25lXCI6XCJcIixmLnBhcmFtcy5zY3JvbGxiYXJIaWRlJiYoZS50cmFja1swXS5zdHlsZS5vcGFjaXR5PTApfX0sc2V0VHJhbnNsYXRlOmZ1bmN0aW9uKCl7aWYoZi5wYXJhbXMuc2Nyb2xsYmFyKXt2YXIgZSxhPWYuc2Nyb2xsYmFyLHM9KGYudHJhbnNsYXRlfHwwLGEuZHJhZ1NpemUpO2U9KGEudHJhY2tTaXplLWEuZHJhZ1NpemUpKmYucHJvZ3Jlc3MsZi5ydGwmJnQoKT8oZT0tZSxlPjA/KHM9YS5kcmFnU2l6ZS1lLGU9MCk6LWUrYS5kcmFnU2l6ZT5hLnRyYWNrU2l6ZSYmKHM9YS50cmFja1NpemUrZSkpOjA+ZT8ocz1hLmRyYWdTaXplK2UsZT0wKTplK2EuZHJhZ1NpemU+YS50cmFja1NpemUmJihzPWEudHJhY2tTaXplLWUpLHQoKT8oYS5kcmFnLnRyYW5zZm9ybShmLnN1cHBvcnQudHJhbnNmb3JtczNkP1widHJhbnNsYXRlM2QoXCIrZStcInB4LCAwLCAwKVwiOlwidHJhbnNsYXRlWChcIitlK1wicHgpXCIpLGEuZHJhZ1swXS5zdHlsZS53aWR0aD1zK1wicHhcIik6KGEuZHJhZy50cmFuc2Zvcm0oZi5zdXBwb3J0LnRyYW5zZm9ybXMzZD9cInRyYW5zbGF0ZTNkKDBweCwgXCIrZStcInB4LCAwKVwiOlwidHJhbnNsYXRlWShcIitlK1wicHgpXCIpLGEuZHJhZ1swXS5zdHlsZS5oZWlnaHQ9cytcInB4XCIpLGYucGFyYW1zLnNjcm9sbGJhckhpZGUmJihjbGVhclRpbWVvdXQoYS50aW1lb3V0KSxhLnRyYWNrWzBdLnN0eWxlLm9wYWNpdHk9MSxhLnRpbWVvdXQ9c2V0VGltZW91dChmdW5jdGlvbigpe2EudHJhY2tbMF0uc3R5bGUub3BhY2l0eT0wLGEudHJhY2sudHJhbnNpdGlvbig0MDApfSwxZTMpKX19LHNldFRyYW5zaXRpb246ZnVuY3Rpb24oZSl7Zi5wYXJhbXMuc2Nyb2xsYmFyJiZmLnNjcm9sbGJhci5kcmFnLnRyYW5zaXRpb24oZSl9fSxmLmNvbnRyb2xsZXI9e3NldFRyYW5zbGF0ZTpmdW5jdGlvbihlLGEpe3ZhciB0LHMscj1mLnBhcmFtcy5jb250cm9sO2lmKGYuaXNBcnJheShyKSlmb3IodmFyIGk9MDtpPHIubGVuZ3RoO2krKylyW2ldIT09YSYmcltpXWluc3RhbmNlb2YgU3dpcGVyJiYoZT1yW2ldLnJ0bCYmXCJob3Jpem9udGFsXCI9PT1yW2ldLnBhcmFtcy5kaXJlY3Rpb24/LWYudHJhbnNsYXRlOmYudHJhbnNsYXRlLHQ9KHJbaV0ubWF4VHJhbnNsYXRlKCktcltpXS5taW5UcmFuc2xhdGUoKSkvKGYubWF4VHJhbnNsYXRlKCktZi5taW5UcmFuc2xhdGUoKSkscz0oZS1mLm1pblRyYW5zbGF0ZSgpKSp0K3JbaV0ubWluVHJhbnNsYXRlKCksZi5wYXJhbXMuY29udHJvbEludmVyc2UmJihzPXJbaV0ubWF4VHJhbnNsYXRlKCktcykscltpXS51cGRhdGVQcm9ncmVzcyhzKSxyW2ldLnNldFdyYXBwZXJUcmFuc2xhdGUocywhMSxmKSxyW2ldLnVwZGF0ZUFjdGl2ZUluZGV4KCkpO2Vsc2UgciBpbnN0YW5jZW9mIFN3aXBlciYmYSE9PXImJihlPXIucnRsJiZcImhvcml6b250YWxcIj09PXIucGFyYW1zLmRpcmVjdGlvbj8tZi50cmFuc2xhdGU6Zi50cmFuc2xhdGUsdD0oci5tYXhUcmFuc2xhdGUoKS1yLm1pblRyYW5zbGF0ZSgpKS8oZi5tYXhUcmFuc2xhdGUoKS1mLm1pblRyYW5zbGF0ZSgpKSxzPShlLWYubWluVHJhbnNsYXRlKCkpKnQrci5taW5UcmFuc2xhdGUoKSxmLnBhcmFtcy5jb250cm9sSW52ZXJzZSYmKHM9ci5tYXhUcmFuc2xhdGUoKS1zKSxyLnVwZGF0ZVByb2dyZXNzKHMpLHIuc2V0V3JhcHBlclRyYW5zbGF0ZShzLCExLGYpLHIudXBkYXRlQWN0aXZlSW5kZXgoKSl9LHNldFRyYW5zaXRpb246ZnVuY3Rpb24oZSxhKXt2YXIgdD1mLnBhcmFtcy5jb250cm9sO2lmKGYuaXNBcnJheSh0KSlmb3IodmFyIHM9MDtzPHQubGVuZ3RoO3MrKyl0W3NdIT09YSYmdFtzXWluc3RhbmNlb2YgU3dpcGVyJiZ0W3NdLnNldFdyYXBwZXJUcmFuc2l0aW9uKGUsZik7ZWxzZSB0IGluc3RhbmNlb2YgU3dpcGVyJiZhIT09dCYmdC5zZXRXcmFwcGVyVHJhbnNpdGlvbihlLGYpfX0sZi5oYXNobmF2PXtpbml0OmZ1bmN0aW9uKCl7aWYoZi5wYXJhbXMuaGFzaG5hdil7Zi5oYXNobmF2LmluaXRpYWxpemVkPSEwO3ZhciBlPWRvY3VtZW50LmxvY2F0aW9uLmhhc2gucmVwbGFjZShcIiNcIixcIlwiKTtpZihlKWZvcih2YXIgYT0wLHQ9MCxzPWYuc2xpZGVzLmxlbmd0aDtzPnQ7dCsrKXt2YXIgcj1mLnNsaWRlcy5lcSh0KSxpPXIuYXR0cihcImRhdGEtaGFzaFwiKTtpZihpPT09ZSYmIXIuaGFzQ2xhc3MoZi5wYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcykpe3ZhciBuPXIuaW5kZXgoKTtmLnNsaWRlVG8obixhLGYucGFyYW1zLnJ1bkNhbGxiYWNrc09uSW5pdCwhMCl9fX19LHNldEhhc2g6ZnVuY3Rpb24oKXtmLmhhc2huYXYuaW5pdGlhbGl6ZWQmJmYucGFyYW1zLmhhc2huYXYmJihkb2N1bWVudC5sb2NhdGlvbi5oYXNoPWYuc2xpZGVzLmVxKGYuYWN0aXZlSW5kZXgpLmF0dHIoXCJkYXRhLWhhc2hcIil8fFwiXCIpfX0sZi5kaXNhYmxlS2V5Ym9hcmRDb250cm9sPWZ1bmN0aW9uKCl7aChkb2N1bWVudCkub2ZmKFwia2V5ZG93blwiLG4pfSxmLmVuYWJsZUtleWJvYXJkQ29udHJvbD1mdW5jdGlvbigpe2goZG9jdW1lbnQpLm9uKFwia2V5ZG93blwiLG4pfSxmLl93aGVlbEV2ZW50PSExLGYuX2xhc3RXaGVlbFNjcm9sbFRpbWU9KG5ldyBEYXRlKS5nZXRUaW1lKCksZi5wYXJhbXMubW91c2V3aGVlbENvbnRyb2wpe2lmKHZvaWQgMCE9PWRvY3VtZW50Lm9ubW91c2V3aGVlbCYmKGYuX3doZWVsRXZlbnQ9XCJtb3VzZXdoZWVsXCIpLCFmLl93aGVlbEV2ZW50KXRyeXtuZXcgV2hlZWxFdmVudChcIndoZWVsXCIpLGYuX3doZWVsRXZlbnQ9XCJ3aGVlbFwifWNhdGNoKEQpe31mLl93aGVlbEV2ZW50fHwoZi5fd2hlZWxFdmVudD1cIkRPTU1vdXNlU2Nyb2xsXCIpfWYuZGlzYWJsZU1vdXNld2hlZWxDb250cm9sPWZ1bmN0aW9uKCl7cmV0dXJuIGYuX3doZWVsRXZlbnQ/KGYuY29udGFpbmVyLm9mZihmLl93aGVlbEV2ZW50LG8pLCEwKTohMX0sZi5lbmFibGVNb3VzZXdoZWVsQ29udHJvbD1mdW5jdGlvbigpe3JldHVybiBmLl93aGVlbEV2ZW50PyhmLmNvbnRhaW5lci5vbihmLl93aGVlbEV2ZW50LG8pLCEwKTohMX0sZi5wYXJhbGxheD17c2V0VHJhbnNsYXRlOmZ1bmN0aW9uKCl7Zi5jb250YWluZXIuY2hpbGRyZW4oXCJbZGF0YS1zd2lwZXItcGFyYWxsYXhdLCBbZGF0YS1zd2lwZXItcGFyYWxsYXgteF0sIFtkYXRhLXN3aXBlci1wYXJhbGxheC15XVwiKS5lYWNoKGZ1bmN0aW9uKCl7bCh0aGlzLGYucHJvZ3Jlc3MpfSksZi5zbGlkZXMuZWFjaChmdW5jdGlvbigpe3ZhciBlPWgodGhpcyk7ZS5maW5kKFwiW2RhdGEtc3dpcGVyLXBhcmFsbGF4XSwgW2RhdGEtc3dpcGVyLXBhcmFsbGF4LXhdLCBbZGF0YS1zd2lwZXItcGFyYWxsYXgteV1cIikuZWFjaChmdW5jdGlvbigpe3ZhciBhPU1hdGgubWluKE1hdGgubWF4KGVbMF0ucHJvZ3Jlc3MsLTEpLDEpO2wodGhpcyxhKX0pfSl9LHNldFRyYW5zaXRpb246ZnVuY3Rpb24oZSl7XCJ1bmRlZmluZWRcIj09dHlwZW9mIGUmJihlPWYucGFyYW1zLnNwZWVkKSxmLmNvbnRhaW5lci5maW5kKFwiW2RhdGEtc3dpcGVyLXBhcmFsbGF4XSwgW2RhdGEtc3dpcGVyLXBhcmFsbGF4LXhdLCBbZGF0YS1zd2lwZXItcGFyYWxsYXgteV1cIikuZWFjaChmdW5jdGlvbigpe3ZhciBhPWgodGhpcyksdD1wYXJzZUludChhLmF0dHIoXCJkYXRhLXN3aXBlci1wYXJhbGxheC1kdXJhdGlvblwiKSwxMCl8fGU7MD09PWUmJih0PTApLGEudHJhbnNpdGlvbih0KX0pfX0sZi5fcGx1Z2lucz1bXTtmb3IodmFyIEwgaW4gZi5wbHVnaW5zKXt2YXIgRz1mLnBsdWdpbnNbTF0oZixmLnBhcmFtc1tMXSk7RyYmZi5fcGx1Z2lucy5wdXNoKEcpfXJldHVybiBmLmNhbGxQbHVnaW5zPWZ1bmN0aW9uKGUpe2Zvcih2YXIgYT0wO2E8Zi5fcGx1Z2lucy5sZW5ndGg7YSsrKWUgaW4gZi5fcGx1Z2luc1thXSYmZi5fcGx1Z2luc1thXVtlXShhcmd1bWVudHNbMV0sYXJndW1lbnRzWzJdLGFyZ3VtZW50c1szXSxhcmd1bWVudHNbNF0sYXJndW1lbnRzWzVdKX0sZi5lbWl0dGVyRXZlbnRMaXN0ZW5lcnM9e30sZi5lbWl0PWZ1bmN0aW9uKGUpe2YucGFyYW1zW2VdJiZmLnBhcmFtc1tlXShhcmd1bWVudHNbMV0sYXJndW1lbnRzWzJdLGFyZ3VtZW50c1szXSxhcmd1bWVudHNbNF0sYXJndW1lbnRzWzVdKTt2YXIgYTtpZihmLmVtaXR0ZXJFdmVudExpc3RlbmVyc1tlXSlmb3IoYT0wO2E8Zi5lbWl0dGVyRXZlbnRMaXN0ZW5lcnNbZV0ubGVuZ3RoO2ErKylmLmVtaXR0ZXJFdmVudExpc3RlbmVyc1tlXVthXShhcmd1bWVudHNbMV0sYXJndW1lbnRzWzJdLGFyZ3VtZW50c1szXSxhcmd1bWVudHNbNF0sYXJndW1lbnRzWzVdKTtmLmNhbGxQbHVnaW5zJiZmLmNhbGxQbHVnaW5zKGUsYXJndW1lbnRzWzFdLGFyZ3VtZW50c1syXSxhcmd1bWVudHNbM10sYXJndW1lbnRzWzRdLGFyZ3VtZW50c1s1XSl9LGYub249ZnVuY3Rpb24oZSxhKXtyZXR1cm4gZT1wKGUpLGYuZW1pdHRlckV2ZW50TGlzdGVuZXJzW2VdfHwoZi5lbWl0dGVyRXZlbnRMaXN0ZW5lcnNbZV09W10pLGYuZW1pdHRlckV2ZW50TGlzdGVuZXJzW2VdLnB1c2goYSksZn0sZi5vZmY9ZnVuY3Rpb24oZSxhKXt2YXIgdDtpZihlPXAoZSksXCJ1bmRlZmluZWRcIj09dHlwZW9mIGEpcmV0dXJuIGYuZW1pdHRlckV2ZW50TGlzdGVuZXJzW2VdPVtdLGY7aWYoZi5lbWl0dGVyRXZlbnRMaXN0ZW5lcnNbZV0mJjAhPT1mLmVtaXR0ZXJFdmVudExpc3RlbmVyc1tlXS5sZW5ndGgpe2Zvcih0PTA7dDxmLmVtaXR0ZXJFdmVudExpc3RlbmVyc1tlXS5sZW5ndGg7dCsrKWYuZW1pdHRlckV2ZW50TGlzdGVuZXJzW2VdW3RdPT09YSYmZi5lbWl0dGVyRXZlbnRMaXN0ZW5lcnNbZV0uc3BsaWNlKHQsMSk7cmV0dXJuIGZ9fSxmLm9uY2U9ZnVuY3Rpb24oZSxhKXtlPXAoZSk7dmFyIHQ9ZnVuY3Rpb24oKXthKGFyZ3VtZW50c1swXSxhcmd1bWVudHNbMV0sYXJndW1lbnRzWzJdLGFyZ3VtZW50c1szXSxhcmd1bWVudHNbNF0pLGYub2ZmKGUsdCl9O3JldHVybiBmLm9uKGUsdCksZn0sZi5hMTF5PXttYWtlRm9jdXNhYmxlOmZ1bmN0aW9uKGUpe3JldHVybiBlWzBdLnRhYkluZGV4PVwiMFwiLGV9LGFkZFJvbGU6ZnVuY3Rpb24oZSxhKXtyZXR1cm4gZS5hdHRyKFwicm9sZVwiLGEpLGV9LGFkZExhYmVsOmZ1bmN0aW9uKGUsYSl7cmV0dXJuIGUuYXR0cihcImFyaWEtbGFiZWxcIixhKSxlfSxkaXNhYmxlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsITApLGV9LGVuYWJsZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLCExKSxlfSxvbkVudGVyS2V5OmZ1bmN0aW9uKGUpezEzPT09ZS5rZXlDb2RlJiYoaChlLnRhcmdldCkuaXMoZi5wYXJhbXMubmV4dEJ1dHRvbik/KGYub25DbGlja05leHQoZSksZi5hMTF5Lm5vdGlmeShmLmlzRW5kP2YucGFyYW1zLmxhc3RTbGlkZU1zZzpmLnBhcmFtcy5uZXh0U2xpZGVNc2cpKTpoKGUudGFyZ2V0KS5pcyhmLnBhcmFtcy5wcmV2QnV0dG9uKSYmKGYub25DbGlja1ByZXYoZSksZi5hMTF5Lm5vdGlmeShmLmlzQmVnaW5uaW5nP2YucGFyYW1zLmZpcnN0U2xpZGVNc2c6Zi5wYXJhbXMucHJldlNsaWRlTXNnKSkpfSxsaXZlUmVnaW9uOmgoJzxzcGFuIGNsYXNzPVwic3dpcGVyLW5vdGlmaWNhdGlvblwiIGFyaWEtbGl2ZT1cImFzc2VydGl2ZVwiIGFyaWEtYXRvbWljPVwidHJ1ZVwiPjwvc3Bhbj4nKSxub3RpZnk6ZnVuY3Rpb24oZSl7dmFyIGE9Zi5hMTF5LmxpdmVSZWdpb247MCE9PWEubGVuZ3RoJiYoYS5odG1sKFwiXCIpLGEuaHRtbChlKSl9LGluaXQ6ZnVuY3Rpb24oKXtpZihmLnBhcmFtcy5uZXh0QnV0dG9uKXt2YXIgZT1oKGYucGFyYW1zLm5leHRCdXR0b24pO2YuYTExeS5tYWtlRm9jdXNhYmxlKGUpLGYuYTExeS5hZGRSb2xlKGUsXCJidXR0b25cIiksZi5hMTF5LmFkZExhYmVsKGUsZi5wYXJhbXMubmV4dFNsaWRlTXNnKX1pZihmLnBhcmFtcy5wcmV2QnV0dG9uKXt2YXIgYT1oKGYucGFyYW1zLnByZXZCdXR0b24pO2YuYTExeS5tYWtlRm9jdXNhYmxlKGEpLGYuYTExeS5hZGRSb2xlKGEsXCJidXR0b25cIiksZi5hMTF5LmFkZExhYmVsKGEsZi5wYXJhbXMucHJldlNsaWRlTXNnKX1oKGYuY29udGFpbmVyKS5hcHBlbmQoZi5hMTF5LmxpdmVSZWdpb24pfSxkZXN0cm95OmZ1bmN0aW9uKCl7Zi5hMTF5LmxpdmVSZWdpb24mJmYuYTExeS5saXZlUmVnaW9uLmxlbmd0aD4wJiZmLmExMXkubGl2ZVJlZ2lvbi5yZW1vdmUoKX19LGYuaW5pdD1mdW5jdGlvbigpe2YucGFyYW1zLmxvb3AmJmYuY3JlYXRlTG9vcCgpLGYudXBkYXRlQ29udGFpbmVyU2l6ZSgpLGYudXBkYXRlU2xpZGVzU2l6ZSgpLGYudXBkYXRlUGFnaW5hdGlvbigpLGYucGFyYW1zLnNjcm9sbGJhciYmZi5zY3JvbGxiYXImJmYuc2Nyb2xsYmFyLnNldCgpLFwic2xpZGVcIiE9PWYucGFyYW1zLmVmZmVjdCYmZi5lZmZlY3RzW2YucGFyYW1zLmVmZmVjdF0mJihmLnBhcmFtcy5sb29wfHxmLnVwZGF0ZVByb2dyZXNzKCksZi5lZmZlY3RzW2YucGFyYW1zLmVmZmVjdF0uc2V0VHJhbnNsYXRlKCkpLGYucGFyYW1zLmxvb3A/Zi5zbGlkZVRvKGYucGFyYW1zLmluaXRpYWxTbGlkZStmLmxvb3BlZFNsaWRlcywwLGYucGFyYW1zLnJ1bkNhbGxiYWNrc09uSW5pdCk6KGYuc2xpZGVUbyhmLnBhcmFtcy5pbml0aWFsU2xpZGUsMCxmLnBhcmFtcy5ydW5DYWxsYmFja3NPbkluaXQpLDA9PT1mLnBhcmFtcy5pbml0aWFsU2xpZGUmJihmLnBhcmFsbGF4JiZmLnBhcmFtcy5wYXJhbGxheCYmZi5wYXJhbGxheC5zZXRUcmFuc2xhdGUoKSxmLmxhenkmJmYucGFyYW1zLmxhenlMb2FkaW5nJiZmLmxhenkubG9hZCgpKSksZi5hdHRhY2hFdmVudHMoKSxmLnBhcmFtcy5vYnNlcnZlciYmZi5zdXBwb3J0Lm9ic2VydmVyJiZmLmluaXRPYnNlcnZlcnMoKSxmLnBhcmFtcy5wcmVsb2FkSW1hZ2VzJiYhZi5wYXJhbXMubGF6eUxvYWRpbmcmJmYucHJlbG9hZEltYWdlcygpLGYucGFyYW1zLmF1dG9wbGF5JiZmLnN0YXJ0QXV0b3BsYXkoKSxmLnBhcmFtcy5rZXlib2FyZENvbnRyb2wmJmYuZW5hYmxlS2V5Ym9hcmRDb250cm9sJiZmLmVuYWJsZUtleWJvYXJkQ29udHJvbCgpLGYucGFyYW1zLm1vdXNld2hlZWxDb250cm9sJiZmLmVuYWJsZU1vdXNld2hlZWxDb250cm9sJiZmLmVuYWJsZU1vdXNld2hlZWxDb250cm9sKCksZi5wYXJhbXMuaGFzaG5hdiYmZi5oYXNobmF2JiZmLmhhc2huYXYuaW5pdCgpLGYucGFyYW1zLmExMXkmJmYuYTExeSYmZi5hMTF5LmluaXQoKSxmLmVtaXQoXCJvbkluaXRcIixmKX0sZi5jbGVhbnVwU3R5bGVzPWZ1bmN0aW9uKCl7Zi5jb250YWluZXIucmVtb3ZlQ2xhc3MoZi5jbGFzc05hbWVzLmpvaW4oXCIgXCIpKS5yZW1vdmVBdHRyKFwic3R5bGVcIiksZi53cmFwcGVyLnJlbW92ZUF0dHIoXCJzdHlsZVwiKSxmLnNsaWRlcyYmZi5zbGlkZXMubGVuZ3RoJiZmLnNsaWRlcy5yZW1vdmVDbGFzcyhbZi5wYXJhbXMuc2xpZGVWaXNpYmxlQ2xhc3MsZi5wYXJhbXMuc2xpZGVBY3RpdmVDbGFzcyxmLnBhcmFtcy5zbGlkZU5leHRDbGFzcyxmLnBhcmFtcy5zbGlkZVByZXZDbGFzc10uam9pbihcIiBcIikpLnJlbW92ZUF0dHIoXCJzdHlsZVwiKS5yZW1vdmVBdHRyKFwiZGF0YS1zd2lwZXItY29sdW1uXCIpLnJlbW92ZUF0dHIoXCJkYXRhLXN3aXBlci1yb3dcIiksZi5wYWdpbmF0aW9uQ29udGFpbmVyJiZmLnBhZ2luYXRpb25Db250YWluZXIubGVuZ3RoJiZmLnBhZ2luYXRpb25Db250YWluZXIucmVtb3ZlQ2xhc3MoZi5wYXJhbXMucGFnaW5hdGlvbkhpZGRlbkNsYXNzKSxmLmJ1bGxldHMmJmYuYnVsbGV0cy5sZW5ndGgmJmYuYnVsbGV0cy5yZW1vdmVDbGFzcyhmLnBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyksZi5wYXJhbXMucHJldkJ1dHRvbiYmaChmLnBhcmFtcy5wcmV2QnV0dG9uKS5yZW1vdmVDbGFzcyhmLnBhcmFtcy5idXR0b25EaXNhYmxlZENsYXNzKSxmLnBhcmFtcy5uZXh0QnV0dG9uJiZoKGYucGFyYW1zLm5leHRCdXR0b24pLnJlbW92ZUNsYXNzKGYucGFyYW1zLmJ1dHRvbkRpc2FibGVkQ2xhc3MpLGYucGFyYW1zLnNjcm9sbGJhciYmZi5zY3JvbGxiYXImJihmLnNjcm9sbGJhci50cmFjayYmZi5zY3JvbGxiYXIudHJhY2subGVuZ3RoJiZmLnNjcm9sbGJhci50cmFjay5yZW1vdmVBdHRyKFwic3R5bGVcIiksZi5zY3JvbGxiYXIuZHJhZyYmZi5zY3JvbGxiYXIuZHJhZy5sZW5ndGgmJmYuc2Nyb2xsYmFyLmRyYWcucmVtb3ZlQXR0cihcInN0eWxlXCIpKX0sZi5kZXN0cm95PWZ1bmN0aW9uKGUsYSl7Zi5kZXRhY2hFdmVudHMoKSxmLnN0b3BBdXRvcGxheSgpLGYucGFyYW1zLmxvb3AmJmYuZGVzdHJveUxvb3AoKSxhJiZmLmNsZWFudXBTdHlsZXMoKSxmLmRpc2Nvbm5lY3RPYnNlcnZlcnMoKSxmLnBhcmFtcy5rZXlib2FyZENvbnRyb2wmJmYuZGlzYWJsZUtleWJvYXJkQ29udHJvbCYmZi5kaXNhYmxlS2V5Ym9hcmRDb250cm9sKCksZi5wYXJhbXMubW91c2V3aGVlbENvbnRyb2wmJmYuZGlzYWJsZU1vdXNld2hlZWxDb250cm9sJiZmLmRpc2FibGVNb3VzZXdoZWVsQ29udHJvbCgpLGYucGFyYW1zLmExMXkmJmYuYTExeSYmZi5hMTF5LmRlc3Ryb3koKSxmLmVtaXQoXCJvbkRlc3Ryb3lcIiksZSE9PSExJiYoZj1udWxsKX0sZi5pbml0KCksZn19LFN3aXBlci5wcm90b3R5cGU9e2lzU2FmYXJpOmZ1bmN0aW9uKCl7dmFyIGU9bmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpO3JldHVybiBlLmluZGV4T2YoXCJzYWZhcmlcIik+PTAmJmUuaW5kZXhPZihcImNocm9tZVwiKTwwJiZlLmluZGV4T2YoXCJhbmRyb2lkXCIpPDB9KCksaXNVaVdlYlZpZXc6LyhpUGhvbmV8aVBvZHxpUGFkKS4qQXBwbGVXZWJLaXQoPyEuKlNhZmFyaSkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLGlzQXJyYXk6ZnVuY3Rpb24oZSl7cmV0dXJuXCJbb2JqZWN0IEFycmF5XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5hcHBseShlKX0sYnJvd3Nlcjp7aWU6d2luZG93Lm5hdmlnYXRvci5wb2ludGVyRW5hYmxlZHx8d2luZG93Lm5hdmlnYXRvci5tc1BvaW50ZXJFbmFibGVkLGllVG91Y2g6d2luZG93Lm5hdmlnYXRvci5tc1BvaW50ZXJFbmFibGVkJiZ3aW5kb3cubmF2aWdhdG9yLm1zTWF4VG91Y2hQb2ludHM+MXx8d2luZG93Lm5hdmlnYXRvci5wb2ludGVyRW5hYmxlZCYmd2luZG93Lm5hdmlnYXRvci5tYXhUb3VjaFBvaW50cz4xfSxkZXZpY2U6ZnVuY3Rpb24oKXt2YXIgZT1uYXZpZ2F0b3IudXNlckFnZW50LGE9ZS5tYXRjaCgvKEFuZHJvaWQpOz9bXFxzXFwvXSsoW1xcZC5dKyk/LyksdD1lLm1hdGNoKC8oaVBhZCkuKk9TXFxzKFtcXGRfXSspLykscz0oZS5tYXRjaCgvKGlQb2QpKC4qT1NcXHMoW1xcZF9dKykpPy8pLCF0JiZlLm1hdGNoKC8oaVBob25lXFxzT1MpXFxzKFtcXGRfXSspLykpO3JldHVybntpb3M6dHx8c3x8dCxhbmRyb2lkOmF9fSgpLHN1cHBvcnQ6e3RvdWNoOndpbmRvdy5Nb2Rlcm5penImJk1vZGVybml6ci50b3VjaD09PSEwfHxmdW5jdGlvbigpe3JldHVybiEhKFwib250b3VjaHN0YXJ0XCJpbiB3aW5kb3d8fHdpbmRvdy5Eb2N1bWVudFRvdWNoJiZkb2N1bWVudCBpbnN0YW5jZW9mIERvY3VtZW50VG91Y2gpfSgpLHRyYW5zZm9ybXMzZDp3aW5kb3cuTW9kZXJuaXpyJiZNb2Rlcm5penIuY3NzdHJhbnNmb3JtczNkPT09ITB8fGZ1bmN0aW9uKCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZTtyZXR1cm5cIndlYmtpdFBlcnNwZWN0aXZlXCJpbiBlfHxcIk1velBlcnNwZWN0aXZlXCJpbiBlfHxcIk9QZXJzcGVjdGl2ZVwiaW4gZXx8XCJNc1BlcnNwZWN0aXZlXCJpbiBlfHxcInBlcnNwZWN0aXZlXCJpbiBlfSgpLGZsZXhib3g6ZnVuY3Rpb24oKXtmb3IodmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxhPVwiYWxpZ25JdGVtcyB3ZWJraXRBbGlnbkl0ZW1zIHdlYmtpdEJveEFsaWduIG1zRmxleEFsaWduIG1vekJveEFsaWduIHdlYmtpdEZsZXhEaXJlY3Rpb24gbXNGbGV4RGlyZWN0aW9uIG1vekJveERpcmVjdGlvbiBtb3pCb3hPcmllbnQgd2Via2l0Qm94RGlyZWN0aW9uIHdlYmtpdEJveE9yaWVudFwiLnNwbGl0KFwiIFwiKSx0PTA7dDxhLmxlbmd0aDt0KyspaWYoYVt0XWluIGUpcmV0dXJuITB9KCksb2JzZXJ2ZXI6ZnVuY3Rpb24oKXtyZXR1cm5cIk11dGF0aW9uT2JzZXJ2ZXJcImluIHdpbmRvd3x8XCJXZWJraXRNdXRhdGlvbk9ic2VydmVyXCJpbiB3aW5kb3d9KCl9LHBsdWdpbnM6e319O2Zvcih2YXIgYT1bXCJqUXVlcnlcIixcIlplcHRvXCIsXCJEb203XCJdLHQ9MDt0PGEubGVuZ3RoO3QrKyl3aW5kb3dbYVt0XV0mJmUod2luZG93W2FbdF1dKTt2YXIgcztzPVwidW5kZWZpbmVkXCI9PXR5cGVvZiBEb203P3dpbmRvdy5Eb203fHx3aW5kb3cuWmVwdG98fHdpbmRvdy5qUXVlcnk6RG9tNyxzJiYoXCJ0cmFuc2l0aW9uRW5kXCJpbiBzLmZufHwocy5mbi50cmFuc2l0aW9uRW5kPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIGEoaSl7aWYoaS50YXJnZXQ9PT10aGlzKWZvcihlLmNhbGwodGhpcyxpKSx0PTA7dDxzLmxlbmd0aDt0Kyspci5vZmYoc1t0XSxhKX12YXIgdCxzPVtcIndlYmtpdFRyYW5zaXRpb25FbmRcIixcInRyYW5zaXRpb25lbmRcIixcIm9UcmFuc2l0aW9uRW5kXCIsXCJNU1RyYW5zaXRpb25FbmRcIixcIm1zVHJhbnNpdGlvbkVuZFwiXSxyPXRoaXM7aWYoZSlmb3IodD0wO3Q8cy5sZW5ndGg7dCsrKXIub24oc1t0XSxhKTtyZXR1cm4gdGhpc30pLFwidHJhbnNmb3JtXCJpbiBzLmZufHwocy5mbi50cmFuc2Zvcm09ZnVuY3Rpb24oZSl7Zm9yKHZhciBhPTA7YTx0aGlzLmxlbmd0aDthKyspe3ZhciB0PXRoaXNbYV0uc3R5bGU7dC53ZWJraXRUcmFuc2Zvcm09dC5Nc1RyYW5zZm9ybT10Lm1zVHJhbnNmb3JtPXQuTW96VHJhbnNmb3JtPXQuT1RyYW5zZm9ybT10LnRyYW5zZm9ybT1lfXJldHVybiB0aGlzfSksXCJ0cmFuc2l0aW9uXCJpbiBzLmZufHwocy5mbi50cmFuc2l0aW9uPWZ1bmN0aW9uKGUpe1wic3RyaW5nXCIhPXR5cGVvZiBlJiYoZSs9XCJtc1wiKTtmb3IodmFyIGE9MDthPHRoaXMubGVuZ3RoO2ErKyl7dmFyIHQ9dGhpc1thXS5zdHlsZTt0LndlYmtpdFRyYW5zaXRpb25EdXJhdGlvbj10Lk1zVHJhbnNpdGlvbkR1cmF0aW9uPXQubXNUcmFuc2l0aW9uRHVyYXRpb249dC5Nb3pUcmFuc2l0aW9uRHVyYXRpb249dC5PVHJhbnNpdGlvbkR1cmF0aW9uPXQudHJhbnNpdGlvbkR1cmF0aW9uPWV9cmV0dXJuIHRoaXN9KSl9KCksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz1Td2lwZXI6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kJiZkZWZpbmUoW10sZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtyZXR1cm4gU3dpcGVyfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXBzL3N3aXBlci5qcXVlcnkubWluLmpzLm1hcCJdfQ==
